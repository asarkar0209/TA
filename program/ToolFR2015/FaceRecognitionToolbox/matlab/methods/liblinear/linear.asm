; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0M@JKNLJKBH@L2R_LR_DUAL?$AA@		; `string'
PUBLIC	??_C@_06OKOCDKJ@L1R_LR?$AA@			; `string'
PUBLIC	??_C@_0P@IGDEAKJK@L1R_L2LOSS_SVC?$AA@		; `string'
PUBLIC	??_C@_08IJJEGMMN@MCSVM_CS?$AA@			; `string'
PUBLIC	??_C@_0BE@IJHHBNEB@L2R_L1LOSS_SVC_DUAL?$AA@	; `string'
PUBLIC	??_C@_0P@PKFFCPEB@L2R_L2LOSS_SVC?$AA@		; `string'
PUBLIC	??_C@_0BE@JIAKHHDI@L2R_L2LOSS_SVC_DUAL?$AA@	; `string'
PUBLIC	??_C@_06IIDKFBAH@L2R_LR?$AA@			; `string'
;	COMDAT ??_C@_0M@JKNLJKBH@L2R_LR_DUAL?$AA@
CONST	SEGMENT
??_C@_0M@JKNLJKBH@L2R_LR_DUAL?$AA@ DB 'L2R_LR_DUAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OKOCDKJ@L1R_LR?$AA@
CONST	SEGMENT
??_C@_06OKOCDKJ@L1R_LR?$AA@ DB 'L1R_LR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGDEAKJK@L1R_L2LOSS_SVC?$AA@
CONST	SEGMENT
??_C@_0P@IGDEAKJK@L1R_L2LOSS_SVC?$AA@ DB 'L1R_L2LOSS_SVC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IJJEGMMN@MCSVM_CS?$AA@
CONST	SEGMENT
??_C@_08IJJEGMMN@MCSVM_CS?$AA@ DB 'MCSVM_CS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IJHHBNEB@L2R_L1LOSS_SVC_DUAL?$AA@
CONST	SEGMENT
??_C@_0BE@IJHHBNEB@L2R_L1LOSS_SVC_DUAL?$AA@ DB 'L2R_L1LOSS_SVC_DUAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PKFFCPEB@L2R_L2LOSS_SVC?$AA@
CONST	SEGMENT
??_C@_0P@PKFFCPEB@L2R_L2LOSS_SVC?$AA@ DB 'L2R_L2LOSS_SVC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JIAKHHDI@L2R_L2LOSS_SVC_DUAL?$AA@
CONST	SEGMENT
??_C@_0BE@JIAKHHDI@L2R_L2LOSS_SVC_DUAL?$AA@ DB 'L2R_L2LOSS_SVC_DUAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IIDKFBAH@L2R_LR?$AA@
CONST	SEGMENT
??_C@_06IIDKFBAH@L2R_LR?$AA@ DB 'L2R_LR', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
liblinear_print_string DQ FLAT:?print_string_stdout@@YAXPEBD@Z
	ORG $+8
solver_type_table DQ FLAT:??_C@_06IIDKFBAH@L2R_LR?$AA@
	DQ	FLAT:??_C@_0BE@JIAKHHDI@L2R_L2LOSS_SVC_DUAL?$AA@
	DQ	FLAT:??_C@_0P@PKFFCPEB@L2R_L2LOSS_SVC?$AA@
	DQ	FLAT:??_C@_0BE@IJHHBNEB@L2R_L1LOSS_SVC_DUAL?$AA@
	DQ	FLAT:??_C@_08IJJEGMMN@MCSVM_CS?$AA@
	DQ	FLAT:??_C@_0P@IGDEAKJK@L1R_L2LOSS_SVC?$AA@
	DQ	FLAT:??_C@_06OKOCDKJ@L1R_LR?$AA@
	DQ	FLAT:??_C@_0M@JKNLJKBH@L2R_LR_DUAL?$AA@
	DQ	0000000000000000H
_DATA	ENDS
PUBLIC	??_7function@@6B@				; function::`vftable'
PUBLIC	??1function@@UEAA@XZ				; function::~function
PUBLIC	??_R4function@@6B@				; function::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVfunction@@@8				; function `RTTI Type Descriptor'
PUBLIC	??_R3function@@8				; function::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2function@@8				; function::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@function@@8			; function::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	_purecall:PROC
EXTRN	??_Efunction@@UEAAPEAXI@Z:PROC			; function::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@function@@8
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\tron.h
rdata$r	SEGMENT
??_R1A@?0A@EA@function@@8 DD imagerel ??_R0?AVfunction@@@8 ; function::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3function@@8
rdata$r	ENDS
;	COMDAT ??_R2function@@8
rdata$r	SEGMENT
??_R2function@@8 DD imagerel ??_R1A@?0A@EA@function@@8	; function::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3function@@8
rdata$r	SEGMENT
??_R3function@@8 DD 00H					; function::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2function@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfunction@@@8
_DATA	SEGMENT
??_R0?AVfunction@@@8 DQ FLAT:??_7type_info@@6B@		; function `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfunction@@', 00H
_DATA	ENDS
;	COMDAT ??_R4function@@6B@
rdata$r	SEGMENT
??_R4function@@6B@ DD 01H				; function::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfunction@@@8
	DD	imagerel ??_R3function@@8
	DD	imagerel ??_R4function@@6B@
rdata$r	ENDS
;	COMDAT ??_7function@@6B@
CONST	SEGMENT
??_7function@@6B@ DQ FLAT:??_R4function@@6B@		; function::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:??_Efunction@@UEAAPEAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1function@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1function@@UEAA@XZ PROC				; function::~function, COMDAT
; Line 12
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1function@@UEAA@XZ ENDP				; function::~function
_TEXT	ENDS
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfunction@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+38
	DD	imagerel $unwind$??_Gfunction@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfunction@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??_Gfunction@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfunction@@UEAAPEAXI@Z PROC				; function::`scalar deleting destructor', COMDAT
$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN6@scalar
	call	??3@YAXPEAX@Z				; operator delete
$LN6@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gfunction@@UEAAPEAXI@Z ENDP				; function::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fputs:PROC
EXTRN	__imp___iob_func:PROC
;	COMDAT pdata
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\linear.cpp
pdata	SEGMENT
$pdata$?print_string_stdout@@YAXPEBD@Z DD imagerel ?print_string_stdout@@YAXPEBD@Z
	DD	imagerel ?print_string_stdout@@YAXPEBD@Z+50
	DD	imagerel $unwind$?print_string_stdout@@YAXPEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?print_string_stdout@@YAXPEBD@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?print_string_stdout@@YAXPEBD@Z
_TEXT	SEGMENT
s$ = 48
?print_string_stdout@@YAXPEBD@Z PROC			; print_string_stdout, COMDAT
; Line 25
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 26
	call	QWORD PTR __imp___iob_func
	mov	rcx, rbx
	lea	rdx, QWORD PTR [rax+48]
	call	QWORD PTR __imp_fputs
; Line 27
	call	QWORD PTR __imp___iob_func
	lea	rcx, QWORD PTR [rax+48]
; Line 28
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_fflush
?print_string_stdout@@YAXPEBD@Z ENDP			; print_string_stdout
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_vsprintf:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?info@@YAXPEBDZZ DD imagerel ?info@@YAXPEBDZZ
	DD	imagerel ?info@@YAXPEBDZZ+97
	DD	imagerel $unwind$?info@@YAXPEBDZZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?info@@YAXPEBDZZ DD 022c19H
	DD	047011aH
	DD	imagerel __GSHandlerCheck
	DD	0220H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?info@@YAXPEBDZZ
_TEXT	SEGMENT
buf$ = 32
__$ArrayPad$ = 544
fmt$ = 576
?info@@YAXPEBDZZ PROC					; info, COMDAT
; Line 34
	mov	r11, rsp
	mov	QWORD PTR [r11+8], rcx
	mov	QWORD PTR [r11+16], rdx
	mov	QWORD PTR [r11+24], r8
	mov	QWORD PTR [r11+32], r9
	sub	rsp, 568				; 00000238H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 38
	mov	rdx, rcx
	lea	r8, QWORD PTR [r11+16]
	lea	rcx, QWORD PTR buf$[rsp]
	call	QWORD PTR __imp_vsprintf
; Line 40
	lea	rcx, QWORD PTR buf$[rsp]
	call	QWORD PTR liblinear_print_string
; Line 41
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 568				; 00000238H
	ret	0
?info@@YAXPEBDZZ ENDP					; info
_TEXT	ENDS
PUBLIC	??0function@@QEAA@XZ				; function::function
; Function compile flags: /Ogtp
;	COMDAT ??0function@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0function@@QEAA@XZ PROC				; function::function, COMDAT
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0function@@QEAA@XZ ENDP				; function::function
_TEXT	ENDS
PUBLIC	??_7l2r_lr_fun@@6B@				; l2r_lr_fun::`vftable'
PUBLIC	??1l2r_lr_fun@@UEAA@XZ				; l2r_lr_fun::~l2r_lr_fun
PUBLIC	??_R4l2r_lr_fun@@6B@				; l2r_lr_fun::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVl2r_lr_fun@@@8				; l2r_lr_fun `RTTI Type Descriptor'
PUBLIC	??_R3l2r_lr_fun@@8				; l2r_lr_fun::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2l2r_lr_fun@@8				; l2r_lr_fun::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@l2r_lr_fun@@8			; l2r_lr_fun::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?fun@l2r_lr_fun@@UEAANPEAN@Z			; l2r_lr_fun::fun
PUBLIC	?grad@l2r_lr_fun@@UEAAXPEAN0@Z			; l2r_lr_fun::grad
PUBLIC	?Hv@l2r_lr_fun@@UEAAXPEAN0@Z			; l2r_lr_fun::Hv
PUBLIC	?get_nr_variable@l2r_lr_fun@@UEAAHXZ		; l2r_lr_fun::get_nr_variable
EXTRN	__CxxFrameHandler3:PROC
EXTRN	??_El2r_lr_fun@@UEAAPEAXI@Z:PROC		; l2r_lr_fun::`vector deleting destructor'
;	COMDAT pdata
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\tron.h
pdata	SEGMENT
$pdata$??1l2r_lr_fun@@UEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+76
	DD	imagerel $unwind$??1l2r_lr_fun@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1l2r_lr_fun@@UEAA@XZ DD imagerel ??1l2r_lr_fun@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1l2r_lr_fun@@UEAA@XZ+32
	DD	00H
	DD	imagerel ??1l2r_lr_fun@@UEAA@XZ+60
	DD	0ffffffffH
xdata	ENDS
;	COMDAT ??_R1A@?0A@EA@l2r_lr_fun@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@l2r_lr_fun@@8 DD imagerel ??_R0?AVl2r_lr_fun@@@8 ; l2r_lr_fun::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3l2r_lr_fun@@8
rdata$r	ENDS
;	COMDAT ??_R2l2r_lr_fun@@8
rdata$r	SEGMENT
??_R2l2r_lr_fun@@8 DD imagerel ??_R1A@?0A@EA@l2r_lr_fun@@8 ; l2r_lr_fun::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@function@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3l2r_lr_fun@@8
rdata$r	SEGMENT
??_R3l2r_lr_fun@@8 DD 00H				; l2r_lr_fun::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2l2r_lr_fun@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVl2r_lr_fun@@@8
_DATA	SEGMENT
??_R0?AVl2r_lr_fun@@@8 DQ FLAT:??_7type_info@@6B@	; l2r_lr_fun `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVl2r_lr_fun@@', 00H
_DATA	ENDS
;	COMDAT ??_R4l2r_lr_fun@@6B@
rdata$r	SEGMENT
??_R4l2r_lr_fun@@6B@ DD 01H				; l2r_lr_fun::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVl2r_lr_fun@@@8
	DD	imagerel ??_R3l2r_lr_fun@@8
	DD	imagerel ??_R4l2r_lr_fun@@6B@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1l2r_lr_fun@@UEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1l2r_lr_fun@@UEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1l2r_lr_fun@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1l2r_lr_fun@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1l2r_lr_fun@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1l2r_lr_fun@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT ??_7l2r_lr_fun@@6B@
CONST	SEGMENT
??_7l2r_lr_fun@@6B@ DQ FLAT:??_R4l2r_lr_fun@@6B@	; l2r_lr_fun::`vftable'
	DQ	FLAT:?fun@l2r_lr_fun@@UEAANPEAN@Z
	DQ	FLAT:?grad@l2r_lr_fun@@UEAAXPEAN0@Z
	DQ	FLAT:?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
	DQ	FLAT:?get_nr_variable@l2r_lr_fun@@UEAAHXZ
	DQ	FLAT:??_El2r_lr_fun@@UEAAPEAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1l2r_lr_fun@@UEAA@XZ
_TEXT	SEGMENT
$T8336 = 32
this$ = 64
??1l2r_lr_fun@@UEAA@XZ PROC				; l2r_lr_fun::~l2r_lr_fun, COMDAT
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\linear.cpp
; Line 90
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T8336[rsp], -2
	mov	rbx, rcx
	lea	rax, OFFSET FLAT:??_7l2r_lr_fun@@6B@
	mov	QWORD PTR [rcx], rax
; Line 91
	mov	rcx, QWORD PTR [rcx+16]
	call	??3@YAXPEAX@Z				; operator delete
; Line 92
	mov	rcx, QWORD PTR [rbx+24]
	call	??3@YAXPEAX@Z				; operator delete
; Line 93
	mov	rcx, QWORD PTR [rbx+8]
	call	??3@YAXPEAX@Z				; operator delete
	npad	1
; Line 94
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	QWORD PTR [rbx], rax
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1l2r_lr_fun@@UEAA@XZ ENDP				; l2r_lr_fun::~l2r_lr_fun
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8336 = 32
this$ = 64
?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA PROC		; `l2r_lr_fun::~l2r_lr_fun'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1function@@UEAA@XZ			; function::~function
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1l2r_lr_fun@@UEAA@XZ@4HA ENDP		; `l2r_lr_fun::~l2r_lr_fun'::`1'::dtor$0
; Function compile flags: /Ogtp
text$x	ENDS
;	COMDAT ?get_nr_variable@l2r_lr_fun@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?get_nr_variable@l2r_lr_fun@@UEAAHXZ PROC		; l2r_lr_fun::get_nr_variable, COMDAT
; Line 143
	mov	rax, QWORD PTR [rcx+32]
	mov	eax, DWORD PTR [rax+4]
; Line 144
	ret	0
?get_nr_variable@l2r_lr_fun@@UEAAHXZ ENDP		; l2r_lr_fun::get_nr_variable
_TEXT	ENDS
PUBLIC	?Xv@l2r_lr_fun@@AEAAXPEAN0@Z			; l2r_lr_fun::Xv
EXTRN	_fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?Xv@l2r_lr_fun@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
Xv$ = 24
?Xv@l2r_lr_fun@@AEAAXPEAN0@Z PROC			; l2r_lr_fun::Xv, COMDAT
; Line 166
	mov	rax, QWORD PTR [rcx+32]
; Line 169
	movsxd	r9, DWORD PTR [rax]
	mov	r10, QWORD PTR [rax+16]
	test	r9, r9
	jle	SHORT $LN3@Xv
; Line 172
	sub	r10, r8
	xor	r11d, r11d
	npad	10
$LL5@Xv:
	mov	rcx, QWORD PTR [r10+r8]
	mov	QWORD PTR [r8], r11
; Line 173
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN4@Xv
	npad	2
$LL2@Xv:
; Line 175
	cdqe
; Line 176
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rdx+rax*8-8]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [r8]
	movsdx	QWORD PTR [r8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL2@Xv
$LN4@Xv:
; Line 169
	add	r8, 8
	sub	r9, 1
	jne	SHORT $LL5@Xv
$LN3@Xv:
; Line 179
	fatret	0
?Xv@l2r_lr_fun@@AEAAXPEAN0@Z ENDP			; l2r_lr_fun::Xv
_TEXT	ENDS
PUBLIC	?XTv@l2r_lr_fun@@AEAAXPEAN0@Z			; l2r_lr_fun::XTv
EXTRN	memset:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XTv@l2r_lr_fun@@AEAAXPEAN0@Z DD imagerel $LN17
	DD	imagerel $LN17+161
	DD	imagerel $unwind$?XTv@l2r_lr_fun@@AEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XTv@l2r_lr_fun@@AEAAXPEAN0@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?XTv@l2r_lr_fun@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
XTv$ = 64
?XTv@l2r_lr_fun@@AEAAXPEAN0@Z PROC			; l2r_lr_fun::XTv, COMDAT
; Line 182
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 184
	mov	rax, QWORD PTR [rcx+32]
	mov	rsi, r8
	mov	rdi, rdx
	movsxd	rbp, DWORD PTR [rax]
; Line 185
	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	call	QWORD PTR [rax+24]
; Line 186
	mov	rcx, QWORD PTR [rbx+32]
	mov	rbx, QWORD PTR [rcx+16]
; Line 188
	movsxd	r8, eax
	test	eax, eax
	jle	SHORT $LN8@XTv
	shl	r8, 3
	xor	edx, edx
	mov	rcx, rsi
	call	memset
$LN8@XTv:
; Line 190
	mov	rdx, rbp
	test	ebp, ebp
	jle	SHORT $LN3@XTv
	sub	rbx, rdi
$LL5@XTv:
; Line 192
	mov	rcx, QWORD PTR [rbx+rdi]
; Line 193
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN4@XTv
	npad	4
$LL2@XTv:
; Line 195
	movsdx	xmm0, QWORD PTR [rcx+8]
	cdqe
; Line 196
	add	rcx, 16
	mulsd	xmm0, QWORD PTR [rdi]
	addsd	xmm0, QWORD PTR [rsi+rax*8-8]
	movsdx	QWORD PTR [rsi+rax*8-8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL2@XTv
$LN4@XTv:
; Line 190
	add	rdi, 8
	sub	rdx, 1
	jne	SHORT $LL5@XTv
$LN3@XTv:
; Line 199
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?XTv@l2r_lr_fun@@AEAAXPEAN0@Z ENDP			; l2r_lr_fun::XTv
_TEXT	ENDS
PUBLIC	??_7l2r_l2_svc_fun@@6B@				; l2r_l2_svc_fun::`vftable'
PUBLIC	??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z	; l2r_l2_svc_fun::l2r_l2_svc_fun
PUBLIC	??_R4l2r_l2_svc_fun@@6B@			; l2r_l2_svc_fun::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVl2r_l2_svc_fun@@@8			; l2r_l2_svc_fun `RTTI Type Descriptor'
PUBLIC	??_R3l2r_l2_svc_fun@@8				; l2r_l2_svc_fun::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2l2r_l2_svc_fun@@8				; l2r_l2_svc_fun::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@l2r_l2_svc_fun@@8			; l2r_l2_svc_fun::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?fun@l2r_l2_svc_fun@@UEAANPEAN@Z		; l2r_l2_svc_fun::fun
PUBLIC	?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z		; l2r_l2_svc_fun::grad
PUBLIC	?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z		; l2r_l2_svc_fun::Hv
PUBLIC	?get_nr_variable@l2r_l2_svc_fun@@UEAAHXZ	; l2r_l2_svc_fun::get_nr_variable
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??_El2r_l2_svc_fun@@UEAAPEAXI@Z:PROC		; l2r_l2_svc_fun::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z DD imagerel $LN25
	DD	imagerel $LN25+387
	DD	imagerel $unwind$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA DD imagerel ?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA
	DD	imagerel ?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z DD imagerel ??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z
	DD	0ffffffffH
	DD	imagerel ??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z+55
	DD	00H
	DD	imagerel ??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z+348
	DD	0ffffffffH
xdata	ENDS
;	COMDAT ??_R1A@?0A@EA@l2r_l2_svc_fun@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@l2r_l2_svc_fun@@8 DD imagerel ??_R0?AVl2r_l2_svc_fun@@@8 ; l2r_l2_svc_fun::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3l2r_l2_svc_fun@@8
rdata$r	ENDS
;	COMDAT ??_R2l2r_l2_svc_fun@@8
rdata$r	SEGMENT
??_R2l2r_l2_svc_fun@@8 DD imagerel ??_R1A@?0A@EA@l2r_l2_svc_fun@@8 ; l2r_l2_svc_fun::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@function@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3l2r_l2_svc_fun@@8
rdata$r	SEGMENT
??_R3l2r_l2_svc_fun@@8 DD 00H				; l2r_l2_svc_fun::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2l2r_l2_svc_fun@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVl2r_l2_svc_fun@@@8
_DATA	SEGMENT
??_R0?AVl2r_l2_svc_fun@@@8 DQ FLAT:??_7type_info@@6B@	; l2r_l2_svc_fun `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVl2r_l2_svc_fun@@', 00H
_DATA	ENDS
;	COMDAT ??_R4l2r_l2_svc_fun@@6B@
rdata$r	SEGMENT
??_R4l2r_l2_svc_fun@@6B@ DD 01H				; l2r_l2_svc_fun::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVl2r_l2_svc_fun@@@8
	DD	imagerel ??_R3l2r_l2_svc_fun@@8
	DD	imagerel ??_R4l2r_l2_svc_fun@@6B@
rdata$r	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z DD 0c2c11H
	DD	03782cH
	DD	046827H
	DD	0f6422H
	DD	0e541dH
	DD	0d3418H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA
xdata	ENDS
;	COMDAT ??_7l2r_l2_svc_fun@@6B@
CONST	SEGMENT
??_7l2r_l2_svc_fun@@6B@ DQ FLAT:??_R4l2r_l2_svc_fun@@6B@ ; l2r_l2_svc_fun::`vftable'
	DQ	FLAT:?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
	DQ	FLAT:?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
	DQ	FLAT:?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z
	DQ	FLAT:?get_nr_variable@l2r_l2_svc_fun@@UEAAHXZ
	DQ	FLAT:??_El2r_l2_svc_fun@@UEAAPEAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z
_TEXT	SEGMENT
$T8444 = 32
this$ = 96
prob$ = 104
Cp$ = 112
Cn$ = 120
??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z PROC		; l2r_l2_svc_fun::l2r_l2_svc_fun, COMDAT
; Line 227
$LN25:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T8444[rsp], -2
	mov	QWORD PTR [rsp+104], rbx
	mov	QWORD PTR [rsp+112], rbp
	mov	QWORD PTR [rsp+120], rsi
	movaps	XMMWORD PTR [rsp+64], xmm6
	movaps	XMMWORD PTR [rsp+48], xmm7
	movapd	xmm6, xmm3
	movapd	xmm7, xmm2
	mov	rsi, rcx
	lea	rax, OFFSET FLAT:??_7l2r_l2_svc_fun@@6B@
	mov	QWORD PTR [rcx], rax
; Line 229
	movsxd	rbx, DWORD PTR [rdx]
; Line 230
	mov	rdi, QWORD PTR [rdx+8]
; Line 232
	mov	QWORD PTR [rcx+48], rdx
; Line 234
	mov	eax, 8
	mul	rbx
	mov	rbp, -1
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+16], rax
; Line 235
	mov	eax, 8
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+24], rax
; Line 236
	mov	eax, 8
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+8], rax
; Line 237
	mov	eax, 4
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+32], rax
	xor	edx, edx
; Line 239
	cmp	rbx, 4
	jl	SHORT $LC14@l2r_l2_svc
; Line 227
	mov	rax, QWORD PTR [rsi+8]
	add	rax, 16
	lea	rcx, QWORD PTR [rdi+8]
	lea	r8, QWORD PTR [rbx-4]
	shr	r8, 2
	inc	r8
; Line 239
	lea	rdx, QWORD PTR [r8*4]
	npad	6
$LL23@l2r_l2_svc:
; Line 241
	cmp	DWORD PTR [rcx-8], 1
	jne	SHORT $LN15@l2r_l2_svc
; Line 242
	movsdx	QWORD PTR [rax-16], xmm7
; Line 243
	jmp	SHORT $LN16@l2r_l2_svc
$LN15@l2r_l2_svc:
; Line 244
	movsdx	QWORD PTR [rax-16], xmm6
$LN16@l2r_l2_svc:
; Line 241
	cmp	DWORD PTR [rcx-4], 1
	jne	SHORT $LN17@l2r_l2_svc
; Line 242
	movsdx	QWORD PTR [rax-8], xmm7
; Line 243
	jmp	SHORT $LN18@l2r_l2_svc
$LN17@l2r_l2_svc:
; Line 244
	movsdx	QWORD PTR [rax-8], xmm6
$LN18@l2r_l2_svc:
; Line 241
	cmp	DWORD PTR [rcx], 1
	jne	SHORT $LN19@l2r_l2_svc
; Line 242
	movsdx	QWORD PTR [rax], xmm7
; Line 243
	jmp	SHORT $LN20@l2r_l2_svc
$LN19@l2r_l2_svc:
; Line 244
	movsdx	QWORD PTR [rax], xmm6
$LN20@l2r_l2_svc:
; Line 241
	cmp	DWORD PTR [rcx+4], 1
	jne	SHORT $LN21@l2r_l2_svc
; Line 242
	movsdx	QWORD PTR [rax+8], xmm7
; Line 243
	jmp	SHORT $LN22@l2r_l2_svc
$LN21@l2r_l2_svc:
; Line 244
	movsdx	QWORD PTR [rax+8], xmm6
$LN22@l2r_l2_svc:
; Line 227
	add	rcx, 16
	add	rax, 32					; 00000020H
; Line 239
	sub	r8, 1
	jne	SHORT $LL23@l2r_l2_svc
$LC14@l2r_l2_svc:
	cmp	rdx, rbx
	jge	SHORT $LN24@l2r_l2_svc
	mov	rax, QWORD PTR [rsi+8]
	lea	rcx, QWORD PTR [rax+rdx*8]
$LC5@l2r_l2_svc:
; Line 241
	cmp	DWORD PTR [rdi+rdx*4], 1
	jne	SHORT $LN2@l2r_l2_svc
; Line 242
	movsdx	QWORD PTR [rcx], xmm7
; Line 243
	jmp	SHORT $LN4@l2r_l2_svc
$LN2@l2r_l2_svc:
; Line 244
	movsdx	QWORD PTR [rcx], xmm6
$LN4@l2r_l2_svc:
; Line 239
	inc	rdx
	add	rcx, 8
	cmp	rdx, rbx
	jl	SHORT $LC5@l2r_l2_svc
; Line 246
	mov	rax, rsi
	jmp	SHORT $LN13@l2r_l2_svc
$LN24@l2r_l2_svc:
	mov	rax, rsi
$LN13@l2r_l2_svc:
	mov	rbx, QWORD PTR [rsp+104]
	mov	rbp, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	movaps	xmm6, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+48]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z ENDP		; l2r_l2_svc_fun::l2r_l2_svc_fun
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8444 = 32
this$ = 96
prob$ = 104
Cp$ = 112
Cn$ = 120
?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA PROC ; `l2r_l2_svc_fun::l2r_l2_svc_fun'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1function@@UEAA@XZ			; function::~function
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z@4HA ENDP ; `l2r_l2_svc_fun::l2r_l2_svc_fun'::`1'::dtor$0
text$x	ENDS
PUBLIC	??1l2r_l2_svc_fun@@UEAA@XZ			; l2r_l2_svc_fun::~l2r_l2_svc_fun
;	COMDAT pdata
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\tron.h
pdata	SEGMENT
$pdata$??1l2r_l2_svc_fun@@UEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+85
	DD	imagerel $unwind$??1l2r_l2_svc_fun@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1l2r_l2_svc_fun@@UEAA@XZ DD imagerel ??1l2r_l2_svc_fun@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1l2r_l2_svc_fun@@UEAA@XZ+32
	DD	00H
	DD	imagerel ??1l2r_l2_svc_fun@@UEAA@XZ+69
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1l2r_l2_svc_fun@@UEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1l2r_l2_svc_fun@@UEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1l2r_l2_svc_fun@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1l2r_l2_svc_fun@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1l2r_l2_svc_fun@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1l2r_l2_svc_fun@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??1l2r_l2_svc_fun@@UEAA@XZ
_TEXT	SEGMENT
$T8478 = 32
this$ = 64
??1l2r_l2_svc_fun@@UEAA@XZ PROC				; l2r_l2_svc_fun::~l2r_l2_svc_fun, COMDAT
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\linear.cpp
; Line 249
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T8478[rsp], -2
	mov	rbx, rcx
	lea	rax, OFFSET FLAT:??_7l2r_l2_svc_fun@@6B@
	mov	QWORD PTR [rcx], rax
; Line 250
	mov	rcx, QWORD PTR [rcx+16]
	call	??3@YAXPEAX@Z				; operator delete
; Line 251
	mov	rcx, QWORD PTR [rbx+24]
	call	??3@YAXPEAX@Z				; operator delete
; Line 252
	mov	rcx, QWORD PTR [rbx+8]
	call	??3@YAXPEAX@Z				; operator delete
; Line 253
	mov	rcx, QWORD PTR [rbx+32]
	call	??3@YAXPEAX@Z				; operator delete
	npad	1
; Line 254
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	QWORD PTR [rbx], rax
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1l2r_l2_svc_fun@@UEAA@XZ ENDP				; l2r_l2_svc_fun::~l2r_l2_svc_fun
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8478 = 32
this$ = 64
?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA PROC		; `l2r_l2_svc_fun::~l2r_l2_svc_fun'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1function@@UEAA@XZ			; function::~function
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1l2r_l2_svc_fun@@UEAA@XZ@4HA ENDP		; `l2r_l2_svc_fun::~l2r_l2_svc_fun'::`1'::dtor$0
; Function compile flags: /Ogtp
text$x	ENDS
;	COMDAT ?get_nr_variable@l2r_l2_svc_fun@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?get_nr_variable@l2r_l2_svc_fun@@UEAAHXZ PROC		; l2r_l2_svc_fun::get_nr_variable, COMDAT
; Line 303
	mov	rax, QWORD PTR [rcx+48]
	mov	eax, DWORD PTR [rax+4]
; Line 304
	ret	0
?get_nr_variable@l2r_l2_svc_fun@@UEAAHXZ ENDP		; l2r_l2_svc_fun::get_nr_variable
_TEXT	ENDS
PUBLIC	?Xv@l2r_l2_svc_fun@@AEAAXPEAN0@Z		; l2r_l2_svc_fun::Xv
; Function compile flags: /Ogtp
;	COMDAT ?Xv@l2r_l2_svc_fun@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
Xv$ = 24
?Xv@l2r_l2_svc_fun@@AEAAXPEAN0@Z PROC			; l2r_l2_svc_fun::Xv, COMDAT
; Line 326
	mov	rax, QWORD PTR [rcx+48]
; Line 329
	movsxd	r9, DWORD PTR [rax]
	mov	r10, QWORD PTR [rax+16]
	test	r9, r9
	jle	SHORT $LN3@Xv@2
; Line 332
	sub	r10, r8
	xor	r11d, r11d
	npad	10
$LL5@Xv@2:
	mov	rcx, QWORD PTR [r10+r8]
	mov	QWORD PTR [r8], r11
; Line 333
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN4@Xv@2
	npad	2
$LL2@Xv@2:
; Line 335
	cdqe
; Line 336
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rdx+rax*8-8]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [r8]
	movsdx	QWORD PTR [r8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL2@Xv@2
$LN4@Xv@2:
; Line 329
	add	r8, 8
	sub	r9, 1
	jne	SHORT $LL5@Xv@2
$LN3@Xv@2:
; Line 339
	fatret	0
?Xv@l2r_l2_svc_fun@@AEAAXPEAN0@Z ENDP			; l2r_l2_svc_fun::Xv
_TEXT	ENDS
PUBLIC	?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z		; l2r_l2_svc_fun::subXv
;	COMDAT pdata
pdata	SEGMENT
$pdata$?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z DD imagerel $LN12
	DD	imagerel $LN12+147
	DD	imagerel $unwind$?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z DD 060f01H
	DD	03740fH
	DD	02640aH
	DD	013405H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
Xv$ = 24
?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z PROC		; l2r_l2_svc_fun::subXv, COMDAT
; Line 342
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
; Line 344
	mov	rax, QWORD PTR [rcx+48]
; Line 346
	xor	esi, esi
	mov	rbx, rdx
	cmp	DWORD PTR [rcx+40], esi
	mov	rdi, QWORD PTR [rax+16]
	mov	r11, rcx
	mov	r9d, esi
	jle	SHORT $LN3@subXv
; Line 344
	mov	r10, rsi
	npad	6
$LL5@subXv:
; Line 348
	mov	rax, QWORD PTR [r11+32]
	movsxd	rcx, DWORD PTR [r10+rax]
; Line 349
	mov	QWORD PTR [r8], rsi
	mov	rdx, QWORD PTR [rdi+rcx*8]
; Line 350
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	je	SHORT $LN4@subXv
	npad	10
$LL2@subXv:
; Line 352
	cdqe
; Line 353
	add	rdx, 16
	movsdx	xmm0, QWORD PTR [rbx+rax*8-8]
	mulsd	xmm0, QWORD PTR [rdx-8]
	addsd	xmm0, QWORD PTR [r8]
	movsdx	QWORD PTR [r8], xmm0
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	jne	SHORT $LL2@subXv
$LN4@subXv:
; Line 346
	inc	r9d
	add	r10, 4
	add	r8, 8
	cmp	r9d, DWORD PTR [r11+40]
	jl	SHORT $LL5@subXv
$LN3@subXv:
; Line 356
	mov	rbx, QWORD PTR [rsp+8]
	mov	rsi, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
	ret	0
?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z ENDP		; l2r_l2_svc_fun::subXv
_TEXT	ENDS
PUBLIC	?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z		; l2r_l2_svc_fun::subXTv
;	COMDAT pdata
pdata	SEGMENT
$pdata$?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z DD imagerel $LN17
	DD	imagerel $LN17+184
	DD	imagerel $unwind$?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
XTv$ = 64
?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z PROC		; l2r_l2_svc_fun::subXTv, COMDAT
; Line 359
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 361
	mov	rax, QWORD PTR [rcx]
	mov	rsi, r8
	mov	rbx, rdx
	mov	rdi, rcx
	call	QWORD PTR [rax+24]
; Line 362
	mov	r9, QWORD PTR [rdi+48]
	mov	rbp, QWORD PTR [r9+16]
; Line 364
	movsxd	r8, eax
	test	eax, eax
	jle	SHORT $LN8@subXTv
	shl	r8, 3
	xor	edx, edx
	mov	rcx, rsi
	call	memset
$LN8@subXTv:
; Line 366
	xor	r8d, r8d
	cmp	DWORD PTR [rdi+40], r8d
	jle	SHORT $LN3@subXTv
	mov	r9, r8
	npad	4
$LL5@subXTv:
; Line 368
	mov	rax, QWORD PTR [rdi+32]
	movsxd	rcx, DWORD PTR [r9+rax]
	mov	rdx, QWORD PTR [rbp+rcx*8]
; Line 369
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	je	SHORT $LN4@subXTv
	npad	12
$LL2@subXTv:
; Line 371
	movsdx	xmm0, QWORD PTR [rdx+8]
	cdqe
; Line 372
	add	rdx, 16
	mulsd	xmm0, QWORD PTR [rbx]
	addsd	xmm0, QWORD PTR [rsi+rax*8-8]
	movsdx	QWORD PTR [rsi+rax*8-8], xmm0
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	jne	SHORT $LL2@subXTv
$LN4@subXTv:
; Line 366
	inc	r8d
	add	r9, 4
	add	rbx, 8
	cmp	r8d, DWORD PTR [rdi+40]
	jl	SHORT $LL5@subXTv
$LN3@subXTv:
; Line 375
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z ENDP		; l2r_l2_svc_fun::subXTv
_TEXT	ENDS
PUBLIC	??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z	; Solver_MCSVM_CS::Solver_MCSVM_CS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z
_TEXT	SEGMENT
this$ = 48
prob$ = 56
nr_class$ = 64
weighted_C$ = 72
eps$ = 80
max_iter$ = 88
??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z PROC	; Solver_MCSVM_CS::Solver_MCSVM_CS, COMDAT
; Line 418
$LN3:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 419
	mov	eax, DWORD PTR [rdx+4]
; Line 422
	movsdx	xmm0, QWORD PTR eps$[rsp]
; Line 425
	movsxd	rbx, r8d
	mov	DWORD PTR [rcx+24], eax
	mov	eax, DWORD PTR [rdx]
	mov	QWORD PTR [rcx+48], rdx
	movsdx	QWORD PTR [rcx+40], xmm0
	mov	DWORD PTR [rcx+28], eax
	mov	eax, DWORD PTR max_iter$[rsp]
	mov	rdi, rcx
	mov	DWORD PTR [rcx+36], eax
	mov	DWORD PTR [rcx+32], r8d
	mov	eax, 8
	mov	rbp, -1
	mov	rsi, r9
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rdi], rax
; Line 426
	mov	eax, 8
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 428
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	QWORD PTR [rdi+16], rax
	mov	QWORD PTR [rdi+8], rsi
	mov	rsi, QWORD PTR [rsp+64]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0Solver_MCSVM_CS@@QEAA@PEBUproblem@@HPEANNH@Z ENDP	; Solver_MCSVM_CS::Solver_MCSVM_CS
_TEXT	ENDS
PUBLIC	??1Solver_MCSVM_CS@@QEAA@XZ			; Solver_MCSVM_CS::~Solver_MCSVM_CS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Solver_MCSVM_CS@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??1Solver_MCSVM_CS@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Solver_MCSVM_CS@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??1Solver_MCSVM_CS@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Solver_MCSVM_CS@@QEAA@XZ PROC			; Solver_MCSVM_CS::~Solver_MCSVM_CS, COMDAT
; Line 431
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 432
	mov	rcx, QWORD PTR [rcx]
	call	??3@YAXPEAX@Z				; operator delete
; Line 433
	mov	rcx, QWORD PTR [rbx+16]
; Line 434
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX@Z				; operator delete
??1Solver_MCSVM_CS@@QEAA@XZ ENDP			; Solver_MCSVM_CS::~Solver_MCSVM_CS
_TEXT	ENDS
PUBLIC	?compare_double@@YAHPEBX0@Z			; compare_double
; Function compile flags: /Ogtp
;	COMDAT ?compare_double@@YAHPEBX0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?compare_double@@YAHPEBX0@Z PROC			; compare_double, COMDAT
; Line 438
	movsdx	xmm0, QWORD PTR [rcx]
	movsdx	xmm1, QWORD PTR [rdx]
	comisd	xmm0, xmm1
	jbe	SHORT $LN2@compare_do
; Line 439
	or	eax, -1
; Line 443
	ret	0
$LN2@compare_do:
; Line 440
	comisd	xmm1, xmm0
	jbe	SHORT $LN1@compare_do
; Line 441
	mov	eax, 1
; Line 443
	ret	0
$LN1@compare_do:
; Line 442
	xor	eax, eax
; Line 443
	ret	0
?compare_double@@YAHPEBX0@Z ENDP			; compare_double
_TEXT	ENDS
PUBLIC	?be_shrunk@Solver_MCSVM_CS@@AEAA_NHHHNN@Z	; Solver_MCSVM_CS::be_shrunk
; Function compile flags: /Ogtp
;	COMDAT ?be_shrunk@Solver_MCSVM_CS@@AEAA_NHHHNN@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
m$ = 24
yi$ = 32
alpha_i$ = 40
minG$ = 48
?be_shrunk@Solver_MCSVM_CS@@AEAA_NHHHNN@Z PROC		; Solver_MCSVM_CS::be_shrunk, COMDAT
; Line 472
	xorpd	xmm1, xmm1
	mov	r10, rcx
; Line 473
	cmp	r8d, r9d
	jne	SHORT $LN2@be_shrunk
; Line 474
	mov	rax, QWORD PTR [rcx+48]
	movsxd	r9, edx
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]
	movsxd	r9, DWORD PTR [rdx+r9*4]
	movsdx	xmm1, QWORD PTR [rax+r9*8]
$LN2@be_shrunk:
; Line 475
	movsdx	xmm0, QWORD PTR alpha_i$[rsp]
	ucomisd	xmm0, xmm1
	jp	SHORT $LN1@be_shrunk
	jne	SHORT $LN1@be_shrunk
	mov	rax, QWORD PTR [r10+16]
	movsdx	xmm0, QWORD PTR minG$[rsp]
	movsxd	rcx, r8d
	comisd	xmm0, QWORD PTR [rax+rcx*8]
	jbe	SHORT $LN1@be_shrunk
; Line 476
	mov	al, 1
; Line 478
	ret	0
$LN1@be_shrunk:
; Line 477
	xor	al, al
; Line 478
	ret	0
?be_shrunk@Solver_MCSVM_CS@@AEAA_NHHHNN@Z ENDP		; Solver_MCSVM_CS::be_shrunk
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z DD imagerel ?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z
	DD	imagerel ?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z+535
	DD	imagerel $unwind$?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z DD 0a1901H
	DD	0e3419H
	DD	0f0153219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0500b600cH
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z
_TEXT	SEGMENT
prob$ = 96
x_space_ret$ = 104
prob_col$ = 112
?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z PROC ; transpose, COMDAT
; Line 1628
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 1631
	movsxd	r13, DWORD PTR [rcx+4]
	movsxd	rbx, DWORD PTR [rcx]
	mov	r12, rcx
; Line 1632
	xor	ebp, ebp
; Line 1633
	mov	rcx, -1
	lea	r15d, DWORD PTR [r13+1]
	movsxd	r9, r15d
	mov	eax, 4
	mov	r14, r8
	mov	esi, ebp
	mul	r9
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 1637
	mov	rcx, -1
	mov	DWORD PTR [r14], ebx
	mov	rdi, rax
	mov	eax, 4
	mov	DWORD PTR [r14+4], r13d
	mul	rbx
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 1638
	mov	rcx, -1
	mov	QWORD PTR [r14+8], rax
	mov	eax, 8
	mul	r13
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdx, rbp
	mov	QWORD PTR [r14+16], rax
; Line 1640
	test	rbx, rbx
	jle	SHORT $LN23@transpose
	npad	4
$LL25@transpose:
; Line 1641
	mov	rax, QWORD PTR [r12+8]
	mov	rcx, QWORD PTR [r14+8]
	inc	rdx
	cmp	rdx, rbx
	mov	eax, DWORD PTR [rax+rdx*4-4]
	mov	DWORD PTR [rcx+rdx*4-4], eax
	jl	SHORT $LL25@transpose
$LN23@transpose:
; Line 1643
	test	r15d, r15d
	jle	SHORT $LN22@transpose
	mov	r8d, r15d
	xor	edx, edx
	mov	rcx, rdi
	shl	r8, 2
	call	memset
$LN22@transpose:
	mov	rdx, rbp
; Line 1645
	test	rbx, rbx
	jle	SHORT $LN17@transpose
	npad	9
$LL19@transpose:
; Line 1647
	mov	rax, QWORD PTR [r12+16]
	mov	rcx, QWORD PTR [rax+rdx*8]
; Line 1648
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN18@transpose
$LL16@transpose:
; Line 1651
	cdqe
; Line 1652
	add	rcx, 16
	inc	esi
	inc	DWORD PTR [rdi+rax*4]
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL16@transpose
$LN18@transpose:
; Line 1645
	inc	rdx
	cmp	rdx, rbx
	jl	SHORT $LL19@transpose
$LN17@transpose:
; Line 1655
	cmp	r15d, 1
	jle	SHORT $LN12@transpose
	lea	rcx, QWORD PTR [rdi+4]
	lea	edx, DWORD PTR [r15-1]
	npad	8
$LL14@transpose:
; Line 1656
	mov	eax, DWORD PTR [rcx-4]
	add	rcx, 4
	inc	eax
	add	DWORD PTR [rcx-4], eax
	sub	rdx, 1
	jne	SHORT $LL14@transpose
$LN12@transpose:
; Line 1658
	mov	eax, r13d
	add	eax, esi
	mov	rsi, -1
	movsxd	rcx, eax
	mov	eax, 16
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	r11, rax
	mov	rax, rbp
; Line 1659
	test	r13, r13
	jle	SHORT $LN9@transpose
$LL11@transpose:
; Line 1660
	movsxd	rdx, DWORD PTR [rdi+rax*4]
	mov	rcx, QWORD PTR [r14+16]
	inc	rax
	shl	rdx, 4
	add	rdx, r11
	cmp	rax, r13
	mov	QWORD PTR [rcx+rax*8-8], rdx
	jl	SHORT $LL11@transpose
$LN9@transpose:
; Line 1662
	mov	r10, rbp
	test	rbx, rbx
	jle	SHORT $LN6@transpose
	mov	r9d, 1
	npad	6
$LL8@transpose:
; Line 1664
	mov	rax, QWORD PTR [r12+16]
	mov	r8, QWORD PTR [rax+r10*8]
; Line 1665
	mov	eax, DWORD PTR [r8]
	cmp	eax, esi
	je	SHORT $LN7@transpose
$LL5@transpose:
; Line 1667
	dec	eax
; Line 1671
	add	r8, 16
	movsxd	rdx, eax
	movsxd	rax, DWORD PTR [rdi+rdx*4]
	add	rax, rax
	mov	DWORD PTR [r11+rax*8], r9d
	mov	rax, QWORD PTR [r8-8]
	movsxd	rcx, DWORD PTR [rdi+rdx*4]
	add	rcx, rcx
	mov	QWORD PTR [r11+rcx*8+8], rax
	inc	DWORD PTR [rdi+rdx*4]
	mov	eax, DWORD PTR [r8]
	cmp	eax, esi
	jne	SHORT $LL5@transpose
$LN7@transpose:
; Line 1662
	inc	r10
	inc	r9d
	cmp	r10, rbx
	jl	SHORT $LL8@transpose
$LN6@transpose:
; Line 1674
	test	r13, r13
	jle	SHORT $LN1@transpose
	npad	2
$LL3@transpose:
; Line 1675
	movsxd	rax, DWORD PTR [rdi+rbp*4]
	inc	rbp
	add	rax, rax
	cmp	rbp, r13
	mov	DWORD PTR [r11+rax*8], esi
	jl	SHORT $LL3@transpose
$LN1@transpose:
; Line 1677
	mov	rax, QWORD PTR x_space_ret$[rsp]
; Line 1679
	mov	rcx, rdi
	mov	QWORD PTR [rax], r11
; Line 1680
	mov	rbx, QWORD PTR [rsp+112]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	jmp	??3@YAXPEAX@Z				; operator delete
?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z ENDP ; transpose
_TEXT	ENDS
EXTRN	__imp_free:PROC
EXTRN	__imp_realloc:PROC
EXTRN	__imp_malloc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z DD imagerel ?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z
	DD	imagerel ?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z+525
	DD	imagerel $unwind$?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z DD 092401H
	DD	0f0208224H
	DD	0d01ce01eH
	DD	07018c01aH
	DD	050166017H
	DD	03015H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z
_TEXT	SEGMENT
max_nr_class$1$ = 32
data_label$1$ = 40
$T8680 = 48
prob$ = 144
nr_class_ret$ = 152
label_ret$ = 160
start_ret$ = 168
count_ret$ = 176
perm$ = 184
?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z PROC	; group_classes, COMDAT
; Line 1685
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 72					; 00000048H
; Line 1686
	movsxd	rbx, DWORD PTR [rcx]
; Line 1688
	xor	r14d, r14d
	mov	DWORD PTR max_nr_class$1$[rsp], 16
; Line 1689
	lea	ecx, QWORD PTR [r14+64]
	call	QWORD PTR __imp_malloc
; Line 1690
	lea	ecx, QWORD PTR [r14+64]
	mov	r13, rax
	call	QWORD PTR __imp_malloc
; Line 1691
	lea	rcx, QWORD PTR [rbx*4]
	mov	rsi, rbx
	mov	QWORD PTR $T8680[rsp], rbx
	mov	r15, rax
	call	QWORD PTR __imp_malloc
	xor	edi, edi
	xor	r12d, r12d
	mov	rdx, rax
	mov	QWORD PTR data_label$1$[rsp], rax
; Line 1694
	lea	ebp, QWORD PTR [rdi+1]
	test	ebx, ebx
	jle	$LN16@group_clas
	npad	6
$LL18@group_clas:
; Line 1696
	mov	rax, QWORD PTR prob$[rsp]
	mov	rcx, QWORD PTR [rax+8]
; Line 1698
	xor	eax, eax
	mov	esi, DWORD PTR [rcx+r12*4]
	xor	ecx, ecx
	test	rdi, rdi
	jle	SHORT $LN13@group_clas
	npad	7
$LL15@group_clas:
; Line 1700
	cmp	esi, DWORD PTR [r13+rax*4]
	je	SHORT $LN26@group_clas
	inc	rax
	inc	ecx
	cmp	rax, rdi
	jl	SHORT $LL15@group_clas
	jmp	SHORT $LN13@group_clas
$LN26@group_clas:
; Line 1702
	inc	DWORD PTR [r15+rax*4]
$LN13@group_clas:
; Line 1706
	mov	DWORD PTR [rdx+r12*4], ecx
; Line 1707
	cmp	ecx, r14d
	jne	SHORT $LN17@group_clas
; Line 1709
	mov	eax, DWORD PTR max_nr_class$1$[rsp]
	cmp	r14d, eax
	jne	SHORT $LN10@group_clas
; Line 1711
	add	eax, eax
; Line 1712
	mov	rcx, r13
	movsxd	rbx, eax
	mov	DWORD PTR max_nr_class$1$[rsp], eax
	shl	rbx, 2
	mov	rdx, rbx
	call	QWORD PTR __imp_realloc
; Line 1713
	mov	rdx, rbx
	mov	rcx, r15
	mov	r13, rax
	call	QWORD PTR __imp_realloc
	mov	rdx, QWORD PTR data_label$1$[rsp]
	mov	r15, rax
$LN10@group_clas:
; Line 1715
	mov	DWORD PTR [r13+rdi*4], esi
; Line 1717
	inc	r14d
	mov	DWORD PTR [r15+rdi*4], ebp
	inc	rdi
$LN17@group_clas:
	mov	rsi, QWORD PTR $T8680[rsp]
	inc	r12
	cmp	r12, rsi
	jl	$LL18@group_clas
$LN16@group_clas:
; Line 1721
	movsxd	rbx, r14d
	lea	rcx, QWORD PTR [rbx*4]
	call	QWORD PTR __imp_malloc
; Line 1723
	cmp	rbp, rbx
	mov	DWORD PTR [rax], 0
	mov	r11, rax
	mov	rax, rbp
	jge	SHORT $LN7@group_clas
	mov	r8, r11
	mov	rdx, r15
	sub	r8, r15
	npad	12
$LL9@group_clas:
; Line 1724
	mov	ecx, DWORD PTR [r8+rdx]
	inc	rax
	add	rdx, 4
	add	ecx, DWORD PTR [rdx-4]
	cmp	rax, rbx
	mov	DWORD PTR [r11+rax*4-4], ecx
	jl	SHORT $LL9@group_clas
$LN7@group_clas:
	mov	r10, QWORD PTR data_label$1$[rsp]
; Line 1725
	xor	r8d, r8d
	xor	edx, edx
	test	rsi, rsi
	jle	SHORT $LN4@group_clas
	mov	r9, QWORD PTR perm$[rsp]
	npad	1
$LL6@group_clas:
; Line 1727
	movsxd	rcx, DWORD PTR [r10+rdx*4]
	inc	rdx
	movsxd	rax, DWORD PTR [r11+rcx*4]
	mov	DWORD PTR [r9+rax*4], r8d
; Line 1728
	inc	DWORD PTR [r11+rcx*4]
	inc	r8d
	cmp	rdx, rsi
	jl	SHORT $LL6@group_clas
$LN4@group_clas:
; Line 1731
	cmp	rbp, rbx
	mov	DWORD PTR [r11], 0
	jge	SHORT $LN1@group_clas
	mov	rdx, r11
	mov	rcx, r15
	sub	rdx, r15
$LL3@group_clas:
; Line 1732
	mov	eax, DWORD PTR [rcx+rdx]
	inc	rbp
	add	rcx, 4
	add	eax, DWORD PTR [rcx-4]
	cmp	rbp, rbx
	mov	DWORD PTR [r11+rbp*4-4], eax
	jl	SHORT $LL3@group_clas
$LN1@group_clas:
; Line 1734
	mov	rax, QWORD PTR nr_class_ret$[rsp]
; Line 1738
	mov	rcx, r10
	mov	DWORD PTR [rax], r14d
	mov	rax, QWORD PTR label_ret$[rsp]
	mov	QWORD PTR [rax], r13
	mov	rax, QWORD PTR start_ret$[rsp]
	mov	QWORD PTR [rax], r11
	mov	rax, QWORD PTR count_ret$[rsp]
	mov	QWORD PTR [rax], r15
; Line 1739
	add	rsp, 72					; 00000048H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	rex_jmp	QWORD PTR __imp_free
?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z ENDP	; group_classes
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	predict_values
;	COMDAT pdata
pdata	SEGMENT
$pdata$predict_values DD imagerel $LN43
	DD	imagerel $LN43+682
	DD	imagerel $unwind$predict_values
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$predict_values DD 0c1c01H
	DD	0c641cH
	DD	0b541cH
	DD	0a341cH
	DD	0f018321cH
	DD	0d014e016H
	DD	07010c012H
xdata	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT predict_values
_TEXT	SEGMENT
model_$ = 80
x$ = 88
dec_values$ = 96
predict_values PROC					; COMDAT
; Line 1988
$LN43:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 1991
	movsdx	xmm0, QWORD PTR [rcx+72]
; Line 1992
	mov	r12d, DWORD PTR [rcx+52]
	mov	rbx, r8
	comisd	xmm0, QWORD PTR __real@0000000000000000
	mov	rbp, rdx
	mov	r15, rcx
	jb	SHORT $LN19@predict_va
	inc	r12d
$LN19@predict_va:
; Line 1996
	movsxd	r14, DWORD PTR [rcx+48]
	mov	r13, QWORD PTR [rcx+56]
; Line 1999
	mov	esi, 1
	cmp	r14d, 2
	jne	SHORT $LN18@predict_va
	cmp	DWORD PTR [rcx], 4
; Line 2000
	mov	eax, esi
	jne	SHORT $LN17@predict_va
$LN18@predict_va:
; Line 2002
	mov	eax, r14d
$LN17@predict_va:
; Line 2005
	movsxd	rdi, eax
	test	eax, eax
	jle	SHORT $LN16@predict_va
	mov	r8, rdi
	xor	edx, edx
	mov	rcx, rbx
	shl	r8, 3
	call	memset
$LN16@predict_va:
; Line 2007
	mov	eax, DWORD PTR [rbp]
	xor	r9d, r9d
	cmp	eax, -1
	je	$LN11@predict_va
	lea	r8, QWORD PTR [rbp+8]
$LL13@predict_va:
; Line 2010
	cmp	eax, r12d
	jg	$LN12@predict_va
; Line 2011
	cmp	rdi, 4
	mov	rcx, r9
	movsxd	r11, eax
	jl	$LC34@predict_va
	lea	rax, QWORD PTR [r11-1]
	lea	rdx, QWORD PTR [rbx+16]
	imul	rax, rdi
	lea	r10, QWORD PTR [r13+rax*8]
	lea	rax, QWORD PTR [rdi-4]
	shr	rax, 2
	inc	rax
; Line 2020
	lea	rcx, QWORD PTR [rax*4]
$LL35@predict_va:
	movsdx	xmm0, QWORD PTR [r8]
	add	rdx, 32					; 00000020H
	add	r10, 32					; 00000020H
	sub	rax, rsi
	mulsd	xmm0, QWORD PTR [r10-32]
	addsd	xmm0, QWORD PTR [rdx-48]
	movsdx	QWORD PTR [rdx-48], xmm0
	movsdx	xmm1, QWORD PTR [r10-24]
	mulsd	xmm1, QWORD PTR [r8]
	addsd	xmm1, QWORD PTR [rdx-40]
	movsdx	QWORD PTR [rdx-40], xmm1
	movsdx	xmm0, QWORD PTR [r10-16]
	mulsd	xmm0, QWORD PTR [r8]
	addsd	xmm0, QWORD PTR [rdx-32]
	movsdx	QWORD PTR [rdx-32], xmm0
	movsdx	xmm1, QWORD PTR [r10-8]
	mulsd	xmm1, QWORD PTR [r8]
	addsd	xmm1, QWORD PTR [rdx-24]
	movsdx	QWORD PTR [rdx-24], xmm1
	jne	SHORT $LL35@predict_va
$LC34@predict_va:
; Line 2011
	cmp	rcx, rdi
	jge	SHORT $LN12@predict_va
	lea	rax, QWORD PTR [r11-1]
	imul	rax, rdi
	add	rax, rcx
	lea	rdx, QWORD PTR [r13+rax*8]
$LC9@predict_va:
; Line 2012
	movsdx	xmm0, QWORD PTR [rdx]
; Line 2020
	inc	rcx
	add	rdx, 8
	cmp	rcx, rdi
	mulsd	xmm0, QWORD PTR [r8]
	addsd	xmm0, QWORD PTR [rbx+rcx*8-8]
	movsdx	QWORD PTR [rbx+rcx*8-8], xmm0
	jl	SHORT $LC9@predict_va
$LN12@predict_va:
; Line 2007
	mov	eax, DWORD PTR [r8+8]
	add	r8, 16
	cmp	eax, -1
	jne	$LL13@predict_va
$LN11@predict_va:
; Line 2015
	cmp	r14d, 2
	jne	SHORT $LN6@predict_va
; Line 2016
	movsdx	xmm0, QWORD PTR [rbx]
	mov	rax, QWORD PTR [r15+64]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN23@predict_va
	mov	eax, DWORD PTR [rax]
	jmp	$LN5@predict_va
$LN23@predict_va:
	mov	eax, DWORD PTR [rax+4]
	jmp	$LN5@predict_va
$LN6@predict_va:
; Line 2020
	mov	rcx, rsi
	mov	r10, r9
	mov	rdi, r14
	cmp	r14, rcx
	jle	$LN36@predict_va
	lea	rax, QWORD PTR [r14-1]
	cmp	rax, 4
	jl	$LC37@predict_va
	mov	r8d, 3
	mov	rbp, -8
	mov	r12d, 8
	mov	r13, -16
	add	r14, -3
	sub	rbp, rbx
	sub	r12, rbx
	lea	r11d, QWORD PTR [r8+21]
	mov	rdx, r9
	sub	r13, rbx
	lea	rax, QWORD PTR [rbx+24]
$LL42@predict_va:
; Line 2022
	movsdx	xmm0, QWORD PTR [rax-16]
	comisd	xmm0, QWORD PTR [rdx+rbx]
	jbe	SHORT $LN38@predict_va
; Line 2023
	mov	r9d, esi
	mov	r10, rcx
	lea	rdx, QWORD PTR [r13+rax]
$LN38@predict_va:
	movsdx	xmm0, QWORD PTR [rax-8]
	comisd	xmm0, QWORD PTR [rdx+rbx]
	jbe	SHORT $LN39@predict_va
	lea	r9d, DWORD PTR [r8-1]
	lea	r10, QWORD PTR [rcx+1]
	lea	rdx, QWORD PTR [rax+rbp]
$LN39@predict_va:
	movsdx	xmm0, QWORD PTR [rax]
	comisd	xmm0, QWORD PTR [rdx+rbx]
	jbe	SHORT $LN40@predict_va
	mov	r9d, r8d
	lea	r10, QWORD PTR [rcx+2]
	mov	rdx, r11
$LN40@predict_va:
	movsdx	xmm0, QWORD PTR [rax+8]
	comisd	xmm0, QWORD PTR [rdx+rbx]
	jbe	SHORT $LN41@predict_va
	lea	r9d, DWORD PTR [r8+1]
	lea	r10, QWORD PTR [rcx+3]
	lea	rdx, QWORD PTR [r12+rax]
$LN41@predict_va:
	add	rcx, 4
	add	esi, 4
	add	r8d, 4
	add	r11, 32					; 00000020H
	add	rax, 32					; 00000020H
	cmp	rcx, r14
	jl	SHORT $LL42@predict_va
$LC37@predict_va:
; Line 2020
	cmp	rcx, rdi
	jge	SHORT $LN36@predict_va
	shl	r10, 3
$LC4@predict_va:
	lea	rax, QWORD PTR [rcx*8]
; Line 2022
	movsdx	xmm0, QWORD PTR [rax+rbx]
	comisd	xmm0, QWORD PTR [r10+rbx]
	jbe	SHORT $LN3@predict_va
; Line 2023
	mov	r9d, esi
	mov	r10, rax
$LN3@predict_va:
	inc	rcx
	inc	esi
	cmp	rcx, rdi
	jl	SHORT $LC4@predict_va
$LN36@predict_va:
; Line 2025
	mov	rax, QWORD PTR [r15+64]
	movsxd	rcx, r9d
	mov	eax, DWORD PTR [rax+rcx*4]
$LN5@predict_va:
; Line 2027
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
predict_values ENDP
_TEXT	ENDS
PUBLIC	predict
;	COMDAT pdata
pdata	SEGMENT
$pdata$predict DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$predict
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$predict DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT predict
_TEXT	SEGMENT
model_$ = 48
x$ = 56
predict	PROC						; COMDAT
; Line 2030
$LN3:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
; Line 2031
	movsxd	rcx, DWORD PTR [rcx+48]
	mov	rbx, rdx
	shl	rcx, 3
	call	QWORD PTR __imp_malloc
; Line 2032
	mov	rdx, rbx
	mov	rcx, rsi
	mov	r8, rax
	mov	rdi, rax
	call	predict_values
; Line 2033
	mov	rcx, rdi
	mov	ebx, eax
	call	QWORD PTR __imp_free
; Line 2035
	mov	rsi, QWORD PTR [rsp+56]
	mov	eax, ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
predict	ENDP
_TEXT	ENDS
PUBLIC	??_C@_06FDKNJNLA@?$CF?416g?5?$AA@		; `string'
PUBLIC	??_C@_02KLOPLALC@w?6?$AA@			; `string'
PUBLIC	??_C@_0M@DLPCOAKL@bias?5?$CF?416g?6?$AA@	; `string'
PUBLIC	??_C@_0P@PDHOABEG@nr_feature?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_03EBJOKFHF@?5?$CFd?$AA@			; `string'
PUBLIC	??_C@_05IDCCNNGI@label?$AA@			; `string'
PUBLIC	??_C@_0N@IEFHKFL@nr_class?5?$CFd?6?$AA@		; `string'
PUBLIC	??_C@_0BA@EBLBLNKG@solver_type?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	save_model
EXTRN	__imp_fclose:PROC
EXTRN	__imp_ferror:PROC
EXTRN	__imp_fprintf:PROC
EXTRN	__imp_fopen:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$save_model DD imagerel $LN26
	DD	imagerel $LN26+67
	DD	imagerel $unwind$save_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$save_model DD imagerel $LN26+67
	DD	imagerel $LN26+434
	DD	imagerel $chain$3$save_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$save_model DD imagerel $LN26+434
	DD	imagerel $LN26+472
	DD	imagerel $chain$4$save_model
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$save_model DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+67
	DD	imagerel $unwind$save_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$save_model DD 084321H
	DD	0a3443H
	DD	04e40fH
	DD	0cc40aH
	DD	0b7405H
	DD	imagerel $LN26
	DD	imagerel $LN26+67
	DD	imagerel $unwind$save_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$save_model DD 050b01H
	DD	0f007420bH
	DD	06003d005H
	DD	05002H
xdata	ENDS
;	COMDAT ??_C@_06FDKNJNLA@?$CF?416g?5?$AA@
CONST	SEGMENT
??_C@_06FDKNJNLA@?$CF?416g?5?$AA@ DB '%.16g ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02KLOPLALC@w?6?$AA@
CONST	SEGMENT
??_C@_02KLOPLALC@w?6?$AA@ DB 'w', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DLPCOAKL@bias?5?$CF?416g?6?$AA@
CONST	SEGMENT
??_C@_0M@DLPCOAKL@bias?5?$CF?416g?6?$AA@ DB 'bias %.16g', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PDHOABEG@nr_feature?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0P@PDHOABEG@nr_feature?5?$CFd?6?$AA@ DB 'nr_feature %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EBJOKFHF@?5?$CFd?$AA@
CONST	SEGMENT
??_C@_03EBJOKFHF@?5?$CFd?$AA@ DB ' %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IDCCNNGI@label?$AA@
CONST	SEGMENT
??_C@_05IDCCNNGI@label?$AA@ DB 'label', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IEFHKFL@nr_class?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0N@IEFHKFL@nr_class?5?$CFd?6?$AA@ DB 'nr_class %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBLBLNKG@solver_type?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@EBLBLNKG@solver_type?5?$CFs?6?$AA@ DB 'solver_type %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT save_model
_TEXT	SEGMENT
model_file_name$ = 80
model_$ = 88
save_model PROC						; COMDAT
; Line 2078
$LN26:
	push	rbp
	push	rsi
	push	r13
	push	r15
	sub	rsp, 40					; 00000028H
; Line 2084
	movsdx	xmm0, QWORD PTR [rdx+72]
	mov	r13d, DWORD PTR [rdx+52]
	mov	rbp, rdx
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jb	SHORT $LN17@save_model
; Line 2085
	lea	r15d, DWORD PTR [r13+1]
; Line 2086
	jmp	SHORT $LN16@save_model
$LN17@save_model:
; Line 2087
	mov	r15d, r13d
$LN16@save_model:
; Line 2089
	lea	rdx, OFFSET FLAT:??_C@_01NOFIACDB@w?$AA@
	call	QWORD PTR __imp_fopen
	mov	rsi, rax
; Line 2090
	test	rax, rax
	je	$LN2@save_model
	mov	QWORD PTR [rsp+88], rdi
	mov	QWORD PTR [rsp+96], r12
	mov	QWORD PTR [rsp+32], r14
; Line 2093
	mov	r14d, DWORD PTR [rbp+48]
	cmp	r14d, 2
	jne	SHORT $LN14@save_model
	cmp	DWORD PTR [rbp], 4
	je	SHORT $LN14@save_model
; Line 2094
	mov	r14d, 1
$LN14@save_model:
; Line 2098
	movsxd	r8, DWORD PTR [rbp]
	lea	rax, OFFSET FLAT:solver_type_table
	lea	rdx, OFFSET FLAT:??_C@_0BA@EBLBLNKG@solver_type?5?$CFs?6?$AA@
	mov	r8, QWORD PTR [rax+r8*8]
	mov	rcx, rsi
	mov	QWORD PTR [rsp+80], rbx
	call	QWORD PTR __imp_fprintf
; Line 2099
	mov	r8d, DWORD PTR [rbp+48]
	lea	rdx, OFFSET FLAT:??_C@_0N@IEFHKFL@nr_class?5?$CFd?6?$AA@
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
; Line 2100
	lea	rdx, OFFSET FLAT:??_C@_05IDCCNNGI@label?$AA@
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
; Line 2101
	xor	r12d, r12d
	cmp	DWORD PTR [rbp+48], r12d
	mov	edi, r12d
	jle	SHORT $LN10@save_model
; Line 2098
	mov	rbx, r12
	npad	1
$LL12@save_model:
; Line 2102
	mov	rax, QWORD PTR [rbp+64]
	lea	rdx, OFFSET FLAT:??_C@_03EBJOKFHF@?5?$CFd?$AA@
	mov	rcx, rsi
	mov	r8d, DWORD PTR [rax+rbx]
	call	QWORD PTR __imp_fprintf
	inc	edi
	add	rbx, 4
	cmp	edi, DWORD PTR [rbp+48]
	jl	SHORT $LL12@save_model
$LN10@save_model:
; Line 2103
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
; Line 2105
	lea	rdx, OFFSET FLAT:??_C@_0P@PDHOABEG@nr_feature?5?$CFd?6?$AA@
	mov	r8d, r13d
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
; Line 2107
	lea	rdx, OFFSET FLAT:??_C@_0M@DLPCOAKL@bias?5?$CF?416g?6?$AA@
	mov	rcx, rsi
	movsdx	xmm2, QWORD PTR [rbp+72]
	movd	r8, xmm2
	call	QWORD PTR __imp_fprintf
; Line 2109
	lea	rdx, OFFSET FLAT:??_C@_02KLOPLALC@w?6?$AA@
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
; Line 2110
	movsxd	r13, r14d
	movsxd	r14, r15d
	test	r15d, r15d
	jle	SHORT $LN7@save_model
; Line 2103
	lea	r15, QWORD PTR [r13*8]
$LL9@save_model:
; Line 2113
	test	r13, r13
	jle	SHORT $LN4@save_model
	mov	rbx, r12
	mov	rdi, r13
	npad	2
$LL6@save_model:
; Line 2114
	mov	rax, QWORD PTR [rbp+56]
	lea	rdx, OFFSET FLAT:??_C@_06FDKNJNLA@?$CF?416g?5?$AA@
	mov	rcx, rsi
	movsdx	xmm2, QWORD PTR [rax+rbx]
	movd	r8, xmm2
	call	QWORD PTR __imp_fprintf
	add	rbx, 8
	sub	rdi, 1
	jne	SHORT $LL6@save_model
$LN4@save_model:
; Line 2115
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
	add	r12, r15
	sub	r14, 1
	jne	SHORT $LL9@save_model
$LN7@save_model:
; Line 2118
	mov	rcx, rsi
	call	QWORD PTR __imp_ferror
	mov	r14, QWORD PTR [rsp+32]
	mov	r12, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
	test	eax, eax
	jne	SHORT $LN2@save_model
	mov	rcx, rsi
	call	QWORD PTR __imp_fclose
	test	eax, eax
	jne	SHORT $LN2@save_model
; Line 2120
	add	rsp, 40					; 00000028H
	pop	r15
	pop	r13
	pop	rsi
	pop	rbp
	ret	0
$LN2@save_model:
; Line 2118
	or	eax, -1
; Line 2120
	add	rsp, 40					; 00000028H
	pop	r15
	pop	r13
	pop	rsi
	pop	rbp
	ret	0
save_model ENDP
_TEXT	ENDS
PUBLIC	??_C@_04JINCHDBN@?$CFlf?5?$AA@			; `string'
PUBLIC	??_C@_0CC@GKEEPFK@unknown?5text?5in?5model?5file?3?5?$FL?$CFs?$FN@ ; `string'
PUBLIC	??_C@_03DLDNIBIK@?$CFlf?$AA@			; `string'
PUBLIC	??_C@_04NBAGBPGE@bias?$AA@			; `string'
PUBLIC	??_C@_0L@NKGDALND@nr_feature?$AA@		; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_08LFCCDFDG@nr_class?$AA@			; `string'
PUBLIC	??_C@_0BG@PMDPPACM@unknown?5solver?5type?4?6?$AA@ ; `string'
PUBLIC	??_C@_0M@BEIKNNJP@solver_type?$AA@		; `string'
PUBLIC	??_C@_04CFBKLHHN@?$CF80s?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	load_model
EXTRN	__imp_fscanf:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$load_model DD imagerel $LN57
	DD	imagerel $LN57+52
	DD	imagerel $unwind$load_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$load_model DD imagerel $LN57+52
	DD	imagerel $LN57+378
	DD	imagerel $chain$4$load_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$load_model DD imagerel $LN57+378
	DD	imagerel $LN57+404
	DD	imagerel $chain$5$load_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$load_model DD imagerel $LN57+404
	DD	imagerel $LN57+810
	DD	imagerel $chain$6$load_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$load_model DD imagerel $LN57+810
	DD	imagerel $LN57+923
	DD	imagerel $chain$8$load_model
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$load_model DD imagerel $LN57+923
	DD	imagerel $LN57+965
	DD	imagerel $chain$9$load_model
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$load_model DD 021H
	DD	imagerel $LN57+404
	DD	imagerel $LN57+810
	DD	imagerel $chain$6$load_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$load_model DD 041021H
	DD	016c410H
	DD	01c5408H
	DD	imagerel $LN57+404
	DD	imagerel $LN57+810
	DD	imagerel $chain$6$load_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$load_model DD 0a0021H
	DD	014f400H
	DD	015d400H
	DD	0177400H
	DD	01d6400H
	DD	01b3400H
	DD	imagerel $LN57
	DD	imagerel $LN57+52
	DD	imagerel $unwind$load_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$load_model DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+52
	DD	imagerel $unwind$load_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$load_model DD 0a2d21H
	DD	014f42dH
	DD	015d425H
	DD	0177418H
	DD	01d6410H
	DD	01b3408H
	DD	imagerel $LN57
	DD	imagerel $LN57+52
	DD	imagerel $unwind$load_model
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$load_model DD 031b19H
	DD	0180109H
	DD	0e002H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT ??_C@_04JINCHDBN@?$CFlf?5?$AA@
CONST	SEGMENT
??_C@_04JINCHDBN@?$CFlf?5?$AA@ DB '%lf ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GKEEPFK@unknown?5text?5in?5model?5file?3?5?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0CC@GKEEPFK@unknown?5text?5in?5model?5file?3?5?$FL?$CFs?$FN@ DB 'un'
	DB	'known text in model file: [%s]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLDNIBIK@?$CFlf?$AA@
CONST	SEGMENT
??_C@_03DLDNIBIK@?$CFlf?$AA@ DB '%lf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBAGBPGE@bias?$AA@
CONST	SEGMENT
??_C@_04NBAGBPGE@bias?$AA@ DB 'bias', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKGDALND@nr_feature?$AA@
CONST	SEGMENT
??_C@_0L@NKGDALND@nr_feature?$AA@ DB 'nr_feature', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LFCCDFDG@nr_class?$AA@
CONST	SEGMENT
??_C@_08LFCCDFDG@nr_class?$AA@ DB 'nr_class', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PMDPPACM@unknown?5solver?5type?4?6?$AA@
CONST	SEGMENT
??_C@_0BG@PMDPPACM@unknown?5solver?5type?4?6?$AA@ DB 'unknown solver type'
	DB	'.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BEIKNNJP@solver_type?$AA@
CONST	SEGMENT
??_C@_0M@BEIKNNJP@solver_type?$AA@ DB 'solver_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFBKLHHN@?$CF80s?$AA@
CONST	SEGMENT
??_C@_04CFBKLHHN@?$CF80s?$AA@ DB '%80s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT load_model
_TEXT	SEGMENT
nr_class$ = 32
nr_feature$ = 36
bias$ = 40
cmd$ = 48
__$ArrayPad$ = 144
model_file_name$ = 208
load_model PROC						; COMDAT
; Line 2123
$LN57:
	push	r14
	sub	rsp, 192				; 000000c0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 2124
	lea	rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
	call	QWORD PTR __imp_fopen
	mov	r14, rax
; Line 2125
	test	rax, rax
	je	$LN36@load_model
$LN35@load_model:
	mov	QWORD PTR [rsp+216], rbx
	mov	QWORD PTR [rsp+232], rsi
	mov	QWORD PTR [rsp+184], rdi
; Line 2132
	mov	ecx, 80					; 00000050H
	mov	QWORD PTR [rsp+168], r13
	mov	QWORD PTR [rsp+160], r15
	call	QWORD PTR __imp_malloc
; Line 2135
	xor	r15d, r15d
	lea	rbx, OFFSET FLAT:solver_type_table
	mov	QWORD PTR [rax+64], r15
	mov	r13, rax
	npad	8
$LL34@load_model:
; Line 2140
	lea	r8, QWORD PTR cmd$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_04CFBKLHHN@?$CF80s?$AA@
	mov	rcx, r14
	call	QWORD PTR __imp_fscanf
; Line 2141
	lea	rsi, QWORD PTR cmd$[rsp]
	lea	rdi, OFFSET FLAT:??_C@_0M@BEIKNNJP@solver_type?$AA@
	mov	ecx, 12
	repe cmpsb
	jne	$LN32@load_model
; Line 2143
	lea	r8, QWORD PTR cmd$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_04CFBKLHHN@?$CF80s?$AA@
	mov	rcx, r14
	call	QWORD PTR __imp_fscanf
; Line 2145
	mov	rax, QWORD PTR solver_type_table
	mov	r11d, r15d
	mov	rsi, r15
	test	rax, rax
	je	SHORT $LN29@load_model
	npad	11
$LL31@load_model:
; Line 2147
	lea	rdi, QWORD PTR cmd$[rsp]
	sub	rdi, rax
	npad	8
$LL50@load_model:
	movzx	edx, BYTE PTR [rax]
	movzx	ecx, BYTE PTR [rax+rdi]
	sub	edx, ecx
	jne	SHORT $LN51@load_model
	inc	rax
	test	ecx, ecx
	jne	SHORT $LL50@load_model
$LN51@load_model:
	test	edx, edx
	je	SHORT $LN43@load_model
	mov	rax, QWORD PTR [rbx+rsi*8+8]
	inc	rsi
	inc	r11d
	test	rax, rax
	jne	SHORT $LL31@load_model
; Line 2176
	jmp	SHORT $LN29@load_model
$LN43@load_model:
; Line 2149
	mov	DWORD PTR [r13], r11d
$LN29@load_model:
; Line 2153
	cmp	QWORD PTR [rbx+rsi*8], r15
	jne	$LL34@load_model
; Line 2155
	call	QWORD PTR __imp___iob_func
	lea	rdx, OFFSET FLAT:??_C@_0BG@PMDPPACM@unknown?5solver?5type?4?6?$AA@
	lea	rcx, QWORD PTR [rax+96]
	call	QWORD PTR __imp_fprintf
; Line 2156
	mov	rcx, QWORD PTR [r13+64]
	call	QWORD PTR __imp_free
; Line 2157
	mov	rcx, r13
	call	QWORD PTR __imp_free
$LN1@load_model:
; Line 2215
	xor	eax, eax
$LN56@load_model:
	mov	r13, QWORD PTR [rsp+168]
	mov	rdi, QWORD PTR [rsp+184]
	mov	rsi, QWORD PTR [rsp+232]
	mov	rbx, QWORD PTR [rsp+216]
	mov	r15, QWORD PTR [rsp+160]
$LN36@load_model:
; Line 2218
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	r14
	ret	0
$LN32@load_model:
; Line 2161
	lea	rsi, QWORD PTR cmd$[rsp]
	lea	rdi, OFFSET FLAT:??_C@_08LFCCDFDG@nr_class?$AA@
	mov	ecx, 9
	repe cmpsb
	jne	SHORT $LN25@load_model
; Line 2163
	lea	r8, QWORD PTR nr_class$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	rcx, r14
	call	QWORD PTR __imp_fscanf
; Line 2164
	mov	edx, DWORD PTR nr_class$[rsp]
	mov	DWORD PTR [r13+48], edx
	jmp	$LL34@load_model
$LN25@load_model:
; Line 2166
	lea	rsi, QWORD PTR cmd$[rsp]
	lea	rdi, OFFSET FLAT:??_C@_0L@NKGDALND@nr_feature?$AA@
	mov	ecx, 11
	repe cmpsb
	jne	SHORT $LN23@load_model
; Line 2168
	lea	r8, QWORD PTR nr_feature$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	rcx, r14
	call	QWORD PTR __imp_fscanf
; Line 2169
	mov	edx, DWORD PTR nr_feature$[rsp]
	mov	DWORD PTR [r13+52], edx
	jmp	$LL34@load_model
$LN23@load_model:
; Line 2171
	lea	rsi, QWORD PTR cmd$[rsp]
	lea	rdi, OFFSET FLAT:??_C@_04NBAGBPGE@bias?$AA@
	mov	ecx, 5
	repe cmpsb
	jne	SHORT $LN21@load_model
; Line 2173
	lea	r8, QWORD PTR bias$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_03DLDNIBIK@?$CFlf?$AA@
	mov	rcx, r14
	call	QWORD PTR __imp_fscanf
; Line 2174
	movsdx	xmm5, QWORD PTR bias$[rsp]
	movsdx	QWORD PTR [r13+72], xmm5
	jmp	$LL34@load_model
$LN21@load_model:
; Line 2176
	lea	rsi, QWORD PTR cmd$[rsp]
	lea	rdi, OFFSET FLAT:??_C@_01NOFIACDB@w?$AA@
	mov	ecx, 2
	repe cmpsb
	je	$LN45@load_model
; Line 2180
	lea	rsi, QWORD PTR cmd$[rsp]
	lea	rdi, OFFSET FLAT:??_C@_05IDCCNNGI@label?$AA@
	mov	ecx, 6
	repe cmpsb
	jne	SHORT $LN17@load_model
; Line 2182
	mov	esi, DWORD PTR [r13+48]
; Line 2183
	movsxd	rcx, esi
	shl	rcx, 2
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [r13+64], rax
; Line 2184
	test	esi, esi
	jle	$LL34@load_model
; Line 2182
	mov	rdi, r15
	npad	5
$LL16@load_model:
; Line 2185
	mov	rax, QWORD PTR [r13+64]
	lea	rdx, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	rcx, r14
	lea	r8, QWORD PTR [rdi+rax]
	call	QWORD PTR __imp_fscanf
	add	rdi, 4
	sub	rsi, 1
	jne	SHORT $LL16@load_model
; Line 2193
	jmp	$LL34@load_model
$LN17@load_model:
; Line 2189
	call	QWORD PTR __imp___iob_func
	lea	r8, QWORD PTR cmd$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0CC@GKEEPFK@unknown?5text?5in?5model?5file?3?5?$FL?$CFs?$FN@
	lea	rcx, QWORD PTR [rax+96]
	call	QWORD PTR __imp_fprintf
; Line 2190
	mov	rcx, r13
	call	QWORD PTR __imp_free
; Line 2191
	jmp	$LN1@load_model
$LN45@load_model:
; Line 2195
	mov	edi, DWORD PTR [r13+52]
	mov	DWORD PTR nr_feature$[rsp], edi
; Line 2196
	movsdx	xmm0, QWORD PTR [r13+72]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jb	SHORT $LN12@load_model
; Line 2197
	inc	edi
$LN12@load_model:
; Line 2202
	mov	ebx, DWORD PTR nr_class$[rsp]
	cmp	ebx, 2
	jne	SHORT $LN10@load_model
	cmp	DWORD PTR [r13], 4
	je	SHORT $LN10@load_model
; Line 2203
	mov	ebx, 1
$LN10@load_model:
; Line 2207
	mov	eax, ebx
	imul	eax, edi
	movsxd	rcx, eax
	shl	rcx, 3
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [r13+56], rax
; Line 2208
	test	edi, edi
	jle	SHORT $LN6@load_model
	mov	QWORD PTR [rsp+224], rbp
	mov	QWORD PTR [rsp+176], r12
	movsxd	r12, ebx
	shl	r12, 3
	mov	ebp, edi
$LL8@load_model:
; Line 2211
	test	ebx, ebx
	jle	SHORT $LN3@load_model
	mov	rdi, r15
	mov	esi, ebx
	npad	4
$LL5@load_model:
; Line 2212
	mov	rax, QWORD PTR [r13+56]
	lea	rdx, OFFSET FLAT:??_C@_04JINCHDBN@?$CFlf?5?$AA@
	mov	rcx, r14
	lea	r8, QWORD PTR [rdi+rax]
	call	QWORD PTR __imp_fscanf
	add	rdi, 8
	sub	rsi, 1
	jne	SHORT $LL5@load_model
$LN3@load_model:
; Line 2213
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	mov	rcx, r14
	call	QWORD PTR __imp_fscanf
	add	r15, r12
	sub	rbp, 1
	jne	SHORT $LL8@load_model
	mov	r12, QWORD PTR [rsp+176]
	mov	rbp, QWORD PTR [rsp+224]
$LN6@load_model:
; Line 2215
	mov	rcx, r14
	call	QWORD PTR __imp_ferror
	test	eax, eax
	jne	$LN1@load_model
	mov	rcx, r14
	call	QWORD PTR __imp_fclose
	test	eax, eax
	jne	$LN1@load_model
; Line 2217
	mov	rax, r13
	jmp	$LN56@load_model
load_model ENDP
_TEXT	ENDS
PUBLIC	get_nr_feature
; Function compile flags: /Ogtp
;	COMDAT get_nr_feature
_TEXT	SEGMENT
model_$ = 8
get_nr_feature PROC					; COMDAT
; Line 2222
	mov	eax, DWORD PTR [rcx+52]
; Line 2223
	ret	0
get_nr_feature ENDP
_TEXT	ENDS
PUBLIC	get_nr_class
; Function compile flags: /Ogtp
;	COMDAT get_nr_class
_TEXT	SEGMENT
model_$ = 8
get_nr_class PROC					; COMDAT
; Line 2227
	mov	eax, DWORD PTR [rcx+48]
; Line 2228
	ret	0
get_nr_class ENDP
_TEXT	ENDS
PUBLIC	get_labels
; Function compile flags: /Ogtp
;	COMDAT get_labels
_TEXT	SEGMENT
model_$ = 8
label$ = 16
get_labels PROC						; COMDAT
; Line 2232
	cmp	QWORD PTR [rcx+64], 0
	mov	r10, rcx
	je	SHORT $LN1@get_labels
; Line 2233
	xor	r9d, r9d
	cmp	DWORD PTR [rcx+48], r9d
	jle	SHORT $LN1@get_labels
	mov	r8, r9
	npad	10
$LL3@get_labels:
; Line 2234
	mov	rax, QWORD PTR [r10+64]
	inc	r9d
	add	r8, 4
	mov	ecx, DWORD PTR [r8+rax-4]
	mov	DWORD PTR [r8+rdx-4], ecx
	cmp	r9d, DWORD PTR [r10+48]
	jl	SHORT $LL3@get_labels
$LN1@get_labels:
; Line 2235
	fatret	0
get_labels ENDP
_TEXT	ENDS
PUBLIC	free_model_content
;	COMDAT pdata
pdata	SEGMENT
$pdata$free_model_content DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$free_model_content
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$free_model_content DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT free_model_content
_TEXT	SEGMENT
model_ptr$ = 48
free_model_content PROC					; COMDAT
; Line 2238
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 2239
	mov	rcx, QWORD PTR [rcx+56]
	test	rcx, rcx
	je	SHORT $LN2@free_model
; Line 2240
	call	QWORD PTR __imp_free
$LN2@free_model:
; Line 2241
	mov	rcx, QWORD PTR [rbx+64]
	test	rcx, rcx
	je	SHORT $LN1@free_model
; Line 2242
	call	QWORD PTR __imp_free
$LN1@free_model:
; Line 2243
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
free_model_content ENDP
_TEXT	ENDS
PUBLIC	free_and_destroy_model
;	COMDAT pdata
pdata	SEGMENT
$pdata$free_and_destroy_model DD imagerel $LN8
	DD	imagerel $LN8+59
	DD	imagerel $unwind$free_and_destroy_model
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$free_and_destroy_model DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT free_and_destroy_model
_TEXT	SEGMENT
model_ptr_ptr$ = 48
free_and_destroy_model PROC				; COMDAT
; Line 2246
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 2247
	mov	rbx, QWORD PTR [rcx]
; Line 2248
	test	rbx, rbx
	je	SHORT $LN1@free_and_d
; Line 2250
	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN5@free_and_d
	call	QWORD PTR __imp_free
$LN5@free_and_d:
	mov	rcx, QWORD PTR [rbx+64]
	test	rcx, rcx
	je	SHORT $LN4@free_and_d
	call	QWORD PTR __imp_free
$LN4@free_and_d:
; Line 2251
	mov	rcx, rbx
	call	QWORD PTR __imp_free
$LN1@free_and_d:
; Line 2253
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
free_and_destroy_model ENDP
_TEXT	ENDS
PUBLIC	destroy_param
;	COMDAT pdata
pdata	SEGMENT
$pdata$destroy_param DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$destroy_param
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$destroy_param DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT destroy_param
_TEXT	SEGMENT
param$ = 48
destroy_param PROC					; COMDAT
; Line 2256
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 2257
	mov	rcx, QWORD PTR [rcx+32]
	test	rcx, rcx
	je	SHORT $LN2@destroy_pa
; Line 2258
	call	QWORD PTR __imp_free
$LN2@destroy_pa:
; Line 2259
	mov	rcx, QWORD PTR [rbx+40]
	test	rcx, rcx
	je	SHORT $LN1@destroy_pa
; Line 2260
	call	QWORD PTR __imp_free
$LN1@destroy_pa:
; Line 2261
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
destroy_param ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@HHFEICBF@unknown?5solver?5type?$AA@	; `string'
PUBLIC	??_C@_06JBEHEPLL@C?5?$DM?$DN?50?$AA@		; `string'
PUBLIC	??_C@_08PIOFHEEC@eps?5?$DM?$DN?50?$AA@		; `string'
PUBLIC	check_parameter
;	COMDAT ??_C@_0BE@HHFEICBF@unknown?5solver?5type?$AA@
CONST	SEGMENT
??_C@_0BE@HHFEICBF@unknown?5solver?5type?$AA@ DB 'unknown solver type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JBEHEPLL@C?5?$DM?$DN?50?$AA@
CONST	SEGMENT
??_C@_06JBEHEPLL@C?5?$DM?$DN?50?$AA@ DB 'C <= 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIOFHEEC@eps?5?$DM?$DN?50?$AA@
CONST	SEGMENT
??_C@_08PIOFHEEC@eps?5?$DM?$DN?50?$AA@ DB 'eps <= 0', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT check_parameter
_TEXT	SEGMENT
prob$ = 8
param$ = 16
check_parameter PROC					; COMDAT
; Line 2265
	xorpd	xmm0, xmm0
	comisd	xmm0, QWORD PTR [rdx+8]
	jb	SHORT $LN3@check_para
; Line 2266
	lea	rax, OFFSET FLAT:??_C@_08PIOFHEEC@eps?5?$DM?$DN?50?$AA@
; Line 2282
	ret	0
$LN3@check_para:
; Line 2268
	comisd	xmm0, QWORD PTR [rdx+16]
	jb	SHORT $LN2@check_para
; Line 2269
	lea	rax, OFFSET FLAT:??_C@_06JBEHEPLL@C?5?$DM?$DN?50?$AA@
; Line 2282
	ret	0
$LN2@check_para:
; Line 2278
	mov	eax, DWORD PTR [rdx]
	test	eax, eax
	je	SHORT $LN1@check_para
	cmp	eax, 1
	je	SHORT $LN1@check_para
	cmp	eax, 2
	je	SHORT $LN1@check_para
	cmp	eax, 3
	je	SHORT $LN1@check_para
	cmp	eax, 4
	je	SHORT $LN1@check_para
	cmp	eax, 5
	je	SHORT $LN1@check_para
	cmp	eax, 6
	je	SHORT $LN1@check_para
	cmp	eax, 7
	je	SHORT $LN1@check_para
; Line 2279
	lea	rax, OFFSET FLAT:??_C@_0BE@HHFEICBF@unknown?5solver?5type?$AA@
; Line 2282
	ret	0
$LN1@check_para:
; Line 2281
	xor	eax, eax
; Line 2282
	ret	0
check_parameter ENDP
_TEXT	ENDS
PUBLIC	check_probability_model
; Function compile flags: /Ogtp
;	COMDAT check_probability_model
_TEXT	SEGMENT
model_$ = 8
check_probability_model PROC				; COMDAT
; Line 2288
	mov	eax, DWORD PTR [rcx]
	test	eax, eax
	je	SHORT $LN3@check_prob
	cmp	eax, 7
	je	SHORT $LN3@check_prob
	cmp	eax, 6
	je	SHORT $LN3@check_prob
	xor	eax, eax
; Line 2289
	ret	0
$LN3@check_prob:
; Line 2288
	mov	eax, 1
; Line 2289
	ret	0
check_probability_model ENDP
_TEXT	ENDS
PUBLIC	set_print_string_function
; Function compile flags: /Ogtp
;	COMDAT set_print_string_function
_TEXT	SEGMENT
print_func$ = 8
set_print_string_function PROC				; COMDAT
; Line 2293
	lea	rax, OFFSET FLAT:?print_string_stdout@@YAXPEBD@Z ; print_string_stdout
	test	rcx, rcx
	cmove	rcx, rax
	mov	QWORD PTR liblinear_print_string, rcx
; Line 2297
	ret	0
set_print_string_function ENDP
_TEXT	ENDS
EXTRN	memcpy:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$clone@NN@@YAXAEAPEANPEANH@Z DD imagerel ??$clone@NN@@YAXAEAPEANPEANH@Z
	DD	imagerel ??$clone@NN@@YAXAEAPEANPEANH@Z+88
	DD	imagerel $unwind$??$clone@NN@@YAXAEAPEANPEANH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$clone@NN@@YAXAEAPEANPEANH@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??$clone@NN@@YAXAEAPEANPEANH@Z
_TEXT	SEGMENT
dst$ = 48
src$ = 56
n$ = 64
??$clone@NN@@YAXAEAPEANPEANH@Z PROC			; clone<double,double>, COMDAT
; Line 17
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
; Line 18
	movsxd	rbx, r8d
	mov	rsi, rdx
	mov	rcx, -1
	mov	eax, 8
	mul	rbx
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 19
	lea	r8, QWORD PTR [rbx*8]
	mov	rdx, rsi
	mov	rcx, rax
	mov	QWORD PTR [rdi], rax
; Line 20
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	memcpy
??$clone@NN@@YAXAEAPEANPEANH@Z ENDP			; clone<double,double>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$min@N@@YANNN@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$min@N@@YANNN@Z PROC					; min<double>, COMDAT
; Line 11
	comisd	xmm1, xmm0
	ja	SHORT $LN4@min
	movapd	xmm0, xmm1
$LN4@min:
	fatret	0
??$min@N@@YANNN@Z ENDP					; min<double>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$max@N@@YANNN@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$max@N@@YANNN@Z PROC					; max<double>, COMDAT
; Line 14
	comisd	xmm0, xmm1
	ja	SHORT $LN4@max
	movapd	xmm0, xmm1
$LN4@max:
	fatret	0
??$max@N@@YANNN@Z ENDP					; max<double>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$swap@H@@YAXAEAH0@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$swap@H@@YAXAEAH0@Z PROC				; swap<int>, COMDAT
; Line 9
	mov	eax, DWORD PTR [rdx]
	mov	r8d, DWORD PTR [rcx]
	mov	DWORD PTR [rcx], eax
	mov	DWORD PTR [rdx], r8d
	ret	0
??$swap@H@@YAXAEAH0@Z ENDP				; swap<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$swap@N@@YAXAEAN0@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$swap@N@@YAXAEAN0@Z PROC				; swap<double>, COMDAT
; Line 9
	mov	rax, QWORD PTR [rdx]
	movsdx	xmm0, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax
	movsdx	QWORD PTR [rdx], xmm0
	ret	0
??$swap@N@@YAXAEAN0@Z ENDP				; swap<double>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$min@H@@YAHHH@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$min@H@@YAHHH@Z PROC					; min<int>, COMDAT
; Line 11
	cmp	ecx, edx
	cmovl	edx, ecx
	mov	eax, edx
	ret	0
??$min@H@@YAHHH@Z ENDP					; min<int>
_TEXT	ENDS
PUBLIC	??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z		; l2r_lr_fun::l2r_lr_fun
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z DD imagerel $LN25
	DD	imagerel $LN25+355
	DD	imagerel $unwind$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA DD imagerel ?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA
	DD	imagerel ?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z DD imagerel ??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z
	DD	0ffffffffH
	DD	imagerel ??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z+55
	DD	00H
	DD	imagerel ??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z+316
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z DD 0c2c11H
	DD	03782cH
	DD	046827H
	DD	0f6422H
	DD	0e541dH
	DD	0d3418H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z
_TEXT	SEGMENT
$T9002 = 32
this$ = 96
prob$ = 104
Cp$ = 112
Cn$ = 120
??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z PROC		; l2r_lr_fun::l2r_lr_fun, COMDAT
; Line 69
$LN25:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T9002[rsp], -2
	mov	QWORD PTR [rsp+104], rbx
	mov	QWORD PTR [rsp+112], rbp
	mov	QWORD PTR [rsp+120], rsi
	movaps	XMMWORD PTR [rsp+64], xmm6
	movaps	XMMWORD PTR [rsp+48], xmm7
	movapd	xmm6, xmm3
	movapd	xmm7, xmm2
	mov	rsi, rcx
	lea	rax, OFFSET FLAT:??_7l2r_lr_fun@@6B@
	mov	QWORD PTR [rcx], rax
; Line 71
	movsxd	rbx, DWORD PTR [rdx]
; Line 72
	mov	rdi, QWORD PTR [rdx+8]
; Line 74
	mov	QWORD PTR [rcx+32], rdx
; Line 76
	mov	eax, 8
	mul	rbx
	mov	rbp, -1
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+16], rax
; Line 77
	mov	eax, 8
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+24], rax
; Line 78
	mov	eax, 8
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR [rsi+8], rax
	xor	edx, edx
; Line 80
	cmp	rbx, 4
	jl	SHORT $LC14@l2r_lr_fun
; Line 69
	add	rax, 16
	lea	rcx, QWORD PTR [rdi+8]
	lea	r8, QWORD PTR [rbx-4]
	shr	r8, 2
	inc	r8
; Line 80
	lea	rdx, QWORD PTR [r8*4]
	npad	2
$LL23@l2r_lr_fun:
; Line 82
	cmp	DWORD PTR [rcx-8], 1
	jne	SHORT $LN15@l2r_lr_fun
; Line 83
	movsdx	QWORD PTR [rax-16], xmm7
; Line 84
	jmp	SHORT $LN16@l2r_lr_fun
$LN15@l2r_lr_fun:
; Line 85
	movsdx	QWORD PTR [rax-16], xmm6
$LN16@l2r_lr_fun:
; Line 82
	cmp	DWORD PTR [rcx-4], 1
	jne	SHORT $LN17@l2r_lr_fun
; Line 83
	movsdx	QWORD PTR [rax-8], xmm7
; Line 84
	jmp	SHORT $LN18@l2r_lr_fun
$LN17@l2r_lr_fun:
; Line 85
	movsdx	QWORD PTR [rax-8], xmm6
$LN18@l2r_lr_fun:
; Line 82
	cmp	DWORD PTR [rcx], 1
	jne	SHORT $LN19@l2r_lr_fun
; Line 83
	movsdx	QWORD PTR [rax], xmm7
; Line 84
	jmp	SHORT $LN20@l2r_lr_fun
$LN19@l2r_lr_fun:
; Line 85
	movsdx	QWORD PTR [rax], xmm6
$LN20@l2r_lr_fun:
; Line 82
	cmp	DWORD PTR [rcx+4], 1
	jne	SHORT $LN21@l2r_lr_fun
; Line 83
	movsdx	QWORD PTR [rax+8], xmm7
; Line 84
	jmp	SHORT $LN22@l2r_lr_fun
$LN21@l2r_lr_fun:
; Line 85
	movsdx	QWORD PTR [rax+8], xmm6
$LN22@l2r_lr_fun:
; Line 69
	add	rcx, 16
	add	rax, 32					; 00000020H
; Line 80
	sub	r8, 1
	jne	SHORT $LL23@l2r_lr_fun
$LC14@l2r_lr_fun:
	cmp	rdx, rbx
	jge	SHORT $LN24@l2r_lr_fun
	mov	rax, QWORD PTR [rsi+8]
	lea	rcx, QWORD PTR [rax+rdx*8]
$LC5@l2r_lr_fun:
; Line 82
	cmp	DWORD PTR [rdi+rdx*4], 1
	jne	SHORT $LN2@l2r_lr_fun
; Line 83
	movsdx	QWORD PTR [rcx], xmm7
; Line 84
	jmp	SHORT $LN4@l2r_lr_fun
$LN2@l2r_lr_fun:
; Line 85
	movsdx	QWORD PTR [rcx], xmm6
$LN4@l2r_lr_fun:
; Line 80
	inc	rdx
	add	rcx, 8
	cmp	rdx, rbx
	jl	SHORT $LC5@l2r_lr_fun
; Line 87
	mov	rax, rsi
	jmp	SHORT $LN13@l2r_lr_fun
$LN24@l2r_lr_fun:
	mov	rax, rsi
$LN13@l2r_lr_fun:
	mov	rbx, QWORD PTR [rsp+104]
	mov	rbp, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	movaps	xmm6, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+48]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z ENDP		; l2r_lr_fun::l2r_lr_fun
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T9002 = 32
this$ = 96
prob$ = 104
Cp$ = 112
Cn$ = 120
?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA PROC ; `l2r_lr_fun::l2r_lr_fun'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1function@@UEAA@XZ			; function::~function
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z@4HA ENDP ; `l2r_lr_fun::l2r_lr_fun'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gl2r_lr_fun@@UEAAPEAXI@Z DD imagerel $LN10
	DD	imagerel $LN10+109
	DD	imagerel $unwind$??_Gl2r_lr_fun@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA DD imagerel ?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA
	DD	imagerel ?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gl2r_lr_fun@@UEAAPEAXI@Z DD imagerel ??_Gl2r_lr_fun@@UEAAPEAXI@Z
	DD	0ffffffffH
	DD	imagerel ??_Gl2r_lr_fun@@UEAAPEAXI@Z+39
	DD	00H
	DD	imagerel ??_Gl2r_lr_fun@@UEAAPEAXI@Z+67
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gl2r_lr_fun@@UEAAPEAXI@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_Gl2r_lr_fun@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_Gl2r_lr_fun@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_Gl2r_lr_fun@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??_Gl2r_lr_fun@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_Gl2r_lr_fun@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??_Gl2r_lr_fun@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T9044 = 32
this$ = 64
__flags$ = 72
??_Gl2r_lr_fun@@UEAAPEAXI@Z PROC			; l2r_lr_fun::`scalar deleting destructor', COMDAT
$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T9044[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	ebx, edx
	mov	rdi, rcx
	lea	rax, OFFSET FLAT:??_7l2r_lr_fun@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+16]
	call	??3@YAXPEAX@Z				; operator delete
	mov	rcx, QWORD PTR [rdi+24]
	call	??3@YAXPEAX@Z				; operator delete
	mov	rcx, QWORD PTR [rdi+8]
	call	??3@YAXPEAX@Z				; operator delete
	npad	1
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	QWORD PTR [rdi], rax
	test	bl, 1
	je	SHORT $LN9@scalar@2
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
	mov	rax, rdi
	jmp	SHORT $LN1@scalar@2
$LN9@scalar@2:
	mov	rax, rdi
$LN1@scalar@2:
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??_Gl2r_lr_fun@@UEAAPEAXI@Z ENDP			; l2r_lr_fun::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T9044 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA PROC		; `l2r_lr_fun::`scalar deleting destructor''::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1function@@UEAA@XZ			; function::~function
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???_Gl2r_lr_fun@@UEAAPEAXI@Z@4HA ENDP		; `l2r_lr_fun::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__mask@@NegDouble@
PUBLIC	__real@3ff0000000000000
EXTRN	exp:PROC
EXTRN	log:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fun@l2r_lr_fun@@UEAANPEAN@Z DD imagerel $LN29
	DD	imagerel $LN29+16
	DD	imagerel $unwind$?fun@l2r_lr_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?fun@l2r_lr_fun@@UEAANPEAN@Z DD imagerel $LN29+16
	DD	imagerel $LN29+188
	DD	imagerel $chain$6$?fun@l2r_lr_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?fun@l2r_lr_fun@@UEAANPEAN@Z DD imagerel $LN29+188
	DD	imagerel $LN29+344
	DD	imagerel $chain$9$?fun@l2r_lr_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?fun@l2r_lr_fun@@UEAANPEAN@Z DD imagerel $LN29+344
	DD	imagerel $LN29+414
	DD	imagerel $chain$10$?fun@l2r_lr_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?fun@l2r_lr_fun@@UEAANPEAN@Z DD imagerel $LN29+414
	DD	imagerel $LN29+567
	DD	imagerel $chain$11$?fun@l2r_lr_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?fun@l2r_lr_fun@@UEAANPEAN@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+16
	DD	imagerel $unwind$?fun@l2r_lr_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?fun@l2r_lr_fun@@UEAANPEAN@Z DD 021H
	DD	imagerel $LN29+16
	DD	imagerel $LN29+188
	DD	imagerel $chain$6$?fun@l2r_lr_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?fun@l2r_lr_fun@@UEAANPEAN@Z DD 061d21H
	DD	03981dH
	DD	04880bH
	DD	057805H
	DD	imagerel $LN29+16
	DD	imagerel $LN29+188
	DD	imagerel $chain$6$?fun@l2r_lr_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?fun@l2r_lr_fun@@UEAANPEAN@Z DD 0e2321H
	DD	02a823H
	DD	0ef418H
	DD	0fe414H
	DD	010d410H
	DD	017c40cH
	DD	0167408H
	DD	0156404H
	DD	imagerel $LN29
	DD	imagerel $LN29+16
	DD	imagerel $unwind$?fun@l2r_lr_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fun@l2r_lr_fun@@UEAANPEAN@Z DD 061001H
	DD	066810H
	DD	011010cH
	DD	030045005H
xdata	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __mask@@NegDouble@
CONST	SEGMENT
__mask@@NegDouble@ DB 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?fun@l2r_lr_fun@@UEAANPEAN@Z
_TEXT	SEGMENT
w_size$1$ = 160
this$ = 160
w$ = 168
?fun@l2r_lr_fun@@UEAANPEAN@Z PROC			; l2r_lr_fun::fun, COMDAT
; Line 98
$LN29:
	mov	rax, rsp
	push	rbx
	push	rbp
	sub	rsp, 136				; 00000088H
	movaps	XMMWORD PTR [rax-56], xmm6
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	mov	QWORD PTR [rax+32], r12
	mov	QWORD PTR [rax-24], r13
	mov	QWORD PTR [rax-32], r14
	mov	QWORD PTR [rax-40], r15
	mov	rbp, rdx
	mov	r14, rcx
	movaps	XMMWORD PTR [rax-120], xmm10
; Line 101
	mov	rax, QWORD PTR [rcx+32]
	xorpd	xmm10, xmm10
	movapd	xmm6, xmm10
	mov	r15, QWORD PTR [rax+8]
; Line 102
	movsxd	rsi, DWORD PTR [rax]
; Line 103
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
; Line 105
	mov	rdx, QWORD PTR [r14+32]
	mov	r13, QWORD PTR [r14+16]
	movsxd	r8, DWORD PTR [rdx]
	mov	r9, QWORD PTR [rdx+16]
	xor	ebx, ebx
	mov	DWORD PTR w_size$1$[rsp], eax
	test	r8, r8
	jle	SHORT $LN13@fun
	mov	rdx, r13
	sub	r9, r13
$LL15@fun:
	mov	rcx, QWORD PTR [r9+rdx]
	mov	QWORD PTR [rdx], rbx
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN14@fun
	npad	1
$LL12@fun:
	cdqe
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rbp+rax*8-8]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [rdx]
	movsdx	QWORD PTR [rdx], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL12@fun
$LN14@fun:
	add	rdx, 8
	sub	r8, 1
	jne	SHORT $LL15@fun
$LN13@fun:
	mov	rdi, rbx
; Line 106
	mov	r12, rsi
	test	esi, esi
	jle	$LN6@fun
	mov	rsi, QWORD PTR [r14+8]
	movaps	XMMWORD PTR [rsp+80], xmm7
	movaps	XMMWORD PTR [rsp+64], xmm8
	movsdx	xmm8, QWORD PTR __real@3ff0000000000000
	sub	r13, rsi
	movaps	XMMWORD PTR [rsp+48], xmm9
	movsdx	xmm9, QWORD PTR __mask@@NegDouble@
$LL8@fun:
; Line 108
	movd	xmm7, DWORD PTR [r15+rdi*4]
	cvtdq2pd xmm7, xmm7
	mulsd	xmm7, QWORD PTR [r13+rsi]
; Line 109
	comisd	xmm7, xmm10
	jb	SHORT $LN5@fun
; Line 110
	xorpd	xmm7, xmm9
	movapd	xmm0, xmm7
	call	exp
	addsd	xmm0, xmm8
	call	log
	mulsd	xmm0, QWORD PTR [rsi]
	addsd	xmm6, xmm0
; Line 111
	jmp	SHORT $LN7@fun
$LN5@fun:
; Line 112
	movapd	xmm0, xmm7
	call	exp
	addsd	xmm0, xmm8
	call	log
	subsd	xmm0, xmm7
	mulsd	xmm0, QWORD PTR [rsi]
	addsd	xmm6, xmm0
$LN7@fun:
	inc	rdi
	add	rsi, 8
	cmp	rdi, r12
	jl	SHORT $LL8@fun
	movaps	xmm9, XMMWORD PTR [rsp+48]
	movaps	xmm8, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+80]
$LN6@fun:
; Line 115
	movsxd	rax, DWORD PTR w_size$1$[rsp]
	mulsd	xmm6, QWORD PTR __real@4000000000000000
	movaps	xmm10, XMMWORD PTR [rsp+32]
	cmp	rax, 4
	mov	r15, QWORD PTR [rsp+112]
	mov	r14, QWORD PTR [rsp+120]
	mov	r13, QWORD PTR [rsp+128]
	mov	r12, QWORD PTR [rsp+184]
	mov	rdi, QWORD PTR [rsp+176]
	mov	rsi, QWORD PTR [rsp+168]
	jl	SHORT $LC27@fun
	lea	rcx, QWORD PTR [rax-4]
	lea	rdx, QWORD PTR [rbp+16]
	shr	rcx, 2
	inc	rcx
	lea	rbx, QWORD PTR [rcx*4]
	npad	11
$LL28@fun:
; Line 116
	movsdx	xmm0, QWORD PTR [rdx-16]
	movsdx	xmm1, QWORD PTR [rdx-8]
	movsdx	xmm2, QWORD PTR [rdx]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	movsdx	xmm3, QWORD PTR [rdx+8]
	addsd	xmm0, xmm6
	add	rdx, 32					; 00000020H
	sub	rcx, 1
	mulsd	xmm3, xmm3
	movapd	xmm6, xmm0
	addsd	xmm6, xmm1
	addsd	xmm6, xmm2
	addsd	xmm6, xmm3
	jne	SHORT $LL28@fun
$LC27@fun:
; Line 115
	cmp	rbx, rax
	jge	SHORT $LN26@fun
$LC3@fun:
; Line 116
	movsdx	xmm1, QWORD PTR [rbp+rbx*8]
	inc	rbx
	cmp	rbx, rax
	mulsd	xmm1, xmm1
	addsd	xmm6, xmm1
	jl	SHORT $LC3@fun
$LN26@fun:
; Line 117
	mulsd	xmm6, QWORD PTR __real@3fe0000000000000
; Line 119
	movapd	xmm0, xmm6
; Line 120
	movaps	xmm6, XMMWORD PTR [rsp+96]
	add	rsp, 136				; 00000088H
	pop	rbp
	pop	rbx
	ret	0
?fun@l2r_lr_fun@@UEAANPEAN@Z ENDP			; l2r_lr_fun::fun
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN16
	DD	imagerel $LN16+30
	DD	imagerel $unwind$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN16+30
	DD	imagerel $LN16+91
	DD	imagerel $chain$1$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN16+91
	DD	imagerel $LN16+321
	DD	imagerel $chain$5$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN16+321
	DD	imagerel $LN16+360
	DD	imagerel $chain$6$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN16+360
	DD	imagerel $LN16+528
	DD	imagerel $chain$7$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+30
	DD	imagerel $unwind$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD 021H
	DD	imagerel $LN16+30
	DD	imagerel $LN16+91
	DD	imagerel $chain$1$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD 081c21H
	DD	04681cH
	DD	0bf417H
	DD	0ce40eH
	DD	0dd405H
	DD	imagerel $LN16+30
	DD	imagerel $LN16+91
	DD	imagerel $chain$1$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD 040a21H
	DD	0e640aH
	DD	0f3405H
	DD	imagerel $LN16
	DD	imagerel $LN16+30
	DD	imagerel $unwind$?grad@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?grad@l2r_lr_fun@@UEAAXPEAN0@Z DD 041a01H
	DD	0c013f21aH
	DD	050107011H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?grad@l2r_lr_fun@@UEAAXPEAN0@Z
_TEXT	SEGMENT
y$1$ = 32
tv1023 = 40
this$ = 160
w$ = 168
g$ = 176
w_size$1$ = 184
?grad@l2r_lr_fun@@UEAAXPEAN0@Z PROC			; l2r_lr_fun::grad, COMDAT
; Line 123
$LN16:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	push	r12
	sub	rsp, 128				; 00000080H
; Line 125
	mov	rax, QWORD PTR [rcx+32]
	mov	QWORD PTR [rsp+120], rbx
	mov	QWORD PTR [rsp+112], rsi
; Line 126
	movsxd	rbx, DWORD PTR [rax]
	mov	rsi, rcx
	mov	rcx, QWORD PTR [rax+8]
; Line 127
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR y$1$[rsp], rcx
	mov	rcx, rsi
	mov	r12, r8
	mov	rdi, rdx
	call	QWORD PTR [rax+24]
	xor	ebp, ebp
	mov	DWORD PTR w_size$1$[rsp], eax
; Line 129
	test	ebx, ebx
	jle	$LN4@grad
	mov	rax, QWORD PTR [rsi+8]
	mov	QWORD PTR [rsp+104], r13
	mov	r13, QWORD PTR [rsi+24]
	mov	QWORD PTR [rsp+96], r14
	mov	r14, QWORD PTR [rsi+16]
	mov	QWORD PTR [rsp+88], r15
	movaps	XMMWORD PTR [rsp+64], xmm6
	movsdx	xmm6, QWORD PTR __real@3ff0000000000000
	sub	rax, r13
	mov	r15, r14
	mov	r12, rbp
	sub	r15, r13
	mov	rdi, rax
	mov	rax, QWORD PTR y$1$[rsp]
	sub	r13, r14
	mov	rsi, rbx
	npad	7
$LL6@grad:
; Line 131
	mov	eax, DWORD PTR [rax+r12*4]
	lea	rbx, QWORD PTR [r13+r14]
	neg	eax
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [rbx+r15]
	call	exp
; Line 133
	mov	rax, QWORD PTR y$1$[rsp]
	movapd	xmm1, xmm6
	inc	r12
	add	r14, 8
	cmp	r12, rsi
	addsd	xmm0, xmm6
	divsd	xmm1, xmm0
	movapd	xmm0, xmm6
	movsdx	QWORD PTR [r14-8], xmm1
	subsd	xmm0, xmm1
	mulsd	xmm0, xmm1
	movsdx	QWORD PTR [rbx], xmm0
	movsdx	xmm1, QWORD PTR [r14-8]
	movd	xmm0, DWORD PTR [rax+r12*4-4]
	subsd	xmm1, xmm6
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, QWORD PTR [rbx+rdi]
	mulsd	xmm1, xmm0
	movsdx	QWORD PTR [r14-8], xmm1
	jl	SHORT $LL6@grad
	mov	rdi, QWORD PTR w$[rsp]
	mov	rsi, QWORD PTR this$[rsp]
	mov	r12, QWORD PTR g$[rsp]
	movaps	xmm6, XMMWORD PTR [rsp+64]
	mov	r15, QWORD PTR [rsp+88]
	mov	r14, QWORD PTR [rsp+96]
	mov	r13, QWORD PTR [rsp+104]
$LN4@grad:
; Line 135
	mov	rdx, QWORD PTR [rsi+16]
	mov	r8, r12
	mov	rcx, rsi
	call	?XTv@l2r_lr_fun@@AEAAXPEAN0@Z		; l2r_lr_fun::XTv
; Line 137
	movsxd	rcx, DWORD PTR w_size$1$[rsp]
	mov	rsi, QWORD PTR [rsp+112]
	cmp	rcx, 4
	mov	rbx, QWORD PTR [rsp+120]
	jl	SHORT $LC14@grad
	lea	r8, QWORD PTR [rcx-4]
	mov	r9, rdi
	lea	rdx, QWORD PTR [rdi+24]
	shr	r8, 2
	sub	r9, r12
	lea	rax, QWORD PTR [r12+8]
	inc	r8
	lea	rbp, QWORD PTR [r8*4]
	npad	6
$LL15@grad:
; Line 138
	movsdx	xmm0, QWORD PTR [rdx-24]
	add	rax, 32					; 00000020H
	add	rdx, 32					; 00000020H
	sub	r8, 1
	addsd	xmm0, QWORD PTR [rax-40]
	movsdx	QWORD PTR [rax-40], xmm0
	movsdx	xmm1, QWORD PTR [r9+rax-32]
	addsd	xmm1, QWORD PTR [rax-32]
	movsdx	QWORD PTR [rax-32], xmm1
	movsdx	xmm0, QWORD PTR [rdx-40]
	addsd	xmm0, QWORD PTR [rax-24]
	movsdx	QWORD PTR [rax-24], xmm0
	movsdx	xmm1, QWORD PTR [rdx-32]
	addsd	xmm1, QWORD PTR [rax-16]
	movsdx	QWORD PTR [rax-16], xmm1
	jne	SHORT $LL15@grad
$LC14@grad:
; Line 137
	cmp	rbp, rcx
	jge	SHORT $LN13@grad
	sub	rdi, r12
	lea	rax, QWORD PTR [r12+rbp*8]
	sub	rcx, rbp
$LC3@grad:
; Line 138
	movsdx	xmm0, QWORD PTR [rdi+rax]
	add	rax, 8
	sub	rcx, 1
	addsd	xmm0, QWORD PTR [rax-8]
	movsdx	QWORD PTR [rax-8], xmm0
	jne	SHORT $LC3@grad
$LN13@grad:
; Line 139
	add	rsp, 128				; 00000080H
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
?grad@l2r_lr_fun@@UEAAXPEAN0@Z ENDP			; l2r_lr_fun::grad
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN30
	DD	imagerel $LN30+15
	DD	imagerel $unwind$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN30+15
	DD	imagerel $LN30+191
	DD	imagerel $chain$2$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN30+191
	DD	imagerel $LN30+354
	DD	imagerel $chain$3$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN30+354
	DD	imagerel $LN30+452
	DD	imagerel $chain$4$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD imagerel $LN30+452
	DD	imagerel $LN30+631
	DD	imagerel $chain$5$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD 021H
	DD	imagerel $LN30
	DD	imagerel $LN30+15
	DD	imagerel $unwind$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD 021H
	DD	imagerel $LN30+15
	DD	imagerel $LN30+191
	DD	imagerel $chain$2$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD 020521H
	DD	0b5405H
	DD	imagerel $LN30+15
	DD	imagerel $LN30+191
	DD	imagerel $chain$2$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD 061521H
	DD	04f415H
	DD	0ce40aH
	DD	0a3405H
	DD	imagerel $LN30
	DD	imagerel $LN30+15
	DD	imagerel $unwind$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Hv@l2r_lr_fun@@UEAAXPEAN0@Z DD 050b01H
	DD	0d007420bH
	DD	07003c005H
	DD	06002H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?Hv@l2r_lr_fun@@UEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 80
s$ = 88
Hs$ = 96
?Hv@l2r_lr_fun@@UEAAXPEAN0@Z PROC			; l2r_lr_fun::Hv, COMDAT
; Line 147
$LN30:
	push	rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 40					; 00000028H
; Line 149
	mov	rax, QWORD PTR [rcx+32]
	mov	QWORD PTR [rsp+80], rbx
	mov	QWORD PTR [rsp+96], r14
	movsxd	rbx, DWORD PTR [rax]
; Line 150
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+32], r15
	mov	r13, r8
	mov	rdi, rdx
	mov	r14, rcx
	call	QWORD PTR [rax+24]
; Line 151
	mov	rcx, -1
	movsxd	r15, eax
	mov	eax, 8
	mul	rbx
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 153
	mov	rcx, QWORD PTR [r14+32]
	xor	esi, esi
	movsxd	r8, DWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+16]
	mov	r12, rax
	test	r8, r8
	jle	SHORT $LN11@Hv
	mov	rdx, rax
	sub	r9, rax
	npad	7
$LL13@Hv:
	mov	rcx, QWORD PTR [r9+rdx]
	mov	QWORD PTR [rdx], rsi
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN12@Hv
	npad	2
$LL10@Hv:
	cdqe
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rdi+rax*8-8]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [rdx]
	movsdx	QWORD PTR [rdx], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL10@Hv
$LN12@Hv:
	add	rdx, 8
	sub	r8, 1
	jne	SHORT $LL13@Hv
$LN11@Hv:
; Line 154
	cmp	rbx, 4
	mov	r9, rsi
	jl	$LC25@Hv
	mov	rax, QWORD PTR [r14+8]
	mov	r10, QWORD PTR [r14+24]
	mov	QWORD PTR [rsp+88], rbp
; Line 158
	lea	rdx, QWORD PTR [rbx-4]
	mov	rbp, rax
	mov	r11, r10
	shr	rdx, 2
	sub	rbp, r12
	sub	r11, rax
	inc	rdx
	lea	r8, QWORD PTR [rax+16]
	lea	rcx, QWORD PTR [r12+8]
	lea	r9, QWORD PTR [rdx*4]
	npad	4
$LL26@Hv:
	movsdx	xmm0, QWORD PTR [r8-16]
	lea	rax, QWORD PTR [rcx+rbp]
	add	r10, 32					; 00000020H
	add	rcx, 32					; 00000020H
	add	r8, 32					; 00000020H
	sub	rdx, 1
	mulsd	xmm0, QWORD PTR [r10-32]
	mulsd	xmm0, QWORD PTR [rcx-40]
	movsdx	QWORD PTR [rcx-40], xmm0
	movsdx	xmm1, QWORD PTR [rax+r11]
	mulsd	xmm1, QWORD PTR [rax]
	mulsd	xmm1, QWORD PTR [rcx-32]
	movsdx	QWORD PTR [rcx-32], xmm1
	movsdx	xmm0, QWORD PTR [r8+r11-32]
	mulsd	xmm0, QWORD PTR [r8-32]
	mulsd	xmm0, QWORD PTR [rcx-24]
	movsdx	QWORD PTR [rcx-24], xmm0
	movsdx	xmm1, QWORD PTR [r8-24]
	mulsd	xmm1, QWORD PTR [r10-8]
	mulsd	xmm1, QWORD PTR [rcx-16]
	movsdx	QWORD PTR [rcx-16], xmm1
	jne	SHORT $LL26@Hv
	mov	rbp, QWORD PTR [rsp+88]
$LC25@Hv:
; Line 154
	cmp	r9, rbx
	jge	SHORT $LN24@Hv
	mov	rdx, QWORD PTR [r14+8]
	mov	r8, QWORD PTR [r14+24]
	lea	rcx, QWORD PTR [r12+r9*8]
	sub	r8, rdx
	sub	rdx, r12
	sub	rbx, r9
$LC6@Hv:
; Line 155
	lea	rax, QWORD PTR [rcx+rdx]
; Line 158
	add	rcx, 8
	sub	rbx, 1
	movsdx	xmm0, QWORD PTR [rax+r8]
	mulsd	xmm0, QWORD PTR [rax]
	mulsd	xmm0, QWORD PTR [rcx-8]
	movsdx	QWORD PTR [rcx-8], xmm0
	jne	SHORT $LC6@Hv
$LN24@Hv:
; Line 157
	mov	r8, r13
	mov	rdx, r12
	mov	rcx, r14
	call	?XTv@l2r_lr_fun@@AEAAXPEAN0@Z		; l2r_lr_fun::XTv
	mov	r14, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [rsp+80]
; Line 158
	mov	rcx, r15
	mov	r15, QWORD PTR [rsp+32]
	cmp	rcx, 4
	jl	SHORT $LC28@Hv
	lea	r8, QWORD PTR [rcx-4]
	mov	r9, rdi
	lea	rdx, QWORD PTR [rdi+24]
	shr	r8, 2
	sub	r9, r13
	lea	rax, QWORD PTR [r13+8]
	inc	r8
	lea	rsi, QWORD PTR [r8*4]
	npad	11
$LL29@Hv:
; Line 159
	movsdx	xmm0, QWORD PTR [rdx-24]
	add	rax, 32					; 00000020H
	add	rdx, 32					; 00000020H
	sub	r8, 1
	addsd	xmm0, QWORD PTR [rax-40]
	movsdx	QWORD PTR [rax-40], xmm0
	movsdx	xmm1, QWORD PTR [r9+rax-32]
	addsd	xmm1, QWORD PTR [rax-32]
	movsdx	QWORD PTR [rax-32], xmm1
	movsdx	xmm0, QWORD PTR [rdx-40]
	addsd	xmm0, QWORD PTR [rax-24]
	movsdx	QWORD PTR [rax-24], xmm0
	movsdx	xmm1, QWORD PTR [rdx-32]
	addsd	xmm1, QWORD PTR [rax-16]
	movsdx	QWORD PTR [rax-16], xmm1
	jne	SHORT $LL29@Hv
$LC28@Hv:
; Line 158
	cmp	rsi, rcx
	jge	SHORT $LN27@Hv
	sub	rdi, r13
	lea	rax, QWORD PTR [r13+rsi*8]
	sub	rcx, rsi
$LC3@Hv:
; Line 159
	movsdx	xmm0, QWORD PTR [rax+rdi]
	add	rax, 8
	sub	rcx, 1
	addsd	xmm0, QWORD PTR [rax-8]
	movsdx	QWORD PTR [rax-8], xmm0
	jne	SHORT $LC3@Hv
$LN27@Hv:
; Line 160
	mov	rcx, r12
; Line 161
	add	rsp, 40					; 00000028H
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	jmp	??3@YAXPEAX@Z				; operator delete
?Hv@l2r_lr_fun@@UEAAXPEAN0@Z ENDP			; l2r_lr_fun::Hv
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z DD imagerel $LN10
	DD	imagerel $LN10+118
	DD	imagerel $unwind$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA DD imagerel ?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA
	DD	imagerel ?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z DD imagerel ??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z
	DD	0ffffffffH
	DD	imagerel ??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z+39
	DD	00H
	DD	imagerel ??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T9286 = 32
this$ = 64
__flags$ = 72
??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z PROC			; l2r_l2_svc_fun::`scalar deleting destructor', COMDAT
$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T9286[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	ebx, edx
	mov	rdi, rcx
	lea	rax, OFFSET FLAT:??_7l2r_l2_svc_fun@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+16]
	call	??3@YAXPEAX@Z				; operator delete
	mov	rcx, QWORD PTR [rdi+24]
	call	??3@YAXPEAX@Z				; operator delete
	mov	rcx, QWORD PTR [rdi+8]
	call	??3@YAXPEAX@Z				; operator delete
	mov	rcx, QWORD PTR [rdi+32]
	call	??3@YAXPEAX@Z				; operator delete
	npad	1
	lea	rax, OFFSET FLAT:??_7function@@6B@
	mov	QWORD PTR [rdi], rax
	test	bl, 1
	je	SHORT $LN9@scalar@3
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
	mov	rax, rdi
	jmp	SHORT $LN1@scalar@3
$LN9@scalar@3:
	mov	rax, rdi
$LN1@scalar@3:
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??_Gl2r_l2_svc_fun@@UEAAPEAXI@Z ENDP			; l2r_l2_svc_fun::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T9286 = 32
this$ = 64
__flags$ = 72
?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA PROC	; `l2r_l2_svc_fun::`scalar deleting destructor''::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1function@@UEAA@XZ			; function::~function
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???_Gl2r_l2_svc_fun@@UEAAPEAXI@Z@4HA ENDP	; `l2r_l2_svc_fun::`scalar deleting destructor''::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD imagerel $LN35
	DD	imagerel $LN35+15
	DD	imagerel $unwind$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD imagerel $LN35+15
	DD	imagerel $LN35+181
	DD	imagerel $chain$4$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD imagerel $LN35+181
	DD	imagerel $LN35+527
	DD	imagerel $chain$6$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD imagerel $LN35+527
	DD	imagerel $LN35+644
	DD	imagerel $chain$7$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD imagerel $LN35+644
	DD	imagerel $LN35+790
	DD	imagerel $chain$8$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+15
	DD	imagerel $unwind$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD 021H
	DD	imagerel $LN35+15
	DD	imagerel $LN35+181
	DD	imagerel $chain$4$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD 040a21H
	DD	0fc40aH
	DD	0c5405H
	DD	imagerel $LN35+15
	DD	imagerel $LN35+181
	DD	imagerel $chain$4$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD 0a2321H
	DD	027823H
	DD	08e41eH
	DD	09d412H
	DD	0e740aH
	DD	0d6405H
	DD	imagerel $LN35
	DD	imagerel $LN35+15
	DD	imagerel $unwind$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fun@l2r_l2_svc_fun@@UEAANPEAN@Z DD 040f01H
	DD	03680fH
	DD	030029206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?fun@l2r_l2_svc_fun@@UEAANPEAN@Z
_TEXT	SEGMENT
this$ = 96
w$ = 104
?fun@l2r_l2_svc_fun@@UEAANPEAN@Z PROC			; l2r_l2_svc_fun::fun, COMDAT
; Line 257
$LN35:
	push	rbx
	sub	rsp, 80					; 00000050H
; Line 260
	mov	rax, QWORD PTR [rcx+48]
	movaps	XMMWORD PTR [rsp+48], xmm6
	mov	QWORD PTR [rsp+104], rsi
	mov	QWORD PTR [rsp+112], rdi
; Line 261
	movsxd	rdi, DWORD PTR [rax]
	mov	QWORD PTR [rsp+72], r13
	mov	r13, QWORD PTR [rax+8]
; Line 262
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+64], r14
	movaps	XMMWORD PTR [rsp+32], xmm7
	xorpd	xmm7, xmm7
	movapd	xmm6, xmm7
	mov	rbx, rdx
	mov	rsi, rcx
	call	QWORD PTR [rax+24]
; Line 264
	mov	rdx, QWORD PTR [rsi+48]
	mov	r8, QWORD PTR [rsi+16]
	movsxd	r14, eax
	movsxd	r9, DWORD PTR [rdx]
	mov	r10, QWORD PTR [rdx+16]
	xor	edx, edx
	test	r9, r9
	jle	SHORT $LN12@fun@2
	sub	r10, r8
	npad	1
$LL14@fun@2:
	mov	rcx, QWORD PTR [r10+r8]
	mov	QWORD PTR [r8], rdx
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN13@fun@2
	npad	2
$LL11@fun@2:
	cdqe
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rbx+rax*8-8]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [r8]
	movsdx	QWORD PTR [r8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL11@fun@2
$LN13@fun@2:
	add	r8, 8
	sub	r9, 1
	jne	SHORT $LL14@fun@2
$LN12@fun@2:
; Line 265
	cmp	rdi, 4
	movsdx	xmm2, QWORD PTR __real@3ff0000000000000
	mov	rcx, rdx
	jl	$LC26@fun@2
	mov	rax, QWORD PTR [rsi+16]
	mov	QWORD PTR [rsp+96], rbp
	mov	QWORD PTR [rsp+120], r12
; Line 273
	lea	r11, QWORD PTR [rdi-4]
	mov	r12d, 8
	mov	rbp, -16
	shr	r11, 2
	sub	r12, rax
	sub	rbp, rax
	inc	r11
	mov	r10d, 16
	lea	r8, QWORD PTR [rax+16]
	lea	rcx, QWORD PTR [r11*4]
	lea	r9, QWORD PTR [r13+8]
	npad	13
$LL31@fun@2:
	movd	xmm0, DWORD PTR [r9-8]
	movapd	xmm1, xmm2
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [r8-16]
	subsd	xmm1, xmm0
	movsdx	QWORD PTR [r8-16], xmm0
	comisd	xmm1, xmm7
	jbe	SHORT $LN27@fun@2
	mov	rax, QWORD PTR [rsi+8]
	movapd	xmm0, xmm1
	add	rax, rbp
	mulsd	xmm0, QWORD PTR [rax+r8]
	mulsd	xmm0, xmm1
	addsd	xmm6, xmm0
$LN27@fun@2:
	movd	xmm0, DWORD PTR [r9-4]
	movapd	xmm1, xmm2
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [r8-8]
	subsd	xmm1, xmm0
	movsdx	QWORD PTR [r8-8], xmm0
	comisd	xmm1, xmm7
	jbe	SHORT $LN28@fun@2
	mov	rax, QWORD PTR [rsi+8]
	movapd	xmm0, xmm1
	add	rax, rbp
	mulsd	xmm0, QWORD PTR [rax+r8+8]
	mulsd	xmm0, xmm1
	addsd	xmm6, xmm0
$LN28@fun@2:
	movd	xmm0, DWORD PTR [r9]
	movapd	xmm1, xmm2
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [r8]
	subsd	xmm1, xmm0
	movsdx	QWORD PTR [r8], xmm0
	comisd	xmm1, xmm7
	jbe	SHORT $LN29@fun@2
	mov	rax, QWORD PTR [rsi+8]
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR [rax+r10]
	mulsd	xmm0, xmm1
	addsd	xmm6, xmm0
$LN29@fun@2:
	movd	xmm0, DWORD PTR [r9+4]
	movapd	xmm1, xmm2
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [r8+8]
	subsd	xmm1, xmm0
	movsdx	QWORD PTR [r8+8], xmm0
	comisd	xmm1, xmm7
	jbe	SHORT $LN30@fun@2
	mov	rax, QWORD PTR [rsi+8]
	movapd	xmm0, xmm1
	add	rax, r12
	mulsd	xmm0, QWORD PTR [rax+r8]
	mulsd	xmm0, xmm1
	addsd	xmm6, xmm0
$LN30@fun@2:
	add	r9, 16
	add	r10, 32					; 00000020H
	add	r8, 32					; 00000020H
	sub	r11, 1
	jne	$LL31@fun@2
	mov	r12, QWORD PTR [rsp+120]
	mov	rbp, QWORD PTR [rsp+96]
$LC26@fun@2:
; Line 265
	cmp	rcx, rdi
	jge	SHORT $LN25@fun@2
	mov	r8, QWORD PTR [rsi+16]
$LC7@fun@2:
; Line 267
	movd	xmm0, DWORD PTR [r13+rcx*4]
; Line 268
	movapd	xmm1, xmm2
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [r8+rcx*8]
	subsd	xmm1, xmm0
	movsdx	QWORD PTR [r8+rcx*8], xmm0
; Line 269
	comisd	xmm1, xmm7
	jbe	SHORT $LN6@fun@2
; Line 270
	mov	rax, QWORD PTR [rsi+8]
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR [rax+rcx*8]
	mulsd	xmm0, xmm1
	addsd	xmm6, xmm0
$LN6@fun@2:
; Line 273
	inc	rcx
	cmp	rcx, rdi
	jl	SHORT $LC7@fun@2
$LN25@fun@2:
; Line 272
	mulsd	xmm6, QWORD PTR __real@4000000000000000
	movaps	xmm7, XMMWORD PTR [rsp+32]
	mov	r13, QWORD PTR [rsp+72]
	mov	rdi, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+104]
; Line 273
	mov	rax, r14
	cmp	rax, 4
	mov	r14, QWORD PTR [rsp+64]
	jl	SHORT $LC33@fun@2
	lea	rcx, QWORD PTR [rax-4]
	lea	r8, QWORD PTR [rbx+16]
	shr	rcx, 2
	inc	rcx
	lea	rdx, QWORD PTR [rcx*4]
	npad	5
$LL34@fun@2:
; Line 274
	movsdx	xmm0, QWORD PTR [r8-16]
	movsdx	xmm1, QWORD PTR [r8-8]
	movsdx	xmm2, QWORD PTR [r8]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	movsdx	xmm3, QWORD PTR [r8+8]
	addsd	xmm0, xmm6
	add	r8, 32					; 00000020H
	sub	rcx, 1
	mulsd	xmm3, xmm3
	movapd	xmm6, xmm0
	addsd	xmm6, xmm1
	addsd	xmm6, xmm2
	addsd	xmm6, xmm3
	jne	SHORT $LL34@fun@2
$LC33@fun@2:
; Line 273
	cmp	rdx, rax
	jge	SHORT $LN32@fun@2
$LC3@fun@2:
; Line 274
	movsdx	xmm1, QWORD PTR [rbx+rdx*8]
	inc	rdx
	cmp	rdx, rax
	mulsd	xmm1, xmm1
	addsd	xmm6, xmm1
	jl	SHORT $LC3@fun@2
$LN32@fun@2:
; Line 275
	mulsd	xmm6, QWORD PTR __real@3fe0000000000000
; Line 277
	movapd	xmm0, xmm6
; Line 278
	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?fun@l2r_l2_svc_fun@@UEAANPEAN@Z ENDP			; l2r_l2_svc_fun::fun
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD imagerel $LN24
	DD	imagerel $LN24+14
	DD	imagerel $unwind$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD imagerel $LN24+14
	DD	imagerel $LN24+90
	DD	imagerel $chain$3$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD imagerel $LN24+90
	DD	imagerel $LN24+425
	DD	imagerel $chain$4$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD imagerel $LN24+425
	DD	imagerel $LN24+561
	DD	imagerel $chain$5$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD imagerel $LN24+561
	DD	imagerel $LN24+740
	DD	imagerel $chain$6$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD 021H
	DD	imagerel $LN24
	DD	imagerel $LN24+14
	DD	imagerel $unwind$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD 021H
	DD	imagerel $LN24+14
	DD	imagerel $LN24+90
	DD	imagerel $chain$3$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD 020521H
	DD	0b5405H
	DD	imagerel $LN24+14
	DD	imagerel $LN24+90
	DD	imagerel $chain$3$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD 081e21H
	DD	04f41eH
	DD	05e412H
	DD	0c740aH
	DD	0a3405H
	DD	imagerel $LN24
	DD	imagerel $LN24+14
	DD	imagerel $unwind$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD 040a01H
	DD	0d006520aH
	DD	06002c004H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 80
w$ = 88
g$ = 96
?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z PROC			; l2r_l2_svc_fun::grad, COMDAT
; Line 281
$LN24:
	push	rsi
	push	r12
	push	r13
	sub	rsp, 48					; 00000030H
; Line 283
	mov	rax, QWORD PTR [rcx+48]
	mov	QWORD PTR [rsp+80], rbx
	mov	QWORD PTR [rsp+96], rdi
; Line 284
	movsxd	rbx, DWORD PTR [rax]
	mov	QWORD PTR [rsp+40], r14
	mov	r14, QWORD PTR [rax+8]
; Line 285
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+32], r15
	mov	r13, r8
	mov	rsi, rdx
	mov	rdi, rcx
	call	QWORD PTR [rax+24]
; Line 288
	movsdx	xmm1, QWORD PTR __real@3ff0000000000000
	xor	r12d, r12d
	cmp	rbx, 4
	movsxd	r15, eax
	mov	DWORD PTR [rdi+40], r12d
	mov	r9d, r12d
	mov	r8, r12
	jl	$LC15@grad@2
	mov	QWORD PTR [rsp+88], rbp
	lea	r11d, QWORD PTR [r12+2]
	lea	r10, QWORD PTR [r14+8]
	lea	rbp, QWORD PTR [rbx-3]
	npad	4
$LL20@grad@2:
; Line 289
	mov	rcx, QWORD PTR [rdi+16]
	movsdx	xmm2, QWORD PTR [rcx+r8*8]
	comisd	xmm1, xmm2
	jbe	SHORT $LN16@grad@2
; Line 291
	movd	xmm0, DWORD PTR [r10-8]
	mov	rax, QWORD PTR [rdi+8]
	subsd	xmm2, xmm1
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [rax+r8*8]
	movsxd	rax, DWORD PTR [rdi+40]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rcx+rax*8], xmm0
; Line 292
	movsxd	rcx, DWORD PTR [rdi+40]
	mov	rax, QWORD PTR [rdi+32]
	mov	DWORD PTR [rax+rcx*4], r9d
; Line 293
	inc	DWORD PTR [rdi+40]
$LN16@grad@2:
	mov	rcx, QWORD PTR [rdi+16]
	movsdx	xmm2, QWORD PTR [rcx+r8*8+8]
	comisd	xmm1, xmm2
	jbe	SHORT $LN17@grad@2
	movd	xmm0, DWORD PTR [r10-4]
	mov	rax, QWORD PTR [rdi+8]
	subsd	xmm2, xmm1
	cvtdq2pd xmm0, xmm0
	lea	edx, DWORD PTR [r11-1]
	mulsd	xmm0, QWORD PTR [rax+r8*8+8]
	movsxd	rax, DWORD PTR [rdi+40]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	movsxd	rcx, DWORD PTR [rdi+40]
	mov	rax, QWORD PTR [rdi+32]
	mov	DWORD PTR [rax+rcx*4], edx
	inc	DWORD PTR [rdi+40]
$LN17@grad@2:
	mov	rcx, QWORD PTR [rdi+16]
	movsdx	xmm2, QWORD PTR [rcx+r8*8+16]
	comisd	xmm1, xmm2
	jbe	SHORT $LN18@grad@2
	movd	xmm0, DWORD PTR [r10]
	mov	rax, QWORD PTR [rdi+8]
	subsd	xmm2, xmm1
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [rax+r8*8+16]
	movsxd	rax, DWORD PTR [rdi+40]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	movsxd	rcx, DWORD PTR [rdi+40]
	mov	rax, QWORD PTR [rdi+32]
	mov	DWORD PTR [rax+rcx*4], r11d
	inc	DWORD PTR [rdi+40]
$LN18@grad@2:
	mov	rcx, QWORD PTR [rdi+16]
	movsdx	xmm2, QWORD PTR [rcx+r8*8+24]
	comisd	xmm1, xmm2
	jbe	SHORT $LN19@grad@2
	movd	xmm0, DWORD PTR [r10+4]
	mov	rax, QWORD PTR [rdi+8]
	subsd	xmm2, xmm1
	cvtdq2pd xmm0, xmm0
	lea	edx, DWORD PTR [r11+1]
	mulsd	xmm0, QWORD PTR [rax+r8*8+24]
	movsxd	rax, DWORD PTR [rdi+40]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	movsxd	rcx, DWORD PTR [rdi+40]
	mov	rax, QWORD PTR [rdi+32]
	mov	DWORD PTR [rax+rcx*4], edx
	inc	DWORD PTR [rdi+40]
$LN19@grad@2:
	add	r8, 4
	add	r9d, 4
	add	r11d, 4
	add	r10, 16
; Line 297
	cmp	r8, rbp
	jl	$LL20@grad@2
	mov	rbp, QWORD PTR [rsp+88]
$LC15@grad@2:
; Line 288
	cmp	r8, rbx
	jge	SHORT $LN14@grad@2
$LC7@grad@2:
; Line 289
	mov	rcx, QWORD PTR [rdi+16]
	movsdx	xmm2, QWORD PTR [rcx+r8*8]
	comisd	xmm1, xmm2
	jbe	SHORT $LN6@grad@2
; Line 291
	movd	xmm0, DWORD PTR [r14+r8*4]
	mov	rax, QWORD PTR [rdi+8]
	subsd	xmm2, xmm1
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [rax+r8*8]
	movsxd	rax, DWORD PTR [rdi+40]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rcx+rax*8], xmm0
; Line 292
	movsxd	rcx, DWORD PTR [rdi+40]
	mov	rax, QWORD PTR [rdi+32]
	mov	DWORD PTR [rax+rcx*4], r9d
; Line 293
	inc	DWORD PTR [rdi+40]
$LN6@grad@2:
; Line 297
	inc	r8
	inc	r9d
	cmp	r8, rbx
	jl	SHORT $LC7@grad@2
$LN14@grad@2:
; Line 295
	mov	rdx, QWORD PTR [rdi+16]
	mov	r8, r13
	mov	rcx, rdi
	call	?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z	; l2r_l2_svc_fun::subXTv
	mov	r14, QWORD PTR [rsp+40]
	mov	rdi, QWORD PTR [rsp+96]
; Line 297
	movsdx	xmm2, QWORD PTR __real@4000000000000000
	mov	rbx, QWORD PTR [rsp+80]
	mov	rcx, r15
	mov	r15, QWORD PTR [rsp+32]
	cmp	rcx, 4
	jl	SHORT $LC22@grad@2
	lea	r8, QWORD PTR [rcx-4]
	mov	r9, rsi
	lea	rdx, QWORD PTR [rsi+24]
	shr	r8, 2
	sub	r9, r13
	lea	rax, QWORD PTR [r13+8]
	inc	r8
	lea	r12, QWORD PTR [r8*4]
$LL23@grad@2:
; Line 298
	movsdx	xmm0, QWORD PTR [rax-8]
	movsdx	xmm1, QWORD PTR [rax]
	add	rax, 32					; 00000020H
	add	rdx, 32					; 00000020H
	sub	r8, 1
	mulsd	xmm0, xmm2
	mulsd	xmm1, xmm2
	addsd	xmm0, QWORD PTR [rdx-56]
	movsdx	QWORD PTR [rax-40], xmm0
	addsd	xmm1, QWORD PTR [r9+rax-32]
	movsdx	xmm0, QWORD PTR [rax-24]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rax-32], xmm1
	movsdx	xmm1, QWORD PTR [rax-16]
	addsd	xmm0, QWORD PTR [rdx-40]
	mulsd	xmm1, xmm2
	movsdx	QWORD PTR [rax-24], xmm0
	addsd	xmm1, QWORD PTR [rdx-32]
	movsdx	QWORD PTR [rax-16], xmm1
	jne	SHORT $LL23@grad@2
$LC22@grad@2:
; Line 297
	cmp	r12, rcx
	jge	SHORT $LN21@grad@2
	sub	rsi, r13
	lea	rax, QWORD PTR [r13+r12*8]
	sub	rcx, r12
$LC3@grad@2:
; Line 298
	movsdx	xmm0, QWORD PTR [rax]
	add	rax, 8
	sub	rcx, 1
	mulsd	xmm0, xmm2
	addsd	xmm0, QWORD PTR [rax+rsi-8]
	movsdx	QWORD PTR [rax-8], xmm0
	jne	SHORT $LC3@grad@2
$LN21@grad@2:
; Line 299
	add	rsp, 48					; 00000030H
	pop	r13
	pop	r12
	pop	rsi
	ret	0
?grad@l2r_l2_svc_fun@@UEAAXPEAN0@Z ENDP			; l2r_l2_svc_fun::grad
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD imagerel $LN16
	DD	imagerel $LN16+392
	DD	imagerel $unwind$?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z DD 0a1801H
	DD	0a6418H
	DD	095418H
	DD	083418H
	DD	0d0143218H
	DD	07010c012H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 64
s$ = 72
Hs$ = 80
?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z PROC			; l2r_l2_svc_fun::Hv, COMDAT
; Line 307
$LN16:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 32					; 00000020H
; Line 309
	mov	rax, QWORD PTR [rcx+48]
	mov	rbp, r8
	mov	rsi, rdx
	movsxd	rbx, DWORD PTR [rax]
; Line 310
	mov	rax, QWORD PTR [rcx]
	mov	rdi, rcx
	call	QWORD PTR [rax+24]
; Line 311
	mov	rcx, -1
	movsxd	r13, eax
	mov	eax, 8
	mul	rbx
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 313
	mov	rdx, rsi
	mov	rcx, rdi
	mov	r8, rax
	mov	r12, rax
	call	?subXv@l2r_l2_svc_fun@@AEAAXPEAN0@Z	; l2r_l2_svc_fun::subXv
; Line 314
	xor	ebx, ebx
	cmp	DWORD PTR [rdi+40], ebx
	mov	r9d, ebx
	jle	SHORT $LN4@Hv@2
	mov	r8, rbx
	mov	rdx, r12
	npad	3
$LL6@Hv@2:
; Line 315
	mov	rax, QWORD PTR [rdi+32]
	inc	r9d
	add	rdx, 8
	movsxd	rcx, DWORD PTR [r8+rax]
	mov	rax, QWORD PTR [rdi+8]
	add	r8, 4
	movsdx	xmm0, QWORD PTR [rax+rcx*8]
	mulsd	xmm0, QWORD PTR [rdx-8]
	movsdx	QWORD PTR [rdx-8], xmm0
	cmp	r9d, DWORD PTR [rdi+40]
	jl	SHORT $LL6@Hv@2
$LN4@Hv@2:
; Line 317
	mov	r8, rbp
	mov	rdx, r12
	mov	rcx, rdi
	call	?subXTv@l2r_l2_svc_fun@@AEAAXPEAN0@Z	; l2r_l2_svc_fun::subXTv
; Line 318
	cmp	r13, 4
	mov	rcx, r13
	movsdx	xmm2, QWORD PTR __real@4000000000000000
	jl	$LC14@Hv@2
	lea	r8, QWORD PTR [r13-4]
	mov	r9, rsi
	lea	rdx, QWORD PTR [rsi+24]
	shr	r8, 2
	sub	r9, rbp
	lea	rax, QWORD PTR [rbp+8]
	inc	r8
	lea	rbx, QWORD PTR [r8*4]
$LL15@Hv@2:
; Line 319
	movsdx	xmm0, QWORD PTR [rax-8]
	movsdx	xmm1, QWORD PTR [rax]
	add	rax, 32					; 00000020H
	add	rdx, 32					; 00000020H
	sub	r8, 1
	mulsd	xmm0, xmm2
	mulsd	xmm1, xmm2
	addsd	xmm0, QWORD PTR [rdx-56]
	movsdx	QWORD PTR [rax-40], xmm0
	addsd	xmm1, QWORD PTR [r9+rax-32]
	movsdx	xmm0, QWORD PTR [rax-24]
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rax-32], xmm1
	movsdx	xmm1, QWORD PTR [rax-16]
	addsd	xmm0, QWORD PTR [rdx-40]
	mulsd	xmm1, xmm2
	movsdx	QWORD PTR [rax-24], xmm0
	addsd	xmm1, QWORD PTR [rdx-32]
	movsdx	QWORD PTR [rax-16], xmm1
	jne	SHORT $LL15@Hv@2
$LC14@Hv@2:
; Line 318
	cmp	rbx, rcx
	jge	SHORT $LN13@Hv@2
	sub	rsi, rbp
	lea	rax, QWORD PTR [rbp+rbx*8]
	sub	rcx, rbx
$LC3@Hv@2:
; Line 319
	movsdx	xmm0, QWORD PTR [rax]
	add	rax, 8
	sub	rcx, 1
	mulsd	xmm0, xmm2
	addsd	xmm0, QWORD PTR [rax+rsi-8]
	movsdx	QWORD PTR [rax-8], xmm0
	jne	SHORT $LC3@Hv@2
$LN13@Hv@2:
; Line 320
	mov	rcx, r12
; Line 321
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r13
	pop	r12
	pop	rdi
	jmp	??3@YAXPEAX@Z				; operator delete
?Hv@l2r_l2_svc_fun@@UEAAXPEAN0@Z ENDP			; l2r_l2_svc_fun::Hv
_TEXT	ENDS
PUBLIC	?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z ; Solver_MCSVM_CS::solve_sub_problem
EXTRN	__imp_qsort:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z DD imagerel $LN60
	DD	imagerel $LN60+823
	DD	imagerel $unwind$?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z DD 0e3001H
	DD	027830H
	DD	03682bH
	DD	0e6418H
	DD	0d5418H
	DD	0c3418H
	DD	0d0147218H
	DD	07010c012H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z
_TEXT	SEGMENT
this$ = 96
A_i$ = 104
yi$ = 112
C_yi$ = 120
active_i$ = 128
alpha_new$ = 136
?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z PROC ; Solver_MCSVM_CS::solve_sub_problem, COMDAT
; Line 446
$LN60:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 64					; 00000040H
; Line 450
	mov	rbx, QWORD PTR [rcx]
	movsxd	rdi, DWORD PTR active_i$[rsp]
	mov	r13, rcx
	movaps	XMMWORD PTR [rsp+48], xmm6
	movaps	XMMWORD PTR [rsp+32], xmm7
	movapd	xmm6, xmm3
	movapd	xmm7, xmm1
	mov	rcx, -1
	mov	eax, 8
	movsxd	rsi, r8d
	mov	r12, rdi
	mul	rdi
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	lea	r8, QWORD PTR [rdi*8]
	mov	rdx, rbx
	mov	rcx, rax
	mov	rbp, rax
	call	memcpy
; Line 451
	cmp	esi, edi
	jge	SHORT $LN9@solve_sub_
; Line 452
	movapd	xmm0, xmm7
	mulsd	xmm0, xmm6
	addsd	xmm0, QWORD PTR [rbp+rsi*8]
	movsdx	QWORD PTR [rbp+rsi*8], xmm0
$LN9@solve_sub_:
; Line 453
	lea	r9, OFFSET FLAT:?compare_double@@YAHPEBX0@Z ; compare_double
	mov	r8d, 8
	mov	rdx, rdi
	mov	rcx, rbp
	call	QWORD PTR __imp_qsort
; Line 456
	mov	ecx, 1
; Line 460
	cmp	edi, ecx
	mov	rdx, rcx
	movsdx	xmm1, QWORD PTR [rbp]
	movapd	xmm5, xmm7
	mulsd	xmm5, xmm6
	subsd	xmm1, xmm5
	jle	$LN59@solve_sub_
	lea	eax, DWORD PTR [rdi-1]
	cmp	eax, 4
	jl	$LC26@solve_sub_
	lea	r8d, QWORD PTR [rcx+2]
; Line 456
$LL31@solve_sub_:
	movsdx	xmm2, QWORD PTR [rbp+rdx*8]
	movd	xmm0, ecx
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, xmm2
	comisd	xmm0, xmm1
	jbe	$LN59@solve_sub_
	movsdx	xmm3, QWORD PTR [rbp+rdx*8+8]
	lea	eax, DWORD PTR [r8-1]
; Line 457
	addsd	xmm1, xmm2
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, xmm3
	comisd	xmm0, xmm1
	jbe	$LN28@solve_sub_
	movsdx	xmm2, QWORD PTR [rbp+rdx*8+16]
	movd	xmm0, r8d
	addsd	xmm1, xmm3
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, xmm2
	comisd	xmm0, xmm1
	jbe	$LN29@solve_sub_
	movsdx	xmm3, QWORD PTR [rbp+rdx*8+24]
	lea	eax, DWORD PTR [r8+1]
	addsd	xmm1, xmm2
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, xmm3
	comisd	xmm0, xmm1
	jbe	$LN30@solve_sub_
; Line 460
	lea	eax, DWORD PTR [rdi-3]
	add	ecx, 4
	add	rdx, 4
	add	r8d, 4
	cmp	ecx, eax
	addsd	xmm1, xmm3
	jl	$LL31@solve_sub_
$LC26@solve_sub_:
; Line 456
	cmp	ecx, edi
	jge	SHORT $LN59@solve_sub_
	lea	rax, QWORD PTR [rbp+rdx*8]
$LC8@solve_sub_:
	movsdx	xmm2, QWORD PTR [rax]
	movd	xmm0, ecx
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, xmm2
	comisd	xmm0, xmm1
	jbe	SHORT $LN59@solve_sub_
; Line 460
	inc	ecx
	add	rax, 8
	addsd	xmm1, xmm2
	cmp	ecx, edi
	jl	SHORT $LC8@solve_sub_
$LN59@solve_sub_:
	mov	rdi, QWORD PTR alpha_new$[rsp]
	xorpd	xmm2, xmm2
	movd	xmm0, ecx
	xor	edx, edx
	cmp	r12, 4
	cvtdq2pd xmm0, xmm0
	divsd	xmm1, xmm0
	jl	$LC33@solve_sub_
	mov	r11, QWORD PTR [r13]
	lea	rbx, QWORD PTR [r12-3]
	lea	r9d, QWORD PTR [rdx+2]
	lea	r8, QWORD PTR [r11+24]
	sub	r11, rdi
	lea	rcx, QWORD PTR [rdi+8]
	npad	7
$LL58@solve_sub_:
; Line 463
	movapd	xmm0, xmm1
	subsd	xmm0, QWORD PTR [r8-24]
	divsd	xmm0, xmm7
	cmp	rdx, rsi
	jne	SHORT $LN36@solve_sub_
	comisd	xmm0, xmm6
	jbe	SHORT $LN37@solve_sub_
	movapd	xmm0, xmm6
; Line 464
	jmp	SHORT $LN37@solve_sub_
$LN30@solve_sub_:
; Line 456
	add	ecx, 3
	jmp	SHORT $LN59@solve_sub_
$LN29@solve_sub_:
	add	ecx, 2
; Line 460
	jmp	SHORT $LN59@solve_sub_
$LN28@solve_sub_:
; Line 456
	inc	ecx
; Line 460
	jmp	SHORT $LN59@solve_sub_
$LN36@solve_sub_:
; Line 465
	comisd	xmm0, xmm2
	jbe	SHORT $LN37@solve_sub_
	movapd	xmm0, xmm2
$LN37@solve_sub_:
	movsdx	QWORD PTR [rcx-8], xmm0
	movapd	xmm0, xmm1
	lea	rax, QWORD PTR [r9-1]
	subsd	xmm0, QWORD PTR [r11+rcx]
	divsd	xmm0, xmm7
	cmp	rax, rsi
	jne	SHORT $LN42@solve_sub_
; Line 463
	comisd	xmm0, xmm6
	jbe	SHORT $LN43@solve_sub_
	movapd	xmm0, xmm6
; Line 464
	jmp	SHORT $LN43@solve_sub_
$LN42@solve_sub_:
; Line 465
	comisd	xmm0, xmm2
	jbe	SHORT $LN43@solve_sub_
	movapd	xmm0, xmm2
$LN43@solve_sub_:
	movsdx	QWORD PTR [rcx], xmm0
	movapd	xmm0, xmm1
	subsd	xmm0, QWORD PTR [r8-8]
	divsd	xmm0, xmm7
	cmp	r9, rsi
	jne	SHORT $LN48@solve_sub_
; Line 463
	comisd	xmm0, xmm6
	jbe	SHORT $LN49@solve_sub_
	movapd	xmm0, xmm6
; Line 464
	jmp	SHORT $LN49@solve_sub_
$LN48@solve_sub_:
; Line 465
	comisd	xmm0, xmm2
	jbe	SHORT $LN49@solve_sub_
	movapd	xmm0, xmm2
$LN49@solve_sub_:
	movsdx	QWORD PTR [rcx+8], xmm0
	movapd	xmm0, xmm1
	lea	rax, QWORD PTR [r9+1]
	subsd	xmm0, QWORD PTR [r8]
	divsd	xmm0, xmm7
	cmp	rax, rsi
	jne	SHORT $LN54@solve_sub_
; Line 463
	comisd	xmm0, xmm6
	jbe	SHORT $LN55@solve_sub_
	movapd	xmm0, xmm6
; Line 464
	jmp	SHORT $LN55@solve_sub_
$LN54@solve_sub_:
; Line 465
	comisd	xmm0, xmm2
	jbe	SHORT $LN55@solve_sub_
	movapd	xmm0, xmm2
$LN55@solve_sub_:
	add	rdx, 4
	movsdx	QWORD PTR [rcx+16], xmm0
	add	rcx, 32					; 00000020H
	add	r8, 32					; 00000020H
	add	r9, 4
	cmp	rdx, rbx
	jl	$LL58@solve_sub_
$LC33@solve_sub_:
; Line 460
	cmp	rdx, r12
	jge	SHORT $LN32@solve_sub_
	mov	rcx, QWORD PTR [r13]
	lea	rax, QWORD PTR [rdi+rdx*8]
	sub	rcx, rdi
$LC5@solve_sub_:
; Line 463
	movapd	xmm0, xmm1
	subsd	xmm0, QWORD PTR [rcx+rax]
	divsd	xmm0, xmm7
	cmp	rdx, rsi
	jne	SHORT $LN2@solve_sub_
	comisd	xmm0, xmm6
	jbe	SHORT $LN20@solve_sub_
	movapd	xmm0, xmm6
; Line 464
	jmp	SHORT $LN20@solve_sub_
$LN2@solve_sub_:
; Line 465
	comisd	xmm0, xmm2
	jbe	SHORT $LN20@solve_sub_
	movapd	xmm0, xmm2
$LN20@solve_sub_:
	inc	rdx
	movsdx	QWORD PTR [rax], xmm0
	add	rax, 8
	cmp	rdx, r12
	jl	SHORT $LC5@solve_sub_
$LN32@solve_sub_:
; Line 467
	mov	rcx, rbp
; Line 468
	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	movaps	xmm6, XMMWORD PTR [rsp+48]
	movaps	xmm7, XMMWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+112]
	add	rsp, 64					; 00000040H
	pop	r13
	pop	r12
	pop	rdi
	jmp	??3@YAXPEAX@Z				; operator delete
?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z ENDP ; Solver_MCSVM_CS::solve_sub_problem
_TEXT	ENDS
PUBLIC	??_C@_09JPIIPCCJ@nSV?5?$DN?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@ ; `string'
PUBLIC	??_C@_0CN@INEBNJKC@?6WARNING?3?5reaching?5max?5number?5of@ ; `string'
PUBLIC	??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@ ; `string'
PUBLIC	??_C@_01NBENCBCI@?$CK?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	__real@3d719799812dea11
PUBLIC	__mask@@AbsDouble@
PUBLIC	__real@4024000000000000
PUBLIC	?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z		; Solver_MCSVM_CS::Solve
EXTRN	__imp_rand:PROC
EXTRN	__imp__HUGE:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185
	DD	imagerel $LN185+29
	DD	imagerel $unwind$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+29
	DD	imagerel $LN185+33
	DD	imagerel $chain$0$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+33
	DD	imagerel $LN185+69
	DD	imagerel $chain$1$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+69
	DD	imagerel $LN185+741
	DD	imagerel $chain$3$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+741
	DD	imagerel $LN185+2627
	DD	imagerel $chain$6$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+2627
	DD	imagerel $LN185+2658
	DD	imagerel $chain$7$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+2658
	DD	imagerel $LN185+2879
	DD	imagerel $chain$8$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+2879
	DD	imagerel $LN185+3078
	DD	imagerel $chain$9$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+3078
	DD	imagerel $LN185+3268
	DD	imagerel $chain$10$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD imagerel $LN185+3268
	DD	imagerel $LN185+3478
	DD	imagerel $chain$11$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 021H
	DD	imagerel $LN185
	DD	imagerel $LN185+29
	DD	imagerel $unwind$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 021H
	DD	imagerel $LN185+29
	DD	imagerel $LN185+33
	DD	imagerel $chain$0$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 021H
	DD	imagerel $LN185+33
	DD	imagerel $LN185+69
	DD	imagerel $chain$1$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 020021H
	DD	09c800H
	DD	imagerel $LN185+33
	DD	imagerel $LN185+69
	DD	imagerel $chain$1$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 021H
	DD	imagerel $LN185+69
	DD	imagerel $LN185+741
	DD	imagerel $chain$3$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 062421H
	DD	0ab824H
	DD	0c981bH
	DD	0d8809H
	DD	imagerel $LN185+69
	DD	imagerel $LN185+741
	DD	imagerel $chain$3$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 041021H
	DD	09c810H
	DD	0ba808H
	DD	imagerel $LN185+33
	DD	imagerel $LN185+69
	DD	imagerel $chain$1$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 020421H
	DD	0e7804H
	DD	imagerel $LN185+29
	DD	imagerel $LN185+33
	DD	imagerel $chain$0$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 020421H
	DD	0215404H
	DD	imagerel $LN185
	DD	imagerel $LN185+29
	DD	imagerel $unwind$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z DD 0b1d01H
	DD	0f681dH
	DD	0220119H
	DD	0e010f012H
	DD	0c00cd00eH
	DD	06009700aH
	DD	03008H
xdata	ENDS
;	COMDAT ??_C@_09JPIIPCCJ@nSV?5?$DN?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_09JPIIPCCJ@nSV?5?$DN?5?$CFd?6?$AA@ DB 'nSV = %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@
CONST	SEGMENT
??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@ DB 'Objective va'
	DB	'lue = %lf', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@INEBNJKC@?6WARNING?3?5reaching?5max?5number?5of@
CONST	SEGMENT
??_C@_0CN@INEBNJKC@?6WARNING?3?5reaching?5max?5number?5of@ DB 0aH, 'WARNI'
	DB	'NG: reaching max number of iterations', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@
CONST	SEGMENT
??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@ DB 0aH, 'o'
	DB	'ptimization finished, #iter = %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK?$AA@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK?$AA@ DB '*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT __real@3d719799812dea11
CONST	SEGMENT
__real@3d719799812dea11 DQ 03d719799812dea11r	; 1e-012
CONST	ENDS
;	COMDAT __mask@@AbsDouble@
CONST	SEGMENT
__mask@@AbsDouble@ DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z
_TEXT	SEGMENT
$T9801 = 48
alpha$1$ = 56
index$1$ = 64
QD$1$ = 72
alpha_index$1$ = 80
$T9799 = 88
d_val$1$ = 96
alpha_new$1$ = 104
d_ind$1$ = 112
y_index$1$ = 120
tv4187 = 128
start_from_all$1$ = 336
this$ = 336
w$ = 344
active_size$1$ = 352
iter$1$ = 360
?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z PROC		; Solver_MCSVM_CS::Solve, COMDAT
; Line 481
$LN185:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rdx
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 272				; 00000110H
	movaps	XMMWORD PTR [rax-88], xmm6
	mov	QWORD PTR [rax-64], rbp
	movaps	XMMWORD PTR [rax-104], xmm7
; Line 483
	xor	r13d, r13d
	mov	r12, rdx
	mov	rdi, rcx
; Line 484
	mov	rsi, -1
	mov	QWORD PTR tv4187[rsp], r13
	mov	DWORD PTR iter$1$[rsp], r13d
	movaps	XMMWORD PTR [rax-152], xmm10
	movaps	XMMWORD PTR [rax-184], xmm12
	mov	eax, DWORD PTR [rcx+28]
	imul	eax, DWORD PTR [rcx+32]
	movsxd	r8, eax
	mov	eax, 8
	mul	r8
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 485
	movsxd	rcx, DWORD PTR [rdi+32]
	mov	rbx, rax
	mov	QWORD PTR alpha$1$[rsp], rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 486
	movsxd	rcx, DWORD PTR [rdi+28]
	mov	QWORD PTR alpha_new$1$[rsp], rax
	mov	eax, 4
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 487
	movsxd	rcx, DWORD PTR [rdi+28]
	mov	rbp, rax
	mov	QWORD PTR index$1$[rsp], rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 488
	movsxd	rcx, DWORD PTR [rdi+32]
	mov	QWORD PTR QD$1$[rsp], rax
	mov	eax, 4
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 489
	movsxd	rcx, DWORD PTR [rdi+32]
	mov	r14, rax
	mov	QWORD PTR d_ind$1$[rsp], rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 490
	mov	ecx, DWORD PTR [rdi+28]
	mov	QWORD PTR d_val$1$[rsp], rax
	mov	eax, 4
	imul	ecx, DWORD PTR [rdi+32]
	movsxd	rdx, ecx
	mul	rdx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 491
	movsxd	rcx, DWORD PTR [rdi+28]
	mov	QWORD PTR alpha_index$1$[rsp], rax
	mov	eax, 4
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 492
	movsxd	rcx, DWORD PTR [rdi+28]
	mov	r15, rax
	mov	QWORD PTR y_index$1$[rsp], rax
; Line 493
	mov	eax, 4
	mov	DWORD PTR active_size$1$[rsp], ecx
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 494
	movsdx	xmm10, QWORD PTR [rdi+40]
	movsdx	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rsi, rax
	mulsd	xmm10, QWORD PTR __real@4024000000000000
	comisd	xmm10, xmm0
	ja	SHORT $LN89@Solve
	movapd	xmm10, xmm0
$LN89@Solve:
; Line 497
	mov	eax, DWORD PTR [rdi+28]
	mov	BYTE PTR start_from_all$1$[rsp], 1
	mov	edx, r13d
	imul	eax, DWORD PTR [rdi+32]
	test	eax, eax
	jle	SHORT $LN81@Solve
; Line 495
	mov	rcx, rbx
	npad	13
$LL83@Solve:
; Line 498
	mov	QWORD PTR [rcx], r13
	mov	eax, DWORD PTR [rdi+28]
	inc	edx
	add	rcx, 8
	imul	eax, DWORD PTR [rdi+32]
	cmp	edx, eax
	jl	SHORT $LL83@Solve
$LN81@Solve:
; Line 499
	mov	eax, DWORD PTR [rdi+24]
	mov	edx, r13d
	imul	eax, DWORD PTR [rdi+32]
	test	eax, eax
	jle	SHORT $LN78@Solve
	mov	rcx, r12
	npad	11
$LL80@Solve:
; Line 500
	mov	QWORD PTR [rcx], r13
	mov	eax, DWORD PTR [rdi+24]
	inc	edx
	add	rcx, 8
	imul	eax, DWORD PTR [rdi+32]
	cmp	edx, eax
	jl	SHORT $LL80@Solve
$LN78@Solve:
; Line 501
	mov	r9, r13
	mov	r11d, r13d
	cmp	DWORD PTR [rdi+28], r9d
	jle	$LN119@Solve
	mov	r8, QWORD PTR QD$1$[rsp]
	mov	r14, QWORD PTR alpha_index$1$[rsp]
	mov	rbx, rsi
	sub	rbx, r15
	mov	r10, r15
	sub	rbp, r15
	npad	6
$LL77@Solve:
; Line 503
	mov	eax, DWORD PTR [rdi+32]
	mov	ecx, r13d
	mov	rdx, r13
	test	eax, eax
	jle	SHORT $LN72@Solve
	npad	3
$LL74@Solve:
; Line 504
	cdqe
	imul	rax, r9
	add	rax, rdx
	inc	rdx
	mov	DWORD PTR [r14+rax*4], ecx
	mov	eax, DWORD PTR [rdi+32]
	inc	ecx
	cmp	ecx, eax
	jl	SHORT $LL74@Solve
$LN72@Solve:
; Line 505
	mov	rax, QWORD PTR [rdi+48]
	mov	rcx, QWORD PTR [rax+16]
; Line 506
	mov	QWORD PTR [r8], r13
	mov	rax, QWORD PTR [rcx+r9*8]
; Line 507
	cmp	DWORD PTR [rax], -1
	je	SHORT $LN70@Solve
	npad	3
$LL71@Solve:
; Line 509
	movsdx	xmm0, QWORD PTR [rax+8]
; Line 510
	add	rax, 16
	mulsd	xmm0, xmm0
	addsd	xmm0, QWORD PTR [r8]
	movsdx	QWORD PTR [r8], xmm0
	cmp	DWORD PTR [rax], -1
	jne	SHORT $LL71@Solve
$LN70@Solve:
; Line 512
	mov	eax, DWORD PTR [rdi+32]
	inc	r9
	add	r8, 8
	mov	DWORD PTR [rbx+r10], eax
; Line 513
	mov	rax, QWORD PTR [rdi+48]
	add	r10, 4
	mov	rcx, QWORD PTR [rax+8]
	mov	eax, DWORD PTR [rcx+r9*4-4]
	mov	DWORD PTR [r10-4], eax
; Line 514
	mov	DWORD PTR [r10+rbp-4], r11d
	inc	r11d
	cmp	r11d, DWORD PTR [rdi+28]
	jl	$LL77@Solve
	mov	r14, QWORD PTR d_ind$1$[rsp]
$LN119@Solve:
; Line 517
	cmp	DWORD PTR [rdi+36], r13d
	movsdx	xmm7, QWORD PTR __mask@@AbsDouble@
	xorpd	xmm6, xmm6
	movsdx	xmm12, QWORD PTR __real@3fe0000000000000
	jle	$LN184@Solve
	movaps	XMMWORD PTR [rsp+208], xmm8
	movsdx	xmm8, QWORD PTR __real@3d719799812dea11
	movaps	XMMWORD PTR [rsp+192], xmm9
	movaps	XMMWORD PTR [rsp+160], xmm11
	movsdx	xmm11, QWORD PTR __mask@@NegDouble@
	npad	14
$LL69@Solve:
; Line 519
	mov	rax, QWORD PTR __imp__HUGE
; Line 520
	movsxd	r9, DWORD PTR active_size$1$[rsp]
	mov	r12d, r13d
	mov	rbx, r13
	movsdx	xmm9, QWORD PTR [rax]
	mov	rax, r9
	mov	QWORD PTR $T9801[rsp], rax
	xorpd	xmm9, xmm11
	test	r9d, r9d
	jle	SHORT $LN65@Solve
	mov	r14, QWORD PTR index$1$[rsp]
	mov	ebp, r9d
	mov	r15, rax
$LL67@Solve:
; Line 522
	call	QWORD PTR __imp_rand
; Line 523
	mov	ecx, DWORD PTR [r14+rbx*4]
	inc	rbx
	cdq
	idiv	ebp
	dec	ebp
	add	edx, r12d
	inc	r12d
	cmp	rbx, r15
	movsxd	r8, edx
	mov	eax, DWORD PTR [r14+r8*4]
	mov	DWORD PTR [r14+rbx*4-4], eax
	mov	DWORD PTR [r14+r8*4], ecx
	jl	SHORT $LL67@Solve
	mov	r15, QWORD PTR y_index$1$[rsp]
	mov	r14, QWORD PTR d_ind$1$[rsp]
	mov	rax, QWORD PTR $T9801[rsp]
$LN65@Solve:
; Line 525
	mov	rdx, r13
	mov	QWORD PTR $T9799[rsp], rdx
	test	rax, rax
	jle	$LN62@Solve
	mov	r8, QWORD PTR index$1$[rsp]
	mov	rcx, QWORD PTR $T9801[rsp]
	mov	r9, QWORD PTR alpha$1$[rsp]
	mov	r10, QWORD PTR alpha_index$1$[rsp]
	mov	r11, QWORD PTR QD$1$[rsp]
	npad	3
$LL64@Solve:
; Line 527
	movsxd	rax, DWORD PTR [r8+rdx*4]
; Line 528
	mov	rbx, rax
	movsdx	xmm4, QWORD PTR [r11+rax*8]
; Line 529
	imul	eax, DWORD PTR [rdi+32]
; Line 532
	comisd	xmm4, xmm6
	cdqe
	lea	r12, QWORD PTR [r9+rax*8]
	lea	rbp, QWORD PTR [r10+rax*4]
	jbe	$LN63@Solve
; Line 534
	mov	edx, r13d
	cmp	DWORD PTR [rsi+rbx*4], edx
	jle	SHORT $LN58@Solve
	mov	rcx, r13
	mov	r8, 4607182418800017408			; 3ff0000000000000H
	npad	6
$LL60@Solve:
; Line 535
	mov	rax, QWORD PTR [rdi+16]
	inc	edx
	add	rcx, 8
	mov	QWORD PTR [rcx+rax-8], r8
	cmp	edx, DWORD PTR [rsi+rbx*4]
	jl	SHORT $LL60@Solve
$LN58@Solve:
; Line 536
	movsxd	rax, DWORD PTR [r15+rbx*4]
	cmp	eax, DWORD PTR [rsi+rbx*4]
	jge	SHORT $LN57@Solve
; Line 537
	mov	rcx, rax
	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rax+rcx*8], r13
$LN57@Solve:
; Line 539
	mov	rax, QWORD PTR [rdi+48]
	mov	rcx, QWORD PTR [rax+16]
	mov	r10, QWORD PTR [rcx+rbx*8]
; Line 540
	mov	eax, DWORD PTR [r10]
	cmp	eax, -1
	je	SHORT $LN55@Solve
	mov	rcx, QWORD PTR w$[rsp]
	npad	12
$LL56@Solve:
; Line 542
	dec	eax
; Line 543
	mov	r9d, r13d
	imul	eax, DWORD PTR [rdi+32]
	cmp	DWORD PTR [rsi+rbx*4], r13d
	cdqe
	lea	r11, QWORD PTR [rcx+rax*8]
	jle	SHORT $LN52@Solve
	mov	rdx, r13
	mov	r8, rbp
	npad	5
$LL54@Solve:
; Line 544
	movsxd	rax, DWORD PTR [r8]
	mov	rcx, QWORD PTR [rdi+16]
	inc	r9d
	add	rdx, 8
	add	r8, 4
	movsdx	xmm0, QWORD PTR [r11+rax*8]
	mulsd	xmm0, QWORD PTR [r10+8]
	addsd	xmm0, QWORD PTR [rcx+rdx-8]
	movsdx	QWORD PTR [rcx+rdx-8], xmm0
	cmp	r9d, DWORD PTR [rsi+rbx*4]
	jl	SHORT $LL54@Solve
	mov	rcx, QWORD PTR w$[rsp]
$LN52@Solve:
; Line 540
	mov	eax, DWORD PTR [r10+16]
; Line 545
	add	r10, 16
	cmp	eax, -1
	jne	SHORT $LL56@Solve
$LN55@Solve:
; Line 548
	mov	rax, QWORD PTR __imp__HUGE
; Line 550
	mov	r10d, DWORD PTR [rsi+rbx*4]
	movsdx	xmm2, QWORD PTR [rax]
	movapd	xmm3, xmm2
	xorpd	xmm3, xmm11
	test	r10d, r10d
	jle	SHORT $LN49@Solve
	mov	rcx, QWORD PTR [rdi+16]
	mov	rdx, rbp
	mov	r8d, r10d
	npad	4
$LL51@Solve:
; Line 552
	movsxd	rax, DWORD PTR [rdx]
	comisd	xmm6, QWORD PTR [r12+rax*8]
	jbe	SHORT $LN48@Solve
	movsdx	xmm0, QWORD PTR [rcx]
	comisd	xmm2, xmm0
	jbe	SHORT $LN48@Solve
; Line 553
	movapd	xmm2, xmm0
$LN48@Solve:
; Line 554
	movsdx	xmm0, QWORD PTR [rcx]
	comisd	xmm0, xmm3
	jbe	SHORT $LN50@Solve
; Line 555
	movapd	xmm3, xmm0
$LN50@Solve:
; Line 550
	add	rdx, 4
	add	rcx, 8
	sub	r8, 1
	jne	SHORT $LL51@Solve
$LN49@Solve:
; Line 557
	movsxd	r8, DWORD PTR [r15+rbx*4]
	cmp	r8d, r10d
	jge	SHORT $LN45@Solve
; Line 558
	mov	rax, QWORD PTR [rdi+48]
	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rdi+8]
	movsxd	rdx, DWORD PTR [rcx+rbx*4]
	movsdx	xmm0, QWORD PTR [rax+rdx*8]
	comisd	xmm0, QWORD PTR [r12+rdx*8]
	jbe	SHORT $LN45@Solve
	mov	rax, QWORD PTR [rdi+16]
	movsdx	xmm0, QWORD PTR [rax+r8*8]
	comisd	xmm2, xmm0
	jbe	SHORT $LN45@Solve
; Line 559
	movapd	xmm2, xmm0
$LN45@Solve:
; Line 561
	mov	r9d, r13d
	test	r10d, r10d
	jle	$LN42@Solve
	mov	r10, r13
	mov	r11, rbp
$LL44@Solve:
; Line 563
	movapd	xmm1, xmm6
	cmp	r9d, DWORD PTR [r15+rbx*4]
	jne	SHORT $LN93@Solve
	mov	rax, QWORD PTR [rdi+48]
	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rdi+8]
	movsxd	rdx, DWORD PTR [rcx+rbx*4]
	movsdx	xmm1, QWORD PTR [rax+rdx*8]
$LN93@Solve:
	movsxd	rax, DWORD PTR [r11]
	movsdx	xmm0, QWORD PTR [r12+rax*8]
	ucomisd	xmm0, xmm1
	jp	$LN43@Solve
	jne	$LN43@Solve
	mov	rax, QWORD PTR [rdi+16]
	comisd	xmm2, QWORD PTR [r10+rax]
	jbe	$LN43@Solve
; Line 565
	dec	DWORD PTR [rsi+rbx*4]
	mov	r8d, DWORD PTR [rsi+rbx*4]
; Line 566
	cmp	r8d, r9d
	jle	$LN43@Solve
	npad	7
$LL40@Solve:
; Line 569
	movapd	xmm1, xmm6
	cmp	r8d, DWORD PTR [r15+rbx*4]
	jne	SHORT $LN97@Solve
	mov	rax, QWORD PTR [rdi+48]
	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rdi+8]
	movsxd	rdx, DWORD PTR [rcx+rbx*4]
	movsdx	xmm1, QWORD PTR [rax+rdx*8]
$LN97@Solve:
	movsxd	rcx, r8d
	movsxd	rax, DWORD PTR [rbp+rcx*4]
	movsdx	xmm0, QWORD PTR [r12+rax*8]
	ucomisd	xmm0, xmm1
	jp	SHORT $LN136@Solve
	jne	SHORT $LN136@Solve
	mov	rax, QWORD PTR [rdi+16]
	comisd	xmm2, QWORD PTR [rax+rcx*8]
	jbe	SHORT $LN136@Solve
; Line 579
	dec	r8d
	cmp	r8d, r9d
	mov	DWORD PTR [rsi+rbx*4], r8d
	jg	SHORT $LL40@Solve
; Line 566
	jmp	SHORT $LN43@Solve
$LN136@Solve:
; Line 571
	mov	ecx, DWORD PTR [r11]
	movsxd	rdx, r8d
	mov	eax, DWORD PTR [rbp+rdx*4]
	mov	DWORD PTR [r11], eax
	mov	DWORD PTR [rbp+rdx*4], ecx
; Line 572
	mov	rdx, QWORD PTR [rdi+16]
	movsxd	rcx, DWORD PTR [rsi+rbx*4]
	movsdx	xmm0, QWORD PTR [rdx+r10]
	mov	rax, QWORD PTR [rdx+rcx*8]
	mov	QWORD PTR [rdx+r10], rax
	movsdx	QWORD PTR [rdx+rcx*8], xmm0
; Line 573
	mov	ecx, DWORD PTR [rsi+rbx*4]
	mov	eax, DWORD PTR [r15+rbx*4]
	cmp	eax, ecx
	jne	SHORT $LN37@Solve
; Line 574
	mov	DWORD PTR [r15+rbx*4], r9d
	jmp	SHORT $LN43@Solve
$LN37@Solve:
; Line 575
	cmp	eax, r9d
	jne	SHORT $LN43@Solve
; Line 576
	mov	DWORD PTR [r15+rbx*4], ecx
$LN43@Solve:
; Line 561
	inc	r9d
	add	r11, 4
	add	r10, 8
	cmp	r9d, DWORD PTR [rsi+rbx*4]
	jl	$LL44@Solve
$LN42@Solve:
; Line 584
	mov	eax, DWORD PTR [rsi+rbx*4]
	cmp	eax, 1
	jg	SHORT $LN34@Solve
; Line 587
	mov	r8, QWORD PTR index$1$[rsp]
	mov	rdx, QWORD PTR $T9799[rsp]
	mov	r9d, DWORD PTR active_size$1$[rsp]
	mov	ecx, DWORD PTR [r8+rdx*4]
	mov	rax, QWORD PTR $T9801[rsp]
; Line 589
	mov	r10, QWORD PTR alpha_index$1$[rsp]
	mov	r11, QWORD PTR QD$1$[rsp]
	dec	rax
	dec	r9d
	mov	QWORD PTR $T9801[rsp], rax
	mov	eax, DWORD PTR [r8+rax*4]
	mov	DWORD PTR active_size$1$[rsp], r9d
	mov	r9, QWORD PTR alpha$1$[rsp]
	mov	DWORD PTR [r8+rdx*4], eax
	mov	rax, QWORD PTR $T9801[rsp]
	mov	DWORD PTR [r8+rax*4], ecx
	mov	rcx, rax
	dec	rdx
	jmp	$LN63@Solve
$LN34@Solve:
; Line 592
	subsd	xmm3, xmm2
	comisd	xmm8, xmm3
	jae	$LN181@Solve
; Line 595
	comisd	xmm3, xmm9
	jbe	SHORT $LN108@Solve
	movapd	xmm9, xmm3
$LN108@Solve:
; Line 597
	mov	r9d, r13d
	test	eax, eax
	jle	SHORT $LN29@Solve
	mov	rdx, r13
	mov	r8, rbp
$LL31@Solve:
; Line 598
	movsxd	rax, DWORD PTR [r8]
	mov	rcx, QWORD PTR [rdi+16]
	movapd	xmm0, xmm4
	inc	r9d
	add	rdx, 8
	add	r8, 4
	mulsd	xmm0, QWORD PTR [r12+rax*8]
	movsdx	xmm1, QWORD PTR [rdx+rcx-8]
	mov	rax, QWORD PTR [rdi]
	subsd	xmm1, xmm0
	movsdx	QWORD PTR [rdx+rax-8], xmm1
	cmp	r9d, DWORD PTR [rsi+rbx*4]
	jl	SHORT $LL31@Solve
$LN29@Solve:
; Line 600
	mov	rax, QWORD PTR [rdi+48]
	mov	r8d, DWORD PTR [r15+rbx*4]
	movapd	xmm1, xmm4
	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR alpha_new$1$[rsp]
	movsxd	rdx, DWORD PTR [rcx+rbx*4]
	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR [rsi+rbx*4]
	movsdx	xmm3, QWORD PTR [rcx+rdx*8]
	mov	rcx, rdi
	mov	DWORD PTR [rsp+32], eax
	call	?solve_sub_problem@Solver_MCSVM_CS@@AEAAXNHNHPEAN@Z ; Solver_MCSVM_CS::solve_sub_problem
; Line 602
	mov	edx, r13d
	mov	r11d, r13d
	cmp	DWORD PTR [rsi+rbx*4], edx
	jle	SHORT $LN26@Solve
	mov	r8, QWORD PTR d_val$1$[rsp]
	mov	rcx, QWORD PTR alpha_new$1$[rsp]
	mov	r9, r14
	npad	11
$LL28@Solve:
; Line 604
	movsdx	xmm0, QWORD PTR [rcx]
	movsxd	rax, DWORD PTR [rbp]
	movapd	xmm1, xmm0
	subsd	xmm1, QWORD PTR [r12+rax*8]
; Line 605
	movsdx	QWORD PTR [r12+rax*8], xmm0
; Line 606
	movapd	xmm0, xmm1
	andpd	xmm0, xmm7
	comisd	xmm0, xmm8
	jb	SHORT $LN27@Solve
; Line 608
	mov	eax, DWORD PTR [rbp]
; Line 610
	add	r9, 4
	inc	r11d
	mov	DWORD PTR [r9-4], eax
	add	r8, 8
	movsdx	QWORD PTR [r8-8], xmm1
$LN27@Solve:
	inc	edx
	add	rcx, 8
	add	rbp, 4
	cmp	edx, DWORD PTR [rsi+rbx*4]
	jl	SHORT $LL28@Solve
$LN26@Solve:
; Line 614
	mov	rax, QWORD PTR [rdi+48]
	mov	rcx, QWORD PTR [rax+16]
	mov	rbp, QWORD PTR [rcx+rbx*8]
; Line 618
	movsxd	rbx, r11d
	mov	eax, DWORD PTR [rbp]
	cmp	eax, -1
	je	$LN182@Solve
	mov	r15, QWORD PTR w$[rsp]
	lea	r10, QWORD PTR [rbp+8]
	npad	11
$LL24@Solve:
	dec	eax
	mov	rdx, r13
	imul	eax, DWORD PTR [rdi+32]
	cmp	rbx, 4
	cdqe
	lea	rcx, QWORD PTR [r15+rax*8]
	jl	$LN180@Solve
	mov	r12, QWORD PTR d_val$1$[rsp]
	lea	r11, QWORD PTR [rbx-4]
	lea	r8, QWORD PTR [r14+8]
	shr	r11, 2
	lea	r9, QWORD PTR [r12+16]
	inc	r11
; Line 665
	lea	rdx, QWORD PTR [r11*4]
	npad	6
$LL161@Solve:
	movsxd	rax, DWORD PTR [r8-8]
	movsdx	xmm0, QWORD PTR [r9-16]
	add	r9, 32					; 00000020H
	add	r8, 16
	sub	r11, 1
	mulsd	xmm0, QWORD PTR [r10]
	addsd	xmm0, QWORD PTR [rcx+rax*8]
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	movsdx	xmm0, QWORD PTR [r9-40]
	movsxd	rax, DWORD PTR [r8-20]
	mulsd	xmm0, QWORD PTR [r10]
	addsd	xmm0, QWORD PTR [rcx+rax*8]
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	movsdx	xmm0, QWORD PTR [r10]
	movsxd	rax, DWORD PTR [r8-16]
	mulsd	xmm0, QWORD PTR [r9-32]
	addsd	xmm0, QWORD PTR [rcx+rax*8]
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	movsdx	xmm0, QWORD PTR [r9-24]
	movsxd	rax, DWORD PTR [r8-12]
	mulsd	xmm0, QWORD PTR [r10]
	addsd	xmm0, QWORD PTR [rcx+rax*8]
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	jne	SHORT $LL161@Solve
; Line 488
	jmp	SHORT $LC160@Solve
$LN180@Solve:
	mov	r12, QWORD PTR d_val$1$[rsp]
$LC160@Solve:
; Line 618
	cmp	rdx, rbx
	jge	SHORT $LN159@Solve
$LC22@Solve:
; Line 619
	movsdx	xmm0, QWORD PTR [r12+rdx*8]
	movsxd	rax, DWORD PTR [r14+rdx*4]
; Line 665
	inc	rdx
	cmp	rdx, rbx
	mulsd	xmm0, QWORD PTR [r10]
	addsd	xmm0, QWORD PTR [rcx+rax*8]
	movsdx	QWORD PTR [rcx+rax*8], xmm0
	jl	SHORT $LC22@Solve
$LN159@Solve:
; Line 615
	mov	eax, DWORD PTR [rbp+16]
; Line 620
	add	rbp, 16
	add	r10, 16
	cmp	eax, -1
	jne	$LL24@Solve
	mov	r15, QWORD PTR y_index$1$[rsp]
	mov	rdx, QWORD PTR $T9799[rsp]
	mov	r8, QWORD PTR index$1$[rsp]
	mov	rcx, QWORD PTR $T9801[rsp]
	mov	r9, QWORD PTR alpha$1$[rsp]
	mov	r10, QWORD PTR alpha_index$1$[rsp]
	mov	r11, QWORD PTR QD$1$[rsp]
	jmp	SHORT $LN63@Solve
$LN181@Solve:
; Line 525
	mov	rdx, QWORD PTR $T9799[rsp]
	mov	r8, QWORD PTR index$1$[rsp]
	mov	rcx, QWORD PTR $T9801[rsp]
	mov	r9, QWORD PTR alpha$1$[rsp]
	mov	r10, QWORD PTR alpha_index$1$[rsp]
	mov	r11, QWORD PTR QD$1$[rsp]
	jmp	SHORT $LN63@Solve
$LN182@Solve:
	mov	rdx, QWORD PTR $T9799[rsp]
	mov	r8, QWORD PTR index$1$[rsp]
	mov	rcx, QWORD PTR $T9801[rsp]
	mov	r9, QWORD PTR alpha$1$[rsp]
	mov	r10, QWORD PTR alpha_index$1$[rsp]
	mov	r11, QWORD PTR QD$1$[rsp]
$LN63@Solve:
	inc	rdx
	cmp	rdx, rcx
	mov	QWORD PTR $T9799[rsp], rdx
	jl	$LL64@Solve
$LN62@Solve:
; Line 625
	mov	ebx, DWORD PTR iter$1$[rsp]
; Line 626
	mov	eax, 1717986919				; 66666667H
	inc	ebx
	mov	DWORD PTR iter$1$[rsp], ebx
	imul	ebx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	ecx, DWORD PTR [rdx+rdx*4]
	add	ecx, ecx
	cmp	ebx, ecx
	jne	SHORT $LN19@Solve
; Line 628
	lea	rcx, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
	call	?info@@YAXPEBDZZ			; info
$LN19@Solve:
; Line 631
	comisd	xmm10, xmm9
	jbe	SHORT $LN18@Solve
; Line 633
	movsdx	xmm0, QWORD PTR [rdi+40]
	comisd	xmm0, xmm9
	jbe	SHORT $LN17@Solve
	cmp	BYTE PTR start_from_all$1$[rsp], 1
	je	SHORT $LN179@Solve
$LN17@Solve:
; Line 637
	mov	ecx, DWORD PTR [rdi+28]
; Line 638
	mov	edx, r13d
	mov	DWORD PTR active_size$1$[rsp], ecx
	test	ecx, ecx
	jle	SHORT $LN13@Solve
; Line 637
	mov	rcx, rsi
	npad	2
$LL15@Solve:
; Line 639
	mov	eax, DWORD PTR [rdi+32]
	inc	edx
	add	rcx, 4
	mov	DWORD PTR [rcx-4], eax
	cmp	edx, DWORD PTR [rdi+28]
	jl	SHORT $LL15@Solve
$LN13@Solve:
; Line 640
	lea	rcx, OFFSET FLAT:??_C@_01NBENCBCI@?$CK?$AA@
	call	?info@@YAXPEBDZZ			; info
; Line 641
	movsdx	xmm5, QWORD PTR [rdi+40]
	mulsd	xmm10, xmm12
	comisd	xmm10, xmm5
	ja	SHORT $LN113@Solve
	movapd	xmm10, xmm5
$LN113@Solve:
; Line 642
	mov	BYTE PTR start_from_all$1$[rsp], 1
; Line 645
	jmp	SHORT $LN12@Solve
$LN18@Solve:
; Line 646
	mov	BYTE PTR start_from_all$1$[rsp], r13b
$LN12@Solve:
; Line 517
	cmp	ebx, DWORD PTR [rdi+36]
	jl	$LL69@Solve
$LN179@Solve:
	mov	r12, QWORD PTR w$[rsp]
	movaps	xmm11, XMMWORD PTR [rsp+160]
	movaps	xmm9, XMMWORD PTR [rsp+192]
	movaps	xmm8, XMMWORD PTR [rsp+208]
; Line 625
	jmp	SHORT $LN137@Solve
$LN184@Solve:
	mov	ebx, r13d
$LN137@Solve:
; Line 649
	lea	rcx, OFFSET FLAT:??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@
	mov	edx, ebx
	call	?info@@YAXPEBDZZ			; info
; Line 650
	cmp	ebx, DWORD PTR [rdi+36]
	movaps	xmm10, XMMWORD PTR [rsp+176]
	jl	SHORT $LN11@Solve
; Line 651
	lea	rcx, OFFSET FLAT:??_C@_0CN@INEBNJKC@?6WARNING?3?5reaching?5max?5number?5of@
	call	?info@@YAXPEBDZZ			; info
$LN11@Solve:
; Line 656
	movsxd	r14, DWORD PTR [rdi+32]
	movapd	xmm4, xmm6
	mov	ebx, r13d
	mov	r8d, r14d
	mov	r9d, r13d
	mov	rax, r13
	imul	r8d, DWORD PTR [rdi+24]
	cmp	r8d, 4
	jl	SHORT $LC163@Solve
	lea	eax, DWORD PTR [r8-4]
	lea	rcx, QWORD PTR [r12+16]
	shr	eax, 2
	inc	eax
	mov	edx, eax
; Line 665
	lea	r9d, DWORD PTR [rax*4]
	lea	rax, QWORD PTR [rax*4]
	npad	3
$LL164@Solve:
	movsdx	xmm0, QWORD PTR [rcx-16]
	movsdx	xmm1, QWORD PTR [rcx-8]
	movsdx	xmm2, QWORD PTR [rcx]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	movsdx	xmm3, QWORD PTR [rcx+8]
	addsd	xmm0, xmm4
	add	rcx, 32					; 00000020H
	sub	rdx, 1
	mulsd	xmm3, xmm3
	movapd	xmm4, xmm0
	addsd	xmm4, xmm1
	addsd	xmm4, xmm2
	addsd	xmm4, xmm3
	jne	SHORT $LL164@Solve
$LC163@Solve:
; Line 656
	cmp	r9d, r8d
	jge	SHORT $LN162@Solve
	sub	r8d, r9d
	lea	rax, QWORD PTR [r12+rax*8]
	mov	ecx, r8d
$LC10@Solve:
; Line 657
	movsdx	xmm0, QWORD PTR [rax]
	add	rax, 8
	sub	rcx, 1
	mulsd	xmm0, xmm0
	addsd	xmm4, xmm0
	jne	SHORT $LC10@Solve
$LN162@Solve:
; Line 659
	mov	r12d, DWORD PTR [rdi+28]
	mulsd	xmm4, xmm12
	movaps	xmm12, XMMWORD PTR [rsp+144]
	mov	r8d, r12d
	mov	r9d, r13d
	mov	rax, r13
	imul	r8d, r14d
	cmp	r8d, 4
	jl	$LN183@Solve
	mov	r10, QWORD PTR alpha$1$[rsp]
	lea	eax, DWORD PTR [r8-4]
	shr	eax, 2
	lea	rcx, QWORD PTR [r10+16]
	inc	eax
	mov	edx, eax
; Line 665
	lea	r9d, DWORD PTR [rax*4]
	lea	rax, QWORD PTR [rax*4]
$LL171@Solve:
	movsdx	xmm0, QWORD PTR [rcx-16]
	addsd	xmm4, xmm0
	andpd	xmm0, xmm7
	comisd	xmm0, xmm6
	jbe	SHORT $LN167@Solve
; Line 663
	inc	ebx
$LN167@Solve:
; Line 661
	movsdx	xmm0, QWORD PTR [rcx-8]
	addsd	xmm4, xmm0
; Line 662
	andpd	xmm0, xmm7
	comisd	xmm0, xmm6
	jbe	SHORT $LN168@Solve
; Line 663
	inc	ebx
$LN168@Solve:
; Line 661
	movsdx	xmm0, QWORD PTR [rcx]
	addsd	xmm4, xmm0
; Line 662
	andpd	xmm0, xmm7
	comisd	xmm0, xmm6
	jbe	SHORT $LN169@Solve
; Line 663
	inc	ebx
$LN169@Solve:
; Line 661
	movsdx	xmm0, QWORD PTR [rcx+8]
	addsd	xmm4, xmm0
; Line 662
	andpd	xmm0, xmm7
	comisd	xmm0, xmm6
	jbe	SHORT $LN170@Solve
; Line 663
	inc	ebx
$LN170@Solve:
; Line 658
	add	rcx, 32					; 00000020H
; Line 665
	sub	rdx, 1
	jne	SHORT $LL171@Solve
; Line 525
	jmp	SHORT $LC166@Solve
$LN183@Solve:
	mov	r10, QWORD PTR alpha$1$[rsp]
$LC166@Solve:
; Line 659
	cmp	r9d, r8d
	jge	SHORT $LN165@Solve
	sub	r8d, r9d
	lea	rax, QWORD PTR [r10+rax*8]
	mov	ecx, r8d
$LC7@Solve:
; Line 661
	movsdx	xmm0, QWORD PTR [rax]
	addsd	xmm4, xmm0
; Line 662
	andpd	xmm0, xmm7
	comisd	xmm0, xmm6
	jbe	SHORT $LN6@Solve
; Line 663
	inc	ebx
$LN6@Solve:
; Line 659
	add	rax, 8
	sub	rcx, 1
	jne	SHORT $LC7@Solve
$LN165@Solve:
; Line 665
	cmp	r12d, 4
	movaps	xmm7, XMMWORD PTR [rsp+224]
	jl	$LC173@Solve
	mov	rax, QWORD PTR [rdi+48]
	mov	r15, QWORD PTR alpha$1$[rsp]
	xor	r10d, r10d
	mov	rcx, QWORD PTR [rax+8]
	lea	eax, DWORD PTR [r12-4]
	mov	r9, r10
	shr	eax, 2
	add	rcx, 8
	mov	rdx, r14
	inc	eax
	lea	r8, QWORD PTR [r14*4]
	lea	r10, QWORD PTR [r14+r14*2]
	mov	ebp, eax
	lea	eax, DWORD PTR [rax*4]
	lea	r11, QWORD PTR [r14+r14]
	mov	QWORD PTR tv4187[rsp], rax
	lea	r13, QWORD PTR [rbp*4]
	npad	13
$LL174@Solve:
; Line 666
	movsxd	rax, DWORD PTR [rcx-8]
	add	rcx, 16
	add	rax, r9
	add	r9, r8
	subsd	xmm4, QWORD PTR [r15+rax*8]
	movsxd	rax, DWORD PTR [rcx-20]
	add	rax, rdx
	add	rdx, r8
	subsd	xmm4, QWORD PTR [r15+rax*8]
	movsxd	rax, DWORD PTR [rcx-16]
	add	rax, r11
	add	r11, r8
	subsd	xmm4, QWORD PTR [r15+rax*8]
	movsxd	rax, DWORD PTR [rcx-12]
	add	rax, r10
	add	r10, r8
	sub	rbp, 1
	subsd	xmm4, QWORD PTR [r15+rax*8]
	jne	SHORT $LL174@Solve
	mov	r15, QWORD PTR y_index$1$[rsp]
$LC173@Solve:
; Line 665
	mov	r10, QWORD PTR tv4187[rsp]
	mov	rbp, QWORD PTR [rsp+264]
	cmp	r10d, r12d
	jge	SHORT $LN172@Solve
	mov	rax, QWORD PTR [rdi+48]
	mov	rdx, r14
	mov	rcx, QWORD PTR [rax+8]
	imul	rdx, r13
	sub	r12d, r10d
	mov	r10, QWORD PTR alpha$1$[rsp]
	lea	r8, QWORD PTR [rcx+r13*4]
	mov	ecx, r12d
$LC3@Solve:
; Line 666
	movsxd	rax, DWORD PTR [r8]
	movapd	xmm0, xmm6
	add	r8, 4
	add	rax, rdx
	add	rdx, r14
	sub	rcx, 1
	subsd	xmm0, QWORD PTR [r10+rax*8]
	addsd	xmm4, xmm0
	jne	SHORT $LC3@Solve
$LN172@Solve:
; Line 667
	movapd	xmm1, xmm4
	lea	rcx, OFFSET FLAT:??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@
	movd	rdx, xmm1
	call	?info@@YAXPEBDZZ			; info
; Line 668
	lea	rcx, OFFSET FLAT:??_C@_09JPIIPCCJ@nSV?5?$DN?5?$CFd?6?$AA@
	mov	edx, ebx
	call	?info@@YAXPEBDZZ			; info
; Line 670
	mov	rcx, QWORD PTR alpha$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 671
	mov	rcx, QWORD PTR alpha_new$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 672
	mov	rcx, QWORD PTR index$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 673
	mov	rcx, QWORD PTR QD$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 674
	mov	rcx, QWORD PTR d_ind$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 675
	mov	rcx, QWORD PTR d_val$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 676
	mov	rcx, QWORD PTR alpha_index$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 677
	mov	rcx, r15
	call	??3@YAXPEAX@Z				; operator delete
; Line 678
	mov	rcx, rsi
; Line 679
	movaps	xmm6, XMMWORD PTR [rsp+240]
	add	rsp, 272				; 00000110H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	jmp	??3@YAXPEAX@Z				; operator delete
?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z ENDP		; Solver_MCSVM_CS::Solve
_TEXT	ENDS
PUBLIC	??_C@_0FG@EOHDMCGM@?6WARNING?3?5reaching?5max?5number?5of@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z DD imagerel ?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z
	DD	imagerel ?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z+1885
	DD	imagerel $unwind$?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z DD 01f5f01H
	DD	08f85fH
	DD	09e857H
	DD	0ad84fH
	DD	0bc847H
	DD	0cb83fH
	DD	0da837H
	DD	0e982fH
	DD	0f882aH
	DD	0107825H
	DD	0116821H
	DD	02d341dH
	DD	024011dH
	DD	0e014f016H
	DD	0c010d012H
	DD	0600d700eH
	DD	0500cH
xdata	ENDS
;	COMDAT ??_C@_0FG@EOHDMCGM@?6WARNING?3?5reaching?5max?5number?5of@
CONST	SEGMENT
??_C@_0FG@EOHDMCGM@?6WARNING?3?5reaching?5max?5number?5of@ DB 0aH, 'WARNI'
	DB	'NG: reaching max number of iterations', 0aH, 'Using -s 2 may '
	DB	'be faster (also see FAQ)', 0aH, 0aH, 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z
_TEXT	SEGMENT
QD$1$ = 32
alpha$1$ = 48
diag$ = 56
$T9992 = 80
y$1$ = 88
upper_bound$ = 96
prob$ = 352
w$ = 360
eps$ = 368
iter$1$ = 376
Cp$ = 376
$T9994 = 384
Cn$ = 384
solver_type$ = 392
?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z PROC	; solve_l2r_l1l2_svc, COMDAT
; Line 714
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+8], rcx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 288				; 00000120H
; Line 716
	movaps	XMMWORD PTR [rax-72], xmm6
	movaps	XMMWORD PTR [rax-88], xmm7
	movaps	XMMWORD PTR [rax-104], xmm8
	movaps	XMMWORD PTR [rax-120], xmm9
; Line 719
	movaps	XMMWORD PTR [rax-136], xmm10
	movaps	XMMWORD PTR [rax-152], xmm11
	movaps	XMMWORD PTR [rax-168], xmm12
	movaps	XMMWORD PTR [rax-184], xmm13
	movaps	XMMWORD PTR [rax-200], xmm14
	movaps	XMMWORD PTR [rax-216], xmm15
; Line 715
	movsxd	r15, DWORD PTR [rcx]
; Line 716
	movsxd	rbx, DWORD PTR [rcx+4]
	mov	r13, rdx
; Line 717
	xor	r14d, r14d
	mov	rsi, rcx
	movapd	xmm6, xmm3
; Line 719
	mov	rdi, -1
	mov	rbp, r15
	mov	QWORD PTR $T9992[rsp], r15
	mov	DWORD PTR iter$1$[rsp], r14d
	mov	eax, 8
	movapd	xmm15, xmm2
	mul	r15
	cmovo	rax, rdi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR QD$1$[rsp], rax
; Line 721
	mov	eax, 4
	mul	r15
	cmovo	rax, rdi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	r12, rax
; Line 722
	mov	eax, 8
	mul	r15
	cmovo	rax, rdi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 723
	mov	rcx, r15
	mov	QWORD PTR alpha$1$[rsp], rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 735
	cmp	DWORD PTR solver_type$[rsp], 3
	movsdx	xmm2, QWORD PTR __real@3fe0000000000000
	movsdx	xmm1, QWORD PTR Cn$[rsp]
	xorpd	xmm7, xmm7
	mov	rcx, QWORD PTR __imp__HUGE
	mov	rdi, rax
	mov	QWORD PTR y$1$[rsp], rax
	movsdx	xmm14, QWORD PTR __mask@@NegDouble@
	movapd	xmm0, xmm2
	movsdx	QWORD PTR diag$[rsp+8], xmm7
	divsd	xmm0, xmm1
	movsdx	xmm10, QWORD PTR [rcx]
	movsdx	QWORD PTR upper_bound$[rsp+8], xmm7
	movapd	xmm9, xmm10
	movsdx	QWORD PTR upper_bound$[rsp], xmm10
	movsdx	QWORD PTR upper_bound$[rsp+16], xmm10
	xorpd	xmm9, xmm14
	movsdx	QWORD PTR diag$[rsp], xmm0
	movapd	xmm0, xmm2
	divsd	xmm0, xmm6
	movsdx	QWORD PTR diag$[rsp+16], xmm0
	jne	SHORT $LN48@solve_l2r_
; Line 737
	movsdx	QWORD PTR diag$[rsp], xmm7
; Line 738
	movsdx	QWORD PTR diag$[rsp+16], xmm7
; Line 739
	movsdx	QWORD PTR upper_bound$[rsp], xmm1
; Line 740
	movsdx	QWORD PTR upper_bound$[rsp+16], xmm6
$LN48@solve_l2r_:
; Line 743
	mov	r8, rbx
	mov	QWORD PTR $T9994[rsp], rbx
	test	ebx, ebx
	jle	SHORT $LN47@solve_l2r_
; Line 744
	shl	r8, 3
	xor	edx, edx
	mov	rcx, r13
	call	memset
$LN47@solve_l2r_:
; Line 745
	mov	r9d, r14d
	mov	r8, r14
	test	r15d, r15d
	jle	$LN77@solve_l2r_
	mov	rax, QWORD PTR QD$1$[rsp]
; Line 747
	mov	r10, QWORD PTR alpha$1$[rsp]
	mov	rdx, rax
	sub	r10, rax
$LL44@solve_l2r_:
	mov	QWORD PTR [r10+rdx], r14
; Line 748
	mov	rax, QWORD PTR [rsi+8]
	cmp	DWORD PTR [rax+r8*4], r14d
	jle	SHORT $LN41@solve_l2r_
; Line 750
	mov	BYTE PTR [r8+rdi], 1
; Line 752
	jmp	SHORT $LN40@solve_l2r_
$LN41@solve_l2r_:
; Line 754
	mov	BYTE PTR [r8+rdi], -1
$LN40@solve_l2r_:
; Line 756
	movsx	rax, BYTE PTR [r8+rdi]
	mov	rcx, QWORD PTR diag$[rsp+rax*8+8]
	mov	QWORD PTR [rdx], rcx
; Line 758
	mov	rax, QWORD PTR [rsi+16]
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 759
	cmp	DWORD PTR [rcx], -1
	je	SHORT $LN38@solve_l2r_
	npad	12
$LL39@solve_l2r_:
; Line 761
	movsdx	xmm0, QWORD PTR [rcx+8]
; Line 762
	add	rcx, 16
	mulsd	xmm0, xmm0
	addsd	xmm0, QWORD PTR [rdx]
	movsdx	QWORD PTR [rdx], xmm0
	cmp	DWORD PTR [rcx], -1
	jne	SHORT $LL39@solve_l2r_
$LN38@solve_l2r_:
; Line 764
	mov	DWORD PTR [r12+r8*4], r9d
	inc	r8
	add	rdx, 8
	inc	r9d
	cmp	r8, r15
	jl	SHORT $LL44@solve_l2r_
$LN77@solve_l2r_:
; Line 724
	movsdx	xmm11, QWORD PTR __mask@@AbsDouble@
	movsdx	xmm13, QWORD PTR __real@3ff0000000000000
	movsdx	xmm12, QWORD PTR __real@3d719799812dea11
	npad	8
$LL37@solve_l2r_:
; Line 769
	mov	rax, QWORD PTR __imp__HUGE
; Line 772
	mov	esi, r14d
	mov	rbx, r14
	movsdx	xmm8, QWORD PTR [rax]
	movapd	xmm6, xmm8
	xorpd	xmm6, xmm14
	test	rbp, rbp
	jle	SHORT $LN33@solve_l2r_
; Line 769
	mov	edi, r15d
$LL35@solve_l2r_:
; Line 774
	call	QWORD PTR __imp_rand
; Line 775
	mov	ecx, DWORD PTR [r12+rbx*4]
	inc	rbx
	cdq
	idiv	edi
	dec	edi
	add	edx, esi
	inc	esi
	cmp	rbx, rbp
	movsxd	r8, edx
	mov	eax, DWORD PTR [r12+r8*4]
	mov	DWORD PTR [r12+rbx*4-4], eax
	mov	DWORD PTR [r12+r8*4], ecx
	jl	SHORT $LL35@solve_l2r_
	mov	rdi, QWORD PTR y$1$[rsp]
$LN33@solve_l2r_:
	mov	rsi, QWORD PTR alpha$1$[rsp]
; Line 778
	mov	rdx, r14
	test	rbp, rbp
	jle	$LN30@solve_l2r_
	mov	r9, QWORD PTR prob$[rsp]
	mov	r14, QWORD PTR QD$1$[rsp]
	npad	14
$LL32@solve_l2r_:
; Line 784
	mov	rax, QWORD PTR [r9+16]
	movsxd	r8, DWORD PTR [r12+rdx*4]
	movapd	xmm1, xmm7
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 785
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN28@solve_l2r_
	npad	9
$LL29@solve_l2r_:
; Line 787
	cdqe
; Line 788
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [r13+rax*8-8]
	mov	eax, DWORD PTR [rcx]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm1, xmm0
	cmp	eax, -1
	jne	SHORT $LL29@solve_l2r_
$LN28@solve_l2r_:
; Line 793
	movsdx	xmm4, QWORD PTR [rsi+r8*8]
	movsx	rcx, BYTE PTR [r8+rdi]
	movsx	eax, BYTE PTR [r8+rdi]
; Line 796
	ucomisd	xmm4, xmm7
	movapd	xmm2, xmm4
	movd	xmm5, eax
	mulsd	xmm2, QWORD PTR diag$[rsp+rcx*8+8]
	movsdx	xmm3, QWORD PTR upper_bound$[rsp+rcx*8+8]
	cvtdq2pd xmm5, xmm5
	movapd	xmm0, xmm5
	mulsd	xmm0, xmm1
	movapd	xmm1, xmm7
	subsd	xmm0, xmm13
	addsd	xmm2, xmm0
	jp	SHORT $LN27@solve_l2r_
	jne	SHORT $LN27@solve_l2r_
; Line 798
	comisd	xmm2, xmm10
	jbe	SHORT $LN26@solve_l2r_
$LN106@solve_l2r_:
; Line 801
	mov	ecx, DWORD PTR [r12+rdx*4]
	mov	eax, DWORD PTR [r12+rbp*4-4]
	dec	rbp
	mov	DWORD PTR [r12+rdx*4], eax
	dec	r15d
	mov	DWORD PTR [r12+rbp*4], ecx
; Line 802
	dec	rdx
	jmp	$LN31@solve_l2r_
$LN26@solve_l2r_:
; Line 805
	comisd	xmm7, xmm2
; Line 807
	jmp	SHORT $LN107@solve_l2r_
$LN27@solve_l2r_:
; Line 808
	ucomisd	xmm4, xmm3
	jp	SHORT $LN22@solve_l2r_
	jne	SHORT $LN22@solve_l2r_
; Line 810
	comisd	xmm9, xmm2
; Line 814
	ja	SHORT $LN106@solve_l2r_
; Line 817
	comisd	xmm2, xmm7
$LN107@solve_l2r_:
	jbe	SHORT $LN18@solve_l2r_
$LN22@solve_l2r_:
; Line 821
	movapd	xmm1, xmm2
$LN18@solve_l2r_:
; Line 823
	comisd	xmm6, xmm1
	ja	SHORT $LN60@solve_l2r_
	movapd	xmm6, xmm1
$LN60@solve_l2r_:
; Line 824
	comisd	xmm1, xmm8
	ja	SHORT $LN64@solve_l2r_
	movapd	xmm8, xmm1
$LN64@solve_l2r_:
; Line 826
	andpd	xmm1, xmm11
	comisd	xmm1, xmm12
	jbe	SHORT $LN31@solve_l2r_
; Line 829
	divsd	xmm2, QWORD PTR [r14+r8*8]
	movapd	xmm1, xmm4
	subsd	xmm1, xmm2
	comisd	xmm1, xmm7
	ja	SHORT $LN68@solve_l2r_
	movapd	xmm1, xmm7
$LN68@solve_l2r_:
	comisd	xmm3, xmm1
	ja	SHORT $LN72@solve_l2r_
	movapd	xmm1, xmm3
$LN72@solve_l2r_:
	movsdx	QWORD PTR [rsi+r8*8], xmm1
; Line 831
	mov	rax, QWORD PTR [r9+16]
	subsd	xmm1, xmm4
	mulsd	xmm1, xmm5
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 832
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN31@solve_l2r_
	npad	8
$LL16@solve_l2r_:
; Line 834
	cdqe
; Line 835
	add	rcx, 16
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [r13+rax*8-8]
	movsdx	QWORD PTR [r13+rax*8-8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL16@solve_l2r_
$LN31@solve_l2r_:
; Line 778
	inc	rdx
	cmp	rdx, rbp
	jl	$LL32@solve_l2r_
	xor	r14d, r14d
$LN30@solve_l2r_:
; Line 840
	mov	r8d, DWORD PTR iter$1$[rsp]
; Line 841
	mov	eax, 1717986919				; 66666667H
	inc	r8d
	mov	DWORD PTR iter$1$[rsp], r8d
	imul	r8d
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	ecx, DWORD PTR [rdx+rdx*4]
	add	ecx, ecx
	cmp	r8d, ecx
	jne	SHORT $LN14@solve_l2r_
; Line 842
	lea	rcx, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
	call	?info@@YAXPEBDZZ			; info
	mov	r8d, DWORD PTR iter$1$[rsp]
$LN14@solve_l2r_:
; Line 844
	movapd	xmm0, xmm6
	subsd	xmm0, xmm8
	comisd	xmm15, xmm0
	jb	SHORT $LN11@solve_l2r_
; Line 846
	mov	rbx, QWORD PTR $T9992[rsp]
	cmp	rbp, rbx
	je	SHORT $LN84@solve_l2r_
; Line 851
	lea	rcx, OFFSET FLAT:??_C@_01NBENCBCI@?$CK?$AA@
	mov	r15d, ebx
	mov	rbp, rbx
	call	?info@@YAXPEBDZZ			; info
; Line 852
	mov	r11, QWORD PTR __imp__HUGE
; Line 854
	mov	r8d, DWORD PTR iter$1$[rsp]
	movsdx	xmm10, QWORD PTR [r11]
	movapd	xmm9, xmm10
	jmp	SHORT $LN108@solve_l2r_
$LN11@solve_l2r_:
; Line 859
	comisd	xmm7, xmm6
	movapd	xmm10, xmm6
	movapd	xmm9, xmm8
	jb	SHORT $LN10@solve_l2r_
; Line 860
	mov	rax, QWORD PTR __imp__HUGE
	movsdx	xmm10, QWORD PTR [rax]
$LN10@solve_l2r_:
; Line 861
	comisd	xmm8, xmm7
	mov	rbx, QWORD PTR $T9992[rsp]
	jb	SHORT $LN9@solve_l2r_
; Line 862
	mov	rax, QWORD PTR __imp__HUGE
	movsdx	xmm9, QWORD PTR [rax]
$LN108@solve_l2r_:
	xorpd	xmm9, xmm14
$LN9@solve_l2r_:
; Line 767
	cmp	r8d, 1000				; 000003e8H
	jl	$LL37@solve_l2r_
$LN84@solve_l2r_:
; Line 865
	lea	rcx, OFFSET FLAT:??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@
	mov	edx, r8d
	call	?info@@YAXPEBDZZ			; info
; Line 866
	mov	eax, DWORD PTR iter$1$[rsp]
	cmp	eax, 1000				; 000003e8H
	jl	SHORT $LN8@solve_l2r_
; Line 867
	lea	rcx, OFFSET FLAT:??_C@_0FG@EOHDMCGM@?6WARNING?3?5reaching?5max?5number?5of@
	call	?info@@YAXPEBDZZ			; info
$LN8@solve_l2r_:
; Line 873
	mov	r8, QWORD PTR $T9994[rsp]
	movapd	xmm4, xmm7
	mov	rax, r14
	cmp	r8, 4
	jl	SHORT $LC95@solve_l2r_
	lea	rdx, QWORD PTR [r8-4]
	lea	rcx, QWORD PTR [r13+16]
	shr	rdx, 2
	inc	rdx
; Line 875
	lea	rax, QWORD PTR [rdx*4]
	npad	8
$LL96@solve_l2r_:
	movsdx	xmm0, QWORD PTR [rcx-16]
	movsdx	xmm1, QWORD PTR [rcx-8]
	movsdx	xmm2, QWORD PTR [rcx]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	movsdx	xmm3, QWORD PTR [rcx+8]
	addsd	xmm0, xmm4
	add	rcx, 32					; 00000020H
	sub	rdx, 1
	mulsd	xmm3, xmm3
	movapd	xmm4, xmm0
	addsd	xmm4, xmm1
	addsd	xmm4, xmm2
	addsd	xmm4, xmm3
	jne	SHORT $LL96@solve_l2r_
$LC95@solve_l2r_:
; Line 873
	cmp	rax, r8
	jge	SHORT $LN94@solve_l2r_
$LC7@solve_l2r_:
; Line 874
	movsdx	xmm0, QWORD PTR [r13+rax*8]
; Line 875
	inc	rax
	cmp	rax, r8
	mulsd	xmm0, xmm0
	addsd	xmm4, xmm0
	jl	SHORT $LC7@solve_l2r_
$LN94@solve_l2r_:
	cmp	rbx, 4
	movsdx	xmm3, QWORD PTR __real@4000000000000000
	mov	rcx, r14
	jl	$LC98@solve_l2r_
	lea	r8, QWORD PTR [rbx-3]
; Line 877
	lea	rdx, QWORD PTR [rsi+16]
	npad	6
$LL103@solve_l2r_:
	movsdx	xmm1, QWORD PTR [rdx-16]
	movsx	rax, BYTE PTR [rcx+rdi]
; Line 878
	comisd	xmm1, xmm7
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR diag$[rsp+rax*8+8]
	subsd	xmm0, xmm3
	mulsd	xmm0, xmm1
	addsd	xmm4, xmm0
	jbe	SHORT $LN99@solve_l2r_
; Line 879
	inc	r14d
$LN99@solve_l2r_:
; Line 877
	movsdx	xmm1, QWORD PTR [rdx-8]
	movsx	rax, BYTE PTR [rcx+rdi+1]
; Line 878
	comisd	xmm1, xmm7
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR diag$[rsp+rax*8+8]
	subsd	xmm0, xmm3
	mulsd	xmm0, xmm1
	addsd	xmm4, xmm0
	jbe	SHORT $LN100@solve_l2r_
; Line 879
	inc	r14d
$LN100@solve_l2r_:
; Line 877
	movsdx	xmm1, QWORD PTR [rdx]
	movsx	rax, BYTE PTR [rcx+rdi+2]
; Line 878
	comisd	xmm1, xmm7
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR diag$[rsp+rax*8+8]
	subsd	xmm0, xmm3
	mulsd	xmm0, xmm1
	addsd	xmm4, xmm0
	jbe	SHORT $LN101@solve_l2r_
; Line 879
	inc	r14d
$LN101@solve_l2r_:
; Line 877
	movsdx	xmm1, QWORD PTR [rdx+8]
	movsx	rax, BYTE PTR [rcx+rdi+3]
; Line 878
	comisd	xmm1, xmm7
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR diag$[rsp+rax*8+8]
	subsd	xmm0, xmm3
	mulsd	xmm0, xmm1
	addsd	xmm4, xmm0
	jbe	SHORT $LN102@solve_l2r_
; Line 879
	inc	r14d
$LN102@solve_l2r_:
	add	rcx, 4
	add	rdx, 32					; 00000020H
	cmp	rcx, r8
	jl	$LL103@solve_l2r_
$LC98@solve_l2r_:
; Line 875
	cmp	rcx, rbx
	jge	SHORT $LN97@solve_l2r_
$LC4@solve_l2r_:
; Line 877
	movsdx	xmm2, QWORD PTR [rsi+rcx*8]
	movsx	rax, BYTE PTR [rcx+rdi]
; Line 878
	comisd	xmm2, xmm7
	movapd	xmm0, xmm2
	mulsd	xmm0, QWORD PTR diag$[rsp+rax*8+8]
	subsd	xmm0, xmm3
	mulsd	xmm0, xmm2
	addsd	xmm4, xmm0
	jbe	SHORT $LN3@solve_l2r_
; Line 879
	inc	r14d
$LN3@solve_l2r_:
; Line 875
	inc	rcx
	cmp	rcx, rbx
	jl	SHORT $LC4@solve_l2r_
$LN97@solve_l2r_:
; Line 881
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	lea	rcx, OFFSET FLAT:??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@
	movapd	xmm1, xmm4
	movd	rdx, xmm1
	call	?info@@YAXPEBDZZ			; info
; Line 882
	lea	rcx, OFFSET FLAT:??_C@_09JPIIPCCJ@nSV?5?$DN?5?$CFd?6?$AA@
	mov	edx, r14d
	call	?info@@YAXPEBDZZ			; info
; Line 884
	mov	rcx, QWORD PTR QD$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 885
	mov	rcx, rsi
	call	??3@YAXPEAX@Z				; operator delete
; Line 886
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
; Line 887
	mov	rcx, r12
; Line 888
	lea	r11, QWORD PTR [rsp+288]
	mov	rbx, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [r11-144]
	movaps	xmm15, XMMWORD PTR [r11-160]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	jmp	??3@YAXPEAX@Z				; operator delete
?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z ENDP	; solve_l2r_l1l2_svc
_TEXT	ENDS
PUBLIC	??_C@_0FG@CDJGODIK@?6WARNING?3?5reaching?5max?5number?5of@ ; `string'
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3e45798ee2308c3a
PUBLIC	?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z	; solve_l2r_lr_dual
;	COMDAT pdata
pdata	SEGMENT
$pdata$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD imagerel $LN126
	DD	imagerel $LN126+56
	DD	imagerel $unwind$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD imagerel $LN126+56
	DD	imagerel $LN126+60
	DD	imagerel $chain$0$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD imagerel $LN126+60
	DD	imagerel $LN126+559
	DD	imagerel $chain$3$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD imagerel $LN126+559
	DD	imagerel $LN126+1595
	DD	imagerel $chain$7$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD imagerel $LN126+1595
	DD	imagerel $LN126+1764
	DD	imagerel $chain$8$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD imagerel $LN126+1764
	DD	imagerel $LN126+1998
	DD	imagerel $chain$9$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD 020021H
	DD	0e9800H
	DD	imagerel $LN126
	DD	imagerel $LN126+56
	DD	imagerel $unwind$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD 020021H
	DD	0e9800H
	DD	imagerel $LN126+56
	DD	imagerel $LN126+60
	DD	imagerel $chain$0$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD 082421H
	DD	0ad824H
	DD	0cb81bH
	DD	0da812H
	DD	0e9809H
	DD	imagerel $LN126+60
	DD	imagerel $LN126+559
	DD	imagerel $chain$3$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD 062d21H
	DD	08f82dH
	DD	09e825H
	DD	024d404H
	DD	imagerel $LN126+56
	DD	imagerel $LN126+60
	DD	imagerel $chain$0$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD 020421H
	DD	02d5404H
	DD	imagerel $LN126
	DD	imagerel $LN126+56
	DD	imagerel $unwind$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z DD 0103801H
	DD	0bc838H
	DD	0f8830H
	DD	010782bH
	DD	0116827H
	DD	025011cH
	DD	0e013f015H
	DD	0700fc011H
	DD	0300d600eH
xdata	ENDS
;	COMDAT ??_C@_0FG@CDJGODIK@?6WARNING?3?5reaching?5max?5number?5of@
CONST	SEGMENT
??_C@_0FG@CDJGODIK@?6WARNING?3?5reaching?5max?5number?5of@ DB 0aH, 'WARNI'
	DB	'NG: reaching max number of iterations', 0aH, 'Using -s 0 may '
	DB	'be faster (also see FAQ)', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3e45798ee2308c3a
CONST	SEGMENT
__real@3e45798ee2308c3a DQ 03e45798ee2308c3ar	; 1e-008
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z
_TEXT	SEGMENT
y$1$ = 32
l$1$ = 40
alpha$1$ = 48
xTx$1$ = 56
$T10176 = 64
innereps_min$1$ = 72
index$1$ = 80
upper_bound$ = 88
tv1583 = 112
$T10177 = 120
prob$ = 352
w$ = 360
eps$ = 368
iter$1$ = 376
Cp$ = 376
Gmax$1$ = 384
Cn$ = 384
?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z PROC	; solve_l2r_lr_dual, COMDAT
; Line 913
$LN126:
	mov	rax, rsp
	movsdx	QWORD PTR [rax+24], xmm2
	mov	QWORD PTR [rax+8], rcx
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 296				; 00000128H
; Line 914
	movsxd	rdi, DWORD PTR [rcx]
; Line 915
	movsxd	rbx, DWORD PTR [rcx+4]
	movaps	XMMWORD PTR [rax-72], xmm6
	movaps	XMMWORD PTR [rax-88], xmm7
	movaps	XMMWORD PTR [rax-104], xmm8
	movaps	XMMWORD PTR [rax-168], xmm12
	mov	QWORD PTR [rax+16], rbp
	mov	QWORD PTR [rax-56], r13
; Line 916
	xor	r14d, r14d
	movapd	xmm7, xmm3
	movapd	xmm8, xmm2
	mov	rbp, rdx
	mov	rsi, rcx
; Line 917
	mov	r15, -1
	movaps	XMMWORD PTR [rax-200], xmm14
	movaps	XMMWORD PTR [rax-216], xmm15
	mov	eax, 8
	mov	DWORD PTR l$1$[rsp], edi
	mov	DWORD PTR iter$1$[rsp], r14d
	mov	r13, rdi
	mov	QWORD PTR $T10176[rsp], rdi
	mul	rdi
	cmovo	rax, r15
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR xTx$1$[rsp], rax
; Line 919
	mov	eax, 4
	mul	rdi
	cmovo	rax, r15
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 920
	lea	ecx, DWORD PTR [rdi+rdi]
	mov	r12, rax
	mov	QWORD PTR index$1$[rsp], rax
	movsxd	rdx, ecx
	mov	eax, 8
	mul	rdx
	cmovo	rax, r15
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 921
	mov	rcx, rdi
	mov	r15, rax
	mov	QWORD PTR alpha$1$[rsp], rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 924
	movsdx	xmm6, QWORD PTR __real@3e45798ee2308c3a
	movsdx	xmm15, QWORD PTR __real@3f847ae147ae147b
	mov	rdi, rax
	mov	QWORD PTR y$1$[rsp], rax
	comisd	xmm8, xmm6
	jbe	SHORT $LN45@solve_l2r_@2
	movsdx	QWORD PTR innereps_min$1$[rsp], xmm6
	jmp	SHORT $LN46@solve_l2r_@2
$LN45@solve_l2r_@2:
	movsdx	QWORD PTR innereps_min$1$[rsp], xmm8
$LN46@solve_l2r_@2:
; Line 925
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	xorpd	xmm12, xmm12
	movsdx	QWORD PTR upper_bound$[rsp+16], xmm7
; Line 927
	mov	r8, rbx
	mov	QWORD PTR $T10177[rsp], rbx
	movsdx	QWORD PTR upper_bound$[rsp], xmm0
	movsdx	QWORD PTR upper_bound$[rsp+8], xmm12
	test	ebx, ebx
	jle	SHORT $LN40@solve_l2r_@2
	shl	r8, 3
	xor	edx, edx
	mov	rcx, rbp
	call	memset
$LN40@solve_l2r_@2:
; Line 929
	mov	r11d, r14d
	mov	r8, r14
	test	r13, r13
	jle	$LN115@solve_l2r_@2
	mov	r9, QWORD PTR xTx$1$[rsp]
	movsdx	xmm2, QWORD PTR __real@3f50624dd2f1a9fc
	mov	r10, r15
$LL37@solve_l2r_@2:
; Line 931
	mov	rax, QWORD PTR [rsi+8]
	cmp	DWORD PTR [rax+r8*4], r14d
	jle	SHORT $LN34@solve_l2r_@2
; Line 933
	mov	BYTE PTR [r8+rdi], 1
; Line 935
	jmp	SHORT $LN33@solve_l2r_@2
$LN34@solve_l2r_@2:
; Line 937
	mov	BYTE PTR [r8+rdi], -1
$LN33@solve_l2r_@2:
; Line 939
	movsx	rax, BYTE PTR [r8+rdi]
	movsdx	xmm1, QWORD PTR upper_bound$[rsp+rax*8+8]
	mulsd	xmm1, xmm2
	comisd	xmm6, xmm1
	ja	SHORT $LN50@solve_l2r_@2
	movapd	xmm1, xmm6
$LN50@solve_l2r_@2:
	movsdx	QWORD PTR [r10], xmm1
; Line 940
	movsx	rax, BYTE PTR [r8+rdi]
	movsdx	xmm0, QWORD PTR upper_bound$[rsp+rax*8+8]
	subsd	xmm0, xmm1
	movsdx	QWORD PTR [r10+8], xmm0
; Line 942
	mov	QWORD PTR [r9], r14
; Line 943
	mov	rax, QWORD PTR [rsi+16]
	mov	rdx, QWORD PTR [rax+r8*8]
; Line 944
	cmp	DWORD PTR [rdx], -1
	je	SHORT $LN31@solve_l2r_@2
	npad	2
$LL32@solve_l2r_@2:
; Line 946
	movsdx	xmm0, QWORD PTR [rdx+8]
; Line 948
	add	rdx, 16
	mulsd	xmm0, xmm0
	addsd	xmm0, QWORD PTR [r9]
	movsdx	QWORD PTR [r9], xmm0
	movsx	eax, BYTE PTR [r8+rdi]
	movsxd	rcx, DWORD PTR [rdx-16]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [r10]
	mulsd	xmm0, QWORD PTR [rdx-8]
	addsd	xmm0, QWORD PTR [rbp+rcx*8-8]
	movsdx	QWORD PTR [rbp+rcx*8-8], xmm0
	cmp	DWORD PTR [rdx], -1
	jne	SHORT $LL32@solve_l2r_@2
$LN31@solve_l2r_@2:
; Line 950
	mov	DWORD PTR [r12+r8*4], r11d
	inc	r8
	add	r9, 8
	inc	r11d
	add	r10, 16
	cmp	r8, r13
	jl	$LL37@solve_l2r_@2
$LN115@solve_l2r_@2:
; Line 929
	movsdx	xmm7, QWORD PTR __real@3fe0000000000000
	movsdx	xmm14, QWORD PTR __real@3fb999999999999a
	movaps	XMMWORD PTR [rsp+224], xmm9
	movaps	XMMWORD PTR [rsp+208], xmm10
	movaps	XMMWORD PTR [rsp+192], xmm11
	movaps	XMMWORD PTR [rsp+160], xmm13
	jmp	SHORT $LN30@solve_l2r_@2
	npad	11
$LL125@solve_l2r_@2:
; Line 917
	mov	r13, QWORD PTR $T10176[rsp]
$LN30@solve_l2r_@2:
; Line 955
	mov	esi, r14d
	mov	rbx, r14
	test	r13, r13
	jle	SHORT $LN26@solve_l2r_@2
	mov	edi, DWORD PTR l$1$[rsp]
$LL28@solve_l2r_@2:
; Line 957
	call	QWORD PTR __imp_rand
; Line 958
	mov	ecx, DWORD PTR [r12+rbx*4]
	inc	rbx
	cdq
	idiv	edi
	dec	edi
	add	edx, esi
	inc	esi
	cmp	rbx, r13
	movsxd	r8, edx
	mov	eax, DWORD PTR [r12+r8*4]
	mov	DWORD PTR [r12+rbx*4-4], eax
	mov	DWORD PTR [r12+r8*4], ecx
	jl	SHORT $LL28@solve_l2r_@2
	mov	rdi, QWORD PTR y$1$[rsp]
$LN26@solve_l2r_@2:
; Line 962
	mov	rsi, QWORD PTR $T10176[rsp]
	movapd	xmm6, xmm12
	mov	r15d, r14d
	movsdx	QWORD PTR Gmax$1$[rsp], xmm6
	mov	r13, r14
	test	rsi, rsi
	jle	$LN23@solve_l2r_@2
	npad	10
$LL25@solve_l2r_@2:
; Line 964
	movsxd	r8, DWORD PTR [r12+r13*4]
; Line 967
	mov	rax, QWORD PTR xTx$1$[rsp]
	movapd	xmm1, xmm12
	movsx	r14, BYTE PTR [r8+rdi]
	mov	r12, r8
	movsdx	xmm10, QWORD PTR [rax+r8*8]
; Line 968
	mov	rax, QWORD PTR prob$[rsp]
	movsdx	xmm8, QWORD PTR upper_bound$[rsp+r14*8+8]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 969
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN21@solve_l2r_@2
	npad	6
$LL22@solve_l2r_@2:
; Line 971
	cdqe
; Line 972
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rbp+rax*8-8]
	mov	eax, DWORD PTR [rcx]
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm1, xmm0
	cmp	eax, -1
	jne	SHORT $LL22@solve_l2r_@2
$LN21@solve_l2r_@2:
; Line 975
	movsx	eax, BYTE PTR [r8+rdi]
; Line 979
	mov	r10, QWORD PTR alpha$1$[rsp]
	add	r8d, r8d
	movapd	xmm0, xmm10
	lea	edi, DWORD PTR [r8+1]
	movsxd	rdx, r8d
	mov	r9d, 1
	mulsd	xmm0, xmm7
	movd	xmm2, eax
	movsxd	rax, edi
	cvtdq2pd xmm2, xmm2
	mulsd	xmm2, xmm1
	movsdx	xmm1, QWORD PTR [r10+rax*8]
	subsd	xmm1, QWORD PTR [r10+rdx*8]
	mulsd	xmm1, xmm0
	addsd	xmm1, xmm2
	comisd	xmm12, xmm1
	jbe	SHORT $LN20@solve_l2r_@2
; Line 981
	mov	edx, edi
; Line 983
	or	r9d, -1
	mov	edi, r8d
$LN20@solve_l2r_@2:
; Line 987
	movsxd	rsi, edx
; Line 989
	movapd	xmm1, xmm8
	movapd	xmm0, xmm8
	movsdx	xmm9, QWORD PTR [r10+rsi*8]
	mulsd	xmm0, xmm7
	subsd	xmm1, xmm9
	movapd	xmm6, xmm9
	comisd	xmm0, xmm1
	jbe	SHORT $LN19@solve_l2r_@2
; Line 990
	mulsd	xmm6, xmm14
$LN19@solve_l2r_@2:
; Line 991
	movd	xmm13, r9d
	movapd	xmm7, xmm8
	movapd	xmm0, xmm6
	subsd	xmm7, xmm6
	cvtdq2pd xmm13, xmm13
	divsd	xmm0, xmm7
	movapd	xmm11, xmm13
	movsdx	QWORD PTR tv1583[rsp], xmm13
	mulsd	xmm11, xmm2
	call	log
	movapd	xmm1, xmm6
	subsd	xmm1, xmm9
	movapd	xmm5, xmm0
	mulsd	xmm1, xmm10
	addsd	xmm1, xmm11
	addsd	xmm5, xmm1
; Line 992
	movsdx	xmm1, QWORD PTR Gmax$1$[rsp]
	movapd	xmm0, xmm5
	andpd	xmm0, QWORD PTR __mask@@AbsDouble@
	comisd	xmm1, xmm0
	ja	SHORT $LN56@solve_l2r_@2
	movsdx	QWORD PTR Gmax$1$[rsp], xmm0
$LN56@solve_l2r_@2:
	movsdx	xmm13, QWORD PTR __mask@@AbsDouble@
; Line 996
	xor	ebx, ebx
	npad	7
$LL18@solve_l2r_@2:
; Line 999
	movapd	xmm0, xmm5
	andpd	xmm0, xmm13
	comisd	xmm15, xmm0
	ja	SHORT $LN72@solve_l2r_@2
; Line 1001
	movapd	xmm0, xmm8
; Line 1002
	movapd	xmm1, xmm6
	divsd	xmm0, xmm7
	divsd	xmm0, xmm6
	addsd	xmm0, xmm10
	divsd	xmm5, xmm0
	subsd	xmm1, xmm5
; Line 1003
	comisd	xmm12, xmm1
	jb	SHORT $LN15@solve_l2r_@2
; Line 1004
	mulsd	xmm6, xmm14
; Line 1005
	jmp	SHORT $LN14@solve_l2r_@2
$LN15@solve_l2r_@2:
; Line 1006
	movapd	xmm6, xmm1
$LN14@solve_l2r_@2:
; Line 1007
	movapd	xmm7, xmm8
	movapd	xmm0, xmm6
	subsd	xmm7, xmm6
	divsd	xmm0, xmm7
	call	log
; Line 1009
	inc	ebx
	inc	r15d
	cmp	ebx, 100				; 00000064H
	movapd	xmm5, xmm0
	movapd	xmm0, xmm6
	subsd	xmm0, xmm9
	mulsd	xmm0, xmm10
	addsd	xmm0, xmm11
	addsd	xmm5, xmm0
	jle	SHORT $LL18@solve_l2r_@2
$LN72@solve_l2r_@2:
; Line 1012
	movsdx	xmm13, QWORD PTR tv1583[rsp]
	test	ebx, ebx
	jle	SHORT $LN24@solve_l2r_@2
; Line 1014
	mov	rcx, QWORD PTR alpha$1$[rsp]
; Line 1015
	movsxd	rax, edi
	subsd	xmm8, xmm6
	movsdx	QWORD PTR [rcx+rsi*8], xmm6
	movsdx	QWORD PTR [rcx+rax*8], xmm8
; Line 1016
	mov	rax, QWORD PTR prob$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR [rax+r12*8]
; Line 1017
	mov	edx, DWORD PTR [rcx]
	cmp	edx, -1
	je	SHORT $LN24@solve_l2r_@2
	subsd	xmm6, xmm9
	movsx	eax, r14b
	movd	xmm0, eax
	mulsd	xmm6, xmm13
	cvtdq2pd xmm0, xmm0
	mulsd	xmm6, xmm0
	npad	1
$LL12@solve_l2r_@2:
; Line 1019
	movsxd	rax, edx
; Line 1020
	add	rcx, 16
	movapd	xmm0, xmm6
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [rbp+rax*8-8]
	movsdx	QWORD PTR [rbp+rax*8-8], xmm0
	mov	edx, DWORD PTR [rcx]
	cmp	edx, -1
	jne	SHORT $LL12@solve_l2r_@2
$LN24@solve_l2r_@2:
; Line 962
	mov	rsi, QWORD PTR $T10176[rsp]
	movsdx	xmm7, QWORD PTR __real@3fe0000000000000
	mov	r12, QWORD PTR index$1$[rsp]
	mov	rdi, QWORD PTR y$1$[rsp]
	inc	r13
	cmp	r13, rsi
	jl	$LL25@solve_l2r_@2
	movsdx	xmm6, QWORD PTR Gmax$1$[rsp]
	movsdx	xmm8, QWORD PTR eps$[rsp]
	xor	r14d, r14d
$LN23@solve_l2r_@2:
; Line 1025
	mov	ebx, DWORD PTR iter$1$[rsp]
; Line 1026
	mov	eax, 1717986919				; 66666667H
	inc	ebx
	mov	DWORD PTR iter$1$[rsp], ebx
	imul	ebx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	ecx, DWORD PTR [rdx+rdx*4]
	add	ecx, ecx
	cmp	ebx, ecx
	jne	SHORT $LN10@solve_l2r_@2
; Line 1027
	lea	rcx, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
	call	?info@@YAXPEBDZZ			; info
$LN10@solve_l2r_@2:
; Line 1029
	comisd	xmm8, xmm6
	ja	SHORT $LN73@solve_l2r_@2
; Line 1032
	mov	eax, 1717986919				; 66666667H
	imul	DWORD PTR l$1$[rsp]
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	cmp	r15d, edx
	jge	SHORT $LN60@solve_l2r_@2
; Line 1033
	movsdx	xmm8, QWORD PTR innereps_min$1$[rsp]
	mulsd	xmm15, xmm14
	comisd	xmm8, xmm15
	jbe	SHORT $LN59@solve_l2r_@2
	movapd	xmm15, xmm8
	movsdx	xmm8, QWORD PTR eps$[rsp]
	jmp	SHORT $LN60@solve_l2r_@2
$LN59@solve_l2r_@2:
	movsdx	xmm8, QWORD PTR eps$[rsp]
$LN60@solve_l2r_@2:
	cmp	ebx, 1000				; 000003e8H
	mov	rdi, QWORD PTR y$1$[rsp]
	jl	$LL125@solve_l2r_@2
$LN73@solve_l2r_@2:
; Line 1037
	lea	rcx, OFFSET FLAT:??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@
	mov	edx, ebx
	call	?info@@YAXPEBDZZ			; info
; Line 1038
	cmp	ebx, 1000				; 000003e8H
	mov	r13, QWORD PTR [rsp+288]
	movaps	xmm15, XMMWORD PTR [rsp+128]
	movaps	xmm14, XMMWORD PTR [rsp+144]
	movaps	xmm13, XMMWORD PTR [rsp+160]
	movaps	xmm11, XMMWORD PTR [rsp+192]
	movaps	xmm10, XMMWORD PTR [rsp+208]
	jl	SHORT $LN7@solve_l2r_@2
; Line 1039
	lea	rcx, OFFSET FLAT:??_C@_0FG@CDJGODIK@?6WARNING?3?5reaching?5max?5number?5of@
	call	?info@@YAXPEBDZZ			; info
$LN7@solve_l2r_@2:
; Line 1044
	mov	r8, QWORD PTR $T10177[rsp]
	mov	rax, r14
	cmp	r8, 4
	jl	SHORT $LC85@solve_l2r_@2
	lea	rdx, QWORD PTR [r8-4]
	lea	rcx, QWORD PTR [rbp+16]
	shr	rdx, 2
	inc	rdx
; Line 1047
	lea	rax, QWORD PTR [rdx*4]
	npad	4
$LL86@solve_l2r_@2:
	movsdx	xmm0, QWORD PTR [rcx-16]
	movsdx	xmm1, QWORD PTR [rcx-8]
	movsdx	xmm2, QWORD PTR [rcx]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	movsdx	xmm3, QWORD PTR [rcx+8]
	addsd	xmm0, xmm12
	add	rcx, 32					; 00000020H
	sub	rdx, 1
	mulsd	xmm3, xmm3
	movapd	xmm12, xmm0
	addsd	xmm12, xmm1
	addsd	xmm12, xmm2
	addsd	xmm12, xmm3
	jne	SHORT $LL86@solve_l2r_@2
$LC85@solve_l2r_@2:
; Line 1044
	cmp	rax, r8
	jge	SHORT $LN84@solve_l2r_@2
$LC6@solve_l2r_@2:
; Line 1045
	movsdx	xmm0, QWORD PTR [rbp+rax*8]
; Line 1047
	inc	rax
	cmp	rax, r8
	mulsd	xmm0, xmm0
	addsd	xmm12, xmm0
	jl	SHORT $LC6@solve_l2r_@2
$LN84@solve_l2r_@2:
	mov	rbp, QWORD PTR [rsp+360]
; Line 1046
	mulsd	xmm12, xmm7
; Line 1047
	test	rsi, rsi
	jle	SHORT $LN124@solve_l2r_@2
	mov	r15, QWORD PTR alpha$1$[rsp]
	mov	rdi, QWORD PTR y$1$[rsp]
	mov	rbx, r15
	npad	15
$LL3@solve_l2r_@2:
; Line 1049
	movsx	rax, BYTE PTR [r14+rdi]
	movsdx	xmm0, QWORD PTR [rbx]
	movsdx	xmm8, QWORD PTR upper_bound$[rsp+rax*8+8]
	call	log
	movapd	xmm9, xmm0
	movsdx	xmm0, QWORD PTR [rbx+8]
	mulsd	xmm9, QWORD PTR [rbx]
	call	log
	mulsd	xmm0, QWORD PTR [rbx+8]
	addsd	xmm9, xmm0
	movapd	xmm0, xmm8
	call	log
	inc	r14
	add	rbx, 16
	cmp	r14, rsi
	mulsd	xmm0, xmm8
	subsd	xmm9, xmm0
	addsd	xmm12, xmm9
	jl	SHORT $LL3@solve_l2r_@2
; Line 962
	jmp	SHORT $LN1@solve_l2r_@2
$LN124@solve_l2r_@2:
	mov	rdi, QWORD PTR y$1$[rsp]
	mov	r15, QWORD PTR alpha$1$[rsp]
$LN1@solve_l2r_@2:
; Line 1050
	movapd	xmm1, xmm12
	lea	rcx, OFFSET FLAT:??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@
	movd	rdx, xmm1
	call	?info@@YAXPEBDZZ			; info
; Line 1052
	mov	rcx, QWORD PTR xTx$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1053
	mov	rcx, r15
	call	??3@YAXPEAX@Z				; operator delete
; Line 1054
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
; Line 1055
	mov	rcx, r12
	call	??3@YAXPEAX@Z				; operator delete
; Line 1056
	lea	r11, QWORD PTR [rsp+296]
	movaps	xmm9, XMMWORD PTR [rsp+224]
	movaps	xmm6, XMMWORD PTR [r11-24]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm12, XMMWORD PTR [r11-120]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z ENDP	; solve_l2r_lr_dual
_TEXT	ENDS
PUBLIC	??_C@_0BN@PBJOFKCC@?$CDnonzeros?1?$CDfeatures?5?$DN?5?$CFd?1?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_01IPJKGB@?$CD?$AA@			; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z DD imagerel ?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z
	DD	imagerel ?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z+2505
	DD	imagerel $unwind$?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z DD 01e6201H
	DD	07f862H
	DD	08e85cH
	DD	09d854H
	DD	0ac84cH
	DD	0bb844H
	DD	0ca83cH
	DD	0d9834H
	DD	0e882cH
	DD	0f7827H
	DD	0106823H
	DD	023011fH
	DD	0e016f018H
	DD	0c012d014H
	DD	0600f7010H
	DD	0300d500eH
xdata	ENDS
;	COMDAT ??_C@_0BN@PBJOFKCC@?$CDnonzeros?1?$CDfeatures?5?$DN?5?$CFd?1?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BN@PBJOFKCC@?$CDnonzeros?1?$CDfeatures?5?$DN?5?$CFd?1?$CFd?6?$AA@ DB '#'
	DB	'nonzeros/#features = %d/%d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01IPJKGB@?$CD?$AA@
CONST	SEGMENT
??_C@_01IPJKGB@?$CD?$AA@ DB '#', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z
_TEXT	SEGMENT
iter$1$ = 32
w_size$1$ = 36
index$1$ = 40
$T10357 = 48
C$ = 56
xj_sq$1$ = 80
Gmax_old$1$ = 88
b$1$ = 96
active_size$1$ = 352
prob_col$ = 352
w$ = 360
eps$ = 368
l$1$ = 376
Cp$ = 376
Gmax_init$ = 384
loss_old$ = 384
Cn$ = 384
?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z PROC	; solve_l1r_l2_svc, COMDAT
; Line 1078
	mov	rax, rsp
	movsdx	QWORD PTR [rax+24], xmm2
	mov	QWORD PTR [rax+16], rdx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 280				; 00000118H
; Line 1079
	movaps	XMMWORD PTR [rax-88], xmm6
	movaps	XMMWORD PTR [rax-104], xmm7
; Line 1080
	movaps	XMMWORD PTR [rax-120], xmm8
	movaps	XMMWORD PTR [rax-136], xmm9
	movaps	XMMWORD PTR [rax-152], xmm10
; Line 1095
	movaps	XMMWORD PTR [rax-168], xmm11
	movaps	XMMWORD PTR [rax-184], xmm12
	movaps	XMMWORD PTR [rax-200], xmm13
	movaps	XMMWORD PTR [rax-216], xmm14
	movaps	XMMWORD PTR [rsp+112], xmm15
; Line 1079
	movsxd	rbx, DWORD PTR [rcx]
	mov	r13, rcx
; Line 1080
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	r15, rdx
	movapd	xmm6, xmm3
	mov	DWORD PTR w_size$1$[rsp], ecx
; Line 1083
	mov	DWORD PTR active_size$1$[rsp], ecx
; Line 1095
	mov	rdi, rcx
	movapd	xmm9, xmm2
	mov	QWORD PTR $T10357[rsp], rcx
	xor	r14d, r14d
	mov	DWORD PTR l$1$[rsp], ebx
	mov	DWORD PTR iter$1$[rsp], r14d
	mov	rax, QWORD PTR __imp__HUGE
	movsdx	xmm0, QWORD PTR [rax]
	mov	eax, 4
	movsdx	QWORD PTR Gmax_old$1$[rsp], xmm0
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 1096
	mov	rcx, rbx
	mov	rbp, rbx
	mov	rsi, rax
	mov	QWORD PTR index$1$[rsp], rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	r12, rax
; Line 1097
	mov	rcx, -1
	mov	eax, 8
	mul	rbx
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 1098
	mov	rcx, -1
	mov	rbx, rax
	mov	QWORD PTR b$1$[rsp], rax
	mov	eax, 8
	mul	rdi
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdx, r14
	mov	QWORD PTR xj_sq$1$[rsp], rax
; Line 1101
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	xorpd	xmm7, xmm7
	movsdx	QWORD PTR C$[rsp+16], xmm6
	movsdx	QWORD PTR C$[rsp], xmm0
	movsdx	QWORD PTR C$[rsp+8], xmm7
; Line 1103
	test	rbp, rbp
	jle	SHORT $LN76@solve_l1r_
	mov	rdi, 4607182418800017408		; 3ff0000000000000H
	lea	r8d, QWORD PTR [r14+1]
	npad	12
$LL78@solve_l1r_:
; Line 1105
	mov	QWORD PTR [rbx+rdx*8], rdi
; Line 1106
	mov	rax, QWORD PTR [r13+8]
	or	ecx, -1					; ffffffffH
	cmp	DWORD PTR [rax+rdx*4], r14d
	cmovg	ecx, r8d
	inc	rdx
	cmp	rdx, rbp
	mov	BYTE PTR [rdx+r12-1], cl
	jl	SHORT $LL78@solve_l1r_
	mov	rax, QWORD PTR xj_sq$1$[rsp]
$LN76@solve_l1r_:
; Line 1111
	mov	r11, QWORD PTR $T10357[rsp]
	mov	r9d, r14d
	mov	r8, r14
	test	r11, r11
	jle	$LN97@solve_l1r_
; Line 1113
	mov	r10, r15
	mov	rdi, rax
	sub	r10, rax
	npad	14
$LL73@solve_l1r_:
	mov	QWORD PTR [r10+rdi], r14
; Line 1114
	mov	DWORD PTR [rsi+r8*4], r9d
; Line 1115
	mov	QWORD PTR [rdi], r14
; Line 1116
	mov	rax, QWORD PTR [r13+16]
	mov	rdx, QWORD PTR [rax+r8*8]
; Line 1117
	cmp	DWORD PTR [rdx], -1
	je	SHORT $LN72@solve_l1r_
	npad	8
$LL70@solve_l1r_:
; Line 1120
	movsdx	xmm2, QWORD PTR [rdx+8]
	mov	eax, DWORD PTR [rdx]
; Line 1123
	add	rdx, 16
	dec	eax
	movapd	xmm1, xmm2
	movsxd	rcx, eax
	movsx	eax, BYTE PTR [rcx+r12]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, xmm2
	movsdx	QWORD PTR [rdx-8], xmm0
	movsx	rax, BYTE PTR [rcx+r12]
	mulsd	xmm1, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm1, xmm2
	addsd	xmm1, QWORD PTR [rdi]
	movsdx	QWORD PTR [rdi], xmm1
	cmp	DWORD PTR [rdx], -1
	jne	SHORT $LL70@solve_l1r_
$LN72@solve_l1r_:
; Line 1111
	inc	r8
	inc	r9d
	add	rdi, 8
	cmp	r8, r11
	jl	SHORT $LL73@solve_l1r_
$LN97@solve_l1r_:
; Line 1083
	movsdx	xmm12, QWORD PTR __mask@@AbsDouble@
	movsdx	xmm13, QWORD PTR __mask@@NegDouble@
	movsdx	xmm5, QWORD PTR __real@4000000000000000
	mov	r15, r11
	movsdx	xmm15, QWORD PTR __real@3d719799812dea11
	movsdx	xmm8, QWORD PTR __real@3ff0000000000000
	movsdx	xmm11, QWORD PTR __real@3fe0000000000000
	movsdx	xmm10, QWORD PTR loss_old$[rsp]
	npad	9
$LL68@solve_l1r_:
; Line 1129
	movapd	xmm14, xmm7
; Line 1131
	mov	ebp, r14d
	mov	rdi, r14
	test	r15, r15
	jle	SHORT $LN64@solve_l1r_
	mov	esi, DWORD PTR active_size$1$[rsp]
	mov	rbx, QWORD PTR index$1$[rsp]
	npad	4
$LL66@solve_l1r_:
; Line 1133
	call	QWORD PTR __imp_rand
	inc	rdi
	cdq
	idiv	esi
; Line 1134
	mov	eax, DWORD PTR [rbx+rdi*4-4]
	dec	esi
	add	edx, ebp
	inc	ebp
	cmp	rdi, r15
	movsxd	rdx, edx
	mov	ecx, DWORD PTR [rbx+rdx*4]
	mov	DWORD PTR [rbx+rdx*4], eax
	mov	DWORD PTR [rbx+rdi*4-4], ecx
	jl	SHORT $LL66@solve_l1r_
	movsdx	xmm5, QWORD PTR __real@4000000000000000
	mov	rbx, QWORD PTR b$1$[rsp]
$LN64@solve_l1r_:
; Line 1137
	mov	rsi, r14
	test	r15, r15
	jle	$LN61@solve_l1r_
	mov	rbp, QWORD PTR w$[rsp]
	npad	7
$LL63@solve_l1r_:
; Line 1143
	mov	rax, QWORD PTR [r13+16]
	mov	rdx, QWORD PTR index$1$[rsp]
	movapd	xmm9, xmm7
	movsxd	r8, DWORD PTR [rdx+rsi*4]
	movapd	xmm4, xmm7
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 1144
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN59@solve_l1r_
	npad	15
$LL60@solve_l1r_:
; Line 1146
	dec	eax
; Line 1147
	movsxd	rdx, eax
	movsdx	xmm0, QWORD PTR [rbx+rdx*8]
	comisd	xmm0, xmm7
	jbe	SHORT $LN58@solve_l1r_
; Line 1150
	movsx	rax, BYTE PTR [rdx+r12]
	movsdx	xmm2, QWORD PTR [rcx+8]
	mulsd	xmm2, QWORD PTR C$[rsp+rax*8+8]
; Line 1151
	movapd	xmm1, xmm2
; Line 1152
	mulsd	xmm2, QWORD PTR [rcx+8]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm7
	addsd	xmm4, xmm2
	subsd	xmm0, xmm1
	addsd	xmm9, xmm0
$LN58@solve_l1r_:
	mov	eax, DWORD PTR [rcx+16]
; Line 1154
	add	rcx, 16
	cmp	eax, -1
	jne	SHORT $LL60@solve_l1r_
	mov	rdx, QWORD PTR index$1$[rsp]
$LN59@solve_l1r_:
; Line 1159
	mulsd	xmm4, xmm5
	mulsd	xmm9, xmm5
; Line 1160
	comisd	xmm4, xmm15
	ja	SHORT $LN86@solve_l1r_
	movapd	xmm4, xmm15
$LN86@solve_l1r_:
; Line 1165
	movsdx	xmm5, QWORD PTR [rbp+r8*8]
	movapd	xmm6, xmm9
	movapd	xmm3, xmm9
	ucomisd	xmm5, xmm7
	addsd	xmm6, xmm8
	subsd	xmm3, xmm8
	movapd	xmm1, xmm7
	jp	SHORT $LN57@solve_l1r_
	jne	SHORT $LN57@solve_l1r_
; Line 1167
	comisd	xmm7, xmm6
	jbe	SHORT $LN56@solve_l1r_
; Line 1168
	movapd	xmm1, xmm6
	xorpd	xmm1, xmm13
	jmp	SHORT $LN49@solve_l1r_
$LN56@solve_l1r_:
; Line 1169
	comisd	xmm3, xmm7
	jbe	SHORT $LN54@solve_l1r_
; Line 1170
	movapd	xmm1, xmm3
	jmp	SHORT $LN49@solve_l1r_
$LN54@solve_l1r_:
; Line 1171
	movd	xmm0, DWORD PTR l$1$[rsp]
	movsdx	xmm2, QWORD PTR Gmax_old$1$[rsp]
	cvtdq2pd xmm0, xmm0
	divsd	xmm2, xmm0
	comisd	xmm6, xmm2
	jbe	SHORT $LN49@solve_l1r_
	xorpd	xmm2, xmm13
	comisd	xmm2, xmm3
	jbe	SHORT $LN49@solve_l1r_
; Line 1174
	mov	ecx, DWORD PTR [rdx+rsi*4]
	mov	eax, DWORD PTR [rdx+r15*4-4]
	dec	DWORD PTR active_size$1$[rsp]
	dec	r15
	mov	DWORD PTR [rdx+rsi*4], eax
; Line 1175
	dec	rsi
	mov	DWORD PTR [rdx+r15*4], ecx
; Line 1176
	jmp	$LN62@solve_l1r_
$LN57@solve_l1r_:
; Line 1179
	comisd	xmm5, xmm7
	jbe	SHORT $LN50@solve_l1r_
; Line 1180
	movapd	xmm1, xmm6
; Line 1181
	jmp	SHORT $LN143@solve_l1r_
$LN50@solve_l1r_:
; Line 1182
	movapd	xmm1, xmm3
$LN143@solve_l1r_:
	andpd	xmm1, xmm12
$LN49@solve_l1r_:
; Line 1184
	comisd	xmm14, xmm1
	ja	SHORT $LN92@solve_l1r_
	movapd	xmm14, xmm1
$LN92@solve_l1r_:
; Line 1187
	movapd	xmm0, xmm5
	mulsd	xmm0, xmm4
	comisd	xmm0, xmm6
	jb	SHORT $LN48@solve_l1r_
; Line 1188
	divsd	xmm6, xmm4
	jmp	SHORT $LN144@solve_l1r_
$LN48@solve_l1r_:
; Line 1189
	comisd	xmm3, xmm0
	jb	SHORT $LN46@solve_l1r_
; Line 1190
	movapd	xmm6, xmm3
	divsd	xmm6, xmm4
; Line 1191
	jmp	SHORT $LN144@solve_l1r_
$LN46@solve_l1r_:
; Line 1192
	movapd	xmm6, xmm5
$LN144@solve_l1r_:
	xorpd	xmm6, xmm13
; Line 1194
	movapd	xmm0, xmm6
	andpd	xmm0, xmm12
	comisd	xmm15, xmm0
	ja	$LN62@solve_l1r_
; Line 1197
	movapd	xmm8, xmm5
	andpd	xmm5, xmm12
	movapd	xmm0, xmm6
	mulsd	xmm0, xmm9
; Line 1200
	mov	edi, r14d
	addsd	xmm8, xmm6
	movapd	xmm4, xmm7
	andpd	xmm8, xmm12
	subsd	xmm8, xmm5
	addsd	xmm8, xmm0
	npad	15
$LL43@solve_l1r_:
; Line 1203
	movsdx	xmm0, QWORD PTR [rbp+r8*8]
; Line 1205
	mov	rax, QWORD PTR xj_sq$1$[rsp]
	movapd	xmm1, xmm6
	movapd	xmm5, xmm0
	subsd	xmm4, xmm6
	mulsd	xmm1, QWORD PTR [rax+r8*8]
; Line 1221
	mov	rax, QWORD PTR [r13+16]
	andpd	xmm0, xmm12
	mulsd	xmm1, xmm6
	addsd	xmm5, xmm6
	andpd	xmm5, xmm12
	subsd	xmm5, xmm0
	movapd	xmm0, xmm8
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	subsd	xmm5, xmm0
	movapd	xmm0, xmm6
	mulsd	xmm0, xmm9
	addsd	xmm1, xmm0
	addsd	xmm1, xmm5
	comisd	xmm7, xmm1
	jae	$LN111@solve_l1r_
	movapd	xmm3, xmm7
	test	edi, edi
	jne	SHORT $LN37@solve_l1r_
	mov	rdx, QWORD PTR [rax+r8*8]
	movapd	xmm10, xmm7
; Line 1222
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	je	$LN30@solve_l1r_
$LL36@solve_l1r_:
; Line 1224
	dec	eax
; Line 1225
	movsxd	rcx, eax
	movsdx	xmm2, QWORD PTR [rbx+rcx*8]
	comisd	xmm2, xmm7
	jbe	SHORT $LN34@solve_l1r_
; Line 1226
	movsx	rax, BYTE PTR [rcx+r12]
	movapd	xmm0, xmm2
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm2
	addsd	xmm10, xmm0
$LN34@solve_l1r_:
; Line 1227
	movapd	xmm1, xmm4
	mulsd	xmm1, QWORD PTR [rdx+8]
	addsd	xmm1, xmm2
; Line 1229
	comisd	xmm1, xmm7
	movsdx	QWORD PTR [rbx+rcx*8], xmm1
	jbe	SHORT $LN33@solve_l1r_
; Line 1230
	movsx	rax, BYTE PTR [rcx+r12]
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm1
	addsd	xmm3, xmm0
$LN33@solve_l1r_:
	mov	eax, DWORD PTR [rdx+16]
; Line 1231
	add	rdx, 16
	cmp	eax, -1
	jne	SHORT $LL36@solve_l1r_
; Line 1234
	jmp	SHORT $LN30@solve_l1r_
$LN37@solve_l1r_:
; Line 1237
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 1238
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN30@solve_l1r_
$LL31@solve_l1r_:
; Line 1240
	dec	eax
; Line 1241
	movapd	xmm1, xmm4
	movsxd	rdx, eax
	mulsd	xmm1, QWORD PTR [rcx+8]
	addsd	xmm1, QWORD PTR [rbx+rdx*8]
; Line 1243
	comisd	xmm1, xmm7
	movsdx	QWORD PTR [rbx+rdx*8], xmm1
	jbe	SHORT $LN29@solve_l1r_
; Line 1244
	movsx	rax, BYTE PTR [rdx+r12]
	movapd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm1
	addsd	xmm3, xmm0
$LN29@solve_l1r_:
	mov	eax, DWORD PTR [rcx+16]
; Line 1245
	add	rcx, 16
	cmp	eax, -1
	jne	SHORT $LL31@solve_l1r_
$LN30@solve_l1r_:
; Line 1249
	addsd	xmm3, xmm5
	subsd	xmm3, xmm10
; Line 1250
	comisd	xmm7, xmm3
	jae	SHORT $LN38@solve_l1r_
	inc	edi
; Line 1254
	movapd	xmm4, xmm6
; Line 1256
	mulsd	xmm8, xmm11
	cmp	edi, 20
	mulsd	xmm6, xmm11
	jl	$LL43@solve_l1r_
; Line 1290
	jmp	SHORT $LN38@solve_l1r_
$LN111@solve_l1r_:
; Line 1208
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 1209
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN38@solve_l1r_
	npad	10
$LL39@solve_l1r_:
; Line 1211
	cdqe
; Line 1212
	add	rcx, 16
	movapd	xmm0, xmm4
	mulsd	xmm0, QWORD PTR [rcx-8]
	addsd	xmm0, QWORD PTR [rbx+rax*8-8]
	movsdx	QWORD PTR [rbx+rax*8-8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL39@solve_l1r_
$LN38@solve_l1r_:
; Line 1263
	cmp	edi, 20
	addsd	xmm6, QWORD PTR [rbp+r8*8]
	movsdx	QWORD PTR [rbp+r8*8], xmm6
	jl	$LN141@solve_l1r_
; Line 1265
	lea	rcx, OFFSET FLAT:??_C@_01IPJKGB@?$CD?$AA@
	call	?info@@YAXPEBDZZ			; info
; Line 1266
	movsxd	rax, DWORD PTR l$1$[rsp]
	mov	rcx, rax
	test	eax, eax
	jle	SHORT $LN25@solve_l1r_
	mov	rax, 4607182418800017408		; 3ff0000000000000H
	mov	rdi, rbx
	rep stosq
$LN25@solve_l1r_:
; Line 1269
	mov	r11, QWORD PTR $T10357[rsp]
	mov	rdi, r14
	test	r11, r11
	jle	SHORT $LN141@solve_l1r_
	mov	rdx, rbp
$LL22@solve_l1r_:
; Line 1271
	movsdx	xmm0, QWORD PTR [rdx]
	ucomisd	xmm0, xmm7
	jp	SHORT $LN139@solve_l1r_
	je	SHORT $LN21@solve_l1r_
$LN139@solve_l1r_:
; Line 1272
	mov	rax, QWORD PTR [r13+16]
	mov	rcx, QWORD PTR [rax+rdi*8]
; Line 1273
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN21@solve_l1r_
	npad	1
$LL18@solve_l1r_:
; Line 1275
	movsdx	xmm1, QWORD PTR [rcx+8]
	cdqe
; Line 1276
	add	rcx, 16
	movsdx	xmm0, QWORD PTR [rbx+rax*8-8]
	mulsd	xmm1, QWORD PTR [rdx]
	subsd	xmm0, xmm1
	movsdx	QWORD PTR [rbx+rax*8-8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL18@solve_l1r_
$LN21@solve_l1r_:
; Line 1269
	inc	rdi
	add	rdx, 8
	cmp	rdi, r11
	jl	SHORT $LL22@solve_l1r_
$LN141@solve_l1r_:
; Line 1083
	movsdx	xmm8, QWORD PTR __real@3ff0000000000000
$LN62@solve_l1r_:
; Line 1137
	movsdx	xmm5, QWORD PTR __real@4000000000000000
	inc	rsi
	cmp	rsi, r15
	jl	$LL63@solve_l1r_
	movsdx	xmm9, QWORD PTR eps$[rsp]
$LN61@solve_l1r_:
; Line 1282
	mov	edi, DWORD PTR iter$1$[rsp]
	test	edi, edi
	jne	SHORT $LN142@solve_l1r_
; Line 1283
	movapd	xmm6, xmm14
	movsdx	QWORD PTR Gmax_init$[rsp], xmm6
	jmp	SHORT $LN16@solve_l1r_
$LN142@solve_l1r_:
	movsdx	xmm6, QWORD PTR Gmax_init$[rsp]
$LN16@solve_l1r_:
; Line 1284
	inc	edi
; Line 1285
	mov	eax, 1717986919				; 66666667H
	mov	DWORD PTR iter$1$[rsp], edi
	imul	edi
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	ecx, DWORD PTR [rdx+rdx*4]
	add	ecx, ecx
	cmp	edi, ecx
	jne	SHORT $LN15@solve_l1r_
; Line 1286
	lea	rcx, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
	call	?info@@YAXPEBDZZ			; info
$LN15@solve_l1r_:
; Line 1290
	mov	rbp, QWORD PTR $T10357[rsp]
	movapd	xmm0, xmm6
	mulsd	xmm0, xmm9
	comisd	xmm0, xmm14
	jb	SHORT $LN12@solve_l1r_
	cmp	r15, rbp
	je	SHORT $LN113@solve_l1r_
; Line 1294
	mov	eax, ebp
; Line 1295
	lea	rcx, OFFSET FLAT:??_C@_01NBENCBCI@?$CK?$AA@
	mov	r15, rbp
	mov	DWORD PTR active_size$1$[rsp], eax
	call	?info@@YAXPEBDZZ			; info
; Line 1296
	mov	rdx, QWORD PTR __imp__HUGE
	movsdx	xmm9, QWORD PTR [rdx]
	movsdx	QWORD PTR Gmax_old$1$[rsp], xmm9
; Line 1297
	movsdx	xmm9, QWORD PTR eps$[rsp]
	jmp	SHORT $LN127@solve_l1r_
$LN12@solve_l1r_:
; Line 1301
	movsdx	QWORD PTR Gmax_old$1$[rsp], xmm14
$LN127@solve_l1r_:
; Line 1127
	cmp	edi, 1000				; 000003e8H
	movsdx	xmm5, QWORD PTR __real@4000000000000000
	jl	$LL68@solve_l1r_
$LN113@solve_l1r_:
; Line 1304
	lea	rcx, OFFSET FLAT:??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@
	mov	edx, edi
	call	?info@@YAXPEBDZZ			; info
; Line 1305
	cmp	edi, 1000				; 000003e8H
	jl	SHORT $LN11@solve_l1r_
; Line 1306
	lea	rcx, OFFSET FLAT:??_C@_0CN@INEBNJKC@?6WARNING?3?5reaching?5max?5number?5of@
	call	?info@@YAXPEBDZZ			; info
$LN11@solve_l1r_:
; Line 1310
	movapd	xmm3, xmm7
; Line 1311
	mov	esi, r14d
	mov	rdi, r14
; Line 1312
	test	rbp, rbp
	jle	SHORT $LN8@solve_l1r_
	mov	r15, QWORD PTR w$[rsp]
	npad	5
$LL10@solve_l1r_:
; Line 1314
	mov	rax, QWORD PTR [r13+16]
	mov	rdx, QWORD PTR [rax+rdi*8]
; Line 1315
	cmp	DWORD PTR [rdx], -1
	je	SHORT $LN6@solve_l1r_
	npad	3
$LL7@solve_l1r_:
; Line 1317
	movsxd	rcx, DWORD PTR [rdx]
	mov	rax, QWORD PTR [r13+8]
; Line 1318
	add	rdx, 16
	movd	xmm0, DWORD PTR [rax+rcx*4-4]
	cvtdq2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR [rdx-8]
	movsdx	QWORD PTR [rdx-8], xmm0
	cmp	DWORD PTR [rdx], -1
	jne	SHORT $LL7@solve_l1r_
$LN6@solve_l1r_:
; Line 1320
	movsdx	xmm0, QWORD PTR [r15+rdi*8]
	ucomisd	xmm0, xmm7
	jp	SHORT $LN138@solve_l1r_
	je	SHORT $LN9@solve_l1r_
$LN138@solve_l1r_:
; Line 1322
	andpd	xmm0, xmm12
; Line 1323
	inc	esi
	addsd	xmm3, xmm0
$LN9@solve_l1r_:
	inc	rdi
	cmp	rdi, rbp
	jl	SHORT $LL10@solve_l1r_
$LN8@solve_l1r_:
; Line 1326
	movsxd	rax, DWORD PTR l$1$[rsp]
	cmp	rax, 4
	mov	rbp, rax
	jl	$LC132@solve_l1r_
	lea	rdx, QWORD PTR [rax-3]
; Line 1327
	lea	rcx, QWORD PTR [rbx+16]
$LL137@solve_l1r_:
	movsdx	xmm0, QWORD PTR [rcx-16]
	comisd	xmm0, xmm7
	jbe	SHORT $LN133@solve_l1r_
; Line 1328
	movsx	rax, BYTE PTR [r14+r12]
	movapd	xmm1, xmm0
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm1
	addsd	xmm3, xmm0
$LN133@solve_l1r_:
	movsdx	xmm0, QWORD PTR [rcx-8]
	comisd	xmm0, xmm7
	jbe	SHORT $LN134@solve_l1r_
	movsx	rax, BYTE PTR [r14+r12+1]
	movapd	xmm1, xmm0
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm1
	addsd	xmm3, xmm0
$LN134@solve_l1r_:
	movsdx	xmm0, QWORD PTR [rcx]
	comisd	xmm0, xmm7
	jbe	SHORT $LN135@solve_l1r_
	movsx	rax, BYTE PTR [r14+r12+2]
	movapd	xmm1, xmm0
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm1
	addsd	xmm3, xmm0
$LN135@solve_l1r_:
	movsdx	xmm0, QWORD PTR [rcx+8]
	comisd	xmm0, xmm7
	jbe	SHORT $LN136@solve_l1r_
	movsx	rax, BYTE PTR [r14+r12+3]
	movapd	xmm1, xmm0
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm1
	addsd	xmm3, xmm0
$LN136@solve_l1r_:
	add	r14, 4
	add	rcx, 32					; 00000020H
	cmp	r14, rdx
	jl	$LL137@solve_l1r_
$LC132@solve_l1r_:
; Line 1326
	cmp	r14, rbp
	jge	SHORT $LN131@solve_l1r_
$LC4@solve_l1r_:
; Line 1327
	movsdx	xmm0, QWORD PTR [rbx+r14*8]
	comisd	xmm0, xmm7
	jbe	SHORT $LN3@solve_l1r_
; Line 1328
	movsx	rax, BYTE PTR [r14+r12]
	movapd	xmm2, xmm0
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mulsd	xmm0, xmm2
	addsd	xmm3, xmm0
$LN3@solve_l1r_:
	inc	r14
	cmp	r14, rbp
	jl	SHORT $LC4@solve_l1r_
$LN131@solve_l1r_:
; Line 1330
	movapd	xmm1, xmm3
	lea	rcx, OFFSET FLAT:??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@
	movd	rdx, xmm1
	call	?info@@YAXPEBDZZ			; info
; Line 1331
	mov	r8d, DWORD PTR w_size$1$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BN@PBJOFKCC@?$CDnonzeros?1?$CDfeatures?5?$DN?5?$CFd?1?$CFd?6?$AA@
	mov	edx, esi
	call	?info@@YAXPEBDZZ			; info
; Line 1333
	mov	rcx, QWORD PTR index$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1334
	mov	rcx, r12
	call	??3@YAXPEAX@Z				; operator delete
; Line 1335
	mov	rcx, rbx
	call	??3@YAXPEAX@Z				; operator delete
; Line 1336
	mov	rcx, QWORD PTR xj_sq$1$[rsp]
; Line 1337
	lea	r11, QWORD PTR [rsp+280]
	movaps	xmm15, XMMWORD PTR [rsp+112]
	movaps	xmm6, XMMWORD PTR [r11-24]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm9, XMMWORD PTR [r11-72]
	movaps	xmm10, XMMWORD PTR [r11-88]
	movaps	xmm11, XMMWORD PTR [r11-104]
	movaps	xmm12, XMMWORD PTR [r11-120]
	movaps	xmm13, XMMWORD PTR [r11-136]
	movaps	xmm14, XMMWORD PTR [r11-152]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	jmp	??3@YAXPEAX@Z				; operator delete
?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z ENDP	; solve_l1r_l2_svc
_TEXT	ENDS
PUBLIC	__real@c024000000000000
;	COMDAT pdata
pdata	SEGMENT
$pdata$?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z DD imagerel ?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z
	DD	imagerel ?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z+3212
	DD	imagerel $unwind$?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z DD 01e6901H
	DD	0df869H
	DD	0ee861H
	DD	0fd859H
	DD	010c851H
	DD	011b849H
	DD	012a841H
	DD	0139839H
	DD	0148831H
	DD	015782cH
	DD	0166828H
	DD	02f0124H
	DD	0e01bf01dH
	DD	0c017d019H
	DD	060147015H
	DD	030125013H
xdata	ENDS
;	COMDAT __real@c024000000000000
CONST	SEGMENT
__real@c024000000000000 DQ 0c024000000000000r	; -10
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z
_TEXT	SEGMENT
active_size$1$ = 32
$T10589 = 40
index$1$ = 48
xjneg_sum$1$ = 56
w_size$1$ = 64
$T10588 = 72
$T10596 = 80
sum1$1$ = 88
exp_wTx$1$ = 88
$T10590 = 96
Gmax_new$1$ = 104
xj_max$1$ = 112
l$1$ = 120
C_sum$1$ = 128
exp_wTx_new$1$ = 136
Gmax_old$1$ = 144
x_min$1$ = 152
C$ = 160
xjpos_sum$1$ = 184
Gmax_init$ = 192
iter$1$ = 448
prob_col$ = 448
w$ = 456
eps$ = 464
Cp$ = 472
$T10587 = 480
Cn$ = 480
?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z PROC		; solve_l1r_lr, COMDAT
; Line 1359
	mov	rax, rsp
	movsdx	QWORD PTR [rax+32], xmm3
	movsdx	QWORD PTR [rax+24], xmm2
	mov	QWORD PTR [rax+16], rdx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 376				; 00000178H
; Line 1360
	movaps	XMMWORD PTR [rax-88], xmm6
	movaps	XMMWORD PTR [rax-104], xmm7
; Line 1362
	movaps	XMMWORD PTR [rax-120], xmm8
	movaps	XMMWORD PTR [rax-136], xmm9
	movaps	XMMWORD PTR [rax-152], xmm10
; Line 1377
	movaps	XMMWORD PTR [rax-168], xmm11
	movaps	XMMWORD PTR [rax-184], xmm12
	movaps	XMMWORD PTR [rax-200], xmm13
	movaps	XMMWORD PTR [rax-216], xmm14
	movaps	XMMWORD PTR [rax-232], xmm15
; Line 1360
	movsxd	rdi, DWORD PTR [rcx]
	mov	r15, rcx
; Line 1361
	movsxd	rcx, DWORD PTR [rcx+4]
; Line 1362
	xor	ebp, ebp
	movapd	xmm7, xmm3
	mov	DWORD PTR w_size$1$[rsp], ecx
; Line 1364
	mov	DWORD PTR active_size$1$[rsp], ecx
; Line 1377
	mov	rbx, rcx
	mov	QWORD PTR $T10589[rsp], rcx
	mov	rsi, -1
	mov	DWORD PTR l$1$[rsp], edi
	movapd	xmm11, xmm2
	mov	QWORD PTR $T10596[rsp], rbp
	mov	DWORD PTR iter$1$[rsp], ebp
	xorpd	xmm14, xmm14
	mov	rax, QWORD PTR __imp__HUGE
	movapd	xmm6, xmm14
	movsdx	QWORD PTR x_min$1$[rsp], xmm6
	movsdx	xmm0, QWORD PTR [rax]
	mov	eax, 4
	movsdx	QWORD PTR Gmax_old$1$[rsp], xmm0
	mul	rcx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 1378
	mov	rcx, rdi
	mov	r13, rdi
	mov	r12, rax
	mov	QWORD PTR index$1$[rsp], rax
	mov	QWORD PTR $T10590[rsp], rdi
	call	??2@YAPEAX_K@Z				; operator new
	mov	r14, rax
; Line 1379
	mov	eax, 8
	mul	rdi
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax
	mov	QWORD PTR exp_wTx$1$[rsp], rax
; Line 1380
	mov	eax, 8
	mul	r13
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR exp_wTx_new$1$[rsp], rax
; Line 1381
	mov	eax, 8
	mul	rbx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR xj_max$1$[rsp], rax
; Line 1382
	mov	eax, 8
	mul	rbx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR C_sum$1$[rsp], rax
; Line 1383
	mov	eax, 8
	mul	rbx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR xjneg_sum$1$[rsp], rax
; Line 1384
	mov	eax, 8
	mul	rbx
	cmovo	rax, rsi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	r8, rax
	mov	QWORD PTR xjpos_sum$1$[rsp], rax
; Line 1387
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	movsdx	QWORD PTR C$[rsp], xmm0
	movsdx	QWORD PTR C$[rsp+8], xmm14
	movsdx	QWORD PTR C$[rsp+16], xmm7
	mov	rdx, rbp
; Line 1389
	test	r13, r13
	jle	SHORT $LN75@solve_l1r_@2
	mov	r9, 4607182418800017408			; 3ff0000000000000H
	lea	r10d, QWORD PTR [rbp+1]
	npad	5
$LL77@solve_l1r_@2:
; Line 1391
	mov	QWORD PTR [rdi+rdx*8], r9
; Line 1392
	mov	rax, QWORD PTR [r15+8]
	or	ecx, -1					; ffffffffH
	cmp	DWORD PTR [rax+rdx*4], ebp
	cmovg	ecx, r10d
	inc	rdx
	cmp	rdx, r13
	mov	BYTE PTR [rdx+r14-1], cl
	jl	SHORT $LL77@solve_l1r_@2
$LN75@solve_l1r_@2:
; Line 1397
	mov	r9, QWORD PTR $T10589[rsp]
	mov	esi, ebp
	mov	rbx, rbp
	test	r9, r9
	jle	$LN112@solve_l1r_@2
	mov	rax, QWORD PTR xj_max$1$[rsp]
; Line 1399
	mov	rbp, QWORD PTR w$[rsp]
	mov	r11, QWORD PTR C_sum$1$[rsp]
	mov	r9, QWORD PTR xjneg_sum$1$[rsp]
	mov	rdi, QWORD PTR $T10589[rsp]
	mov	r10, r8
	sub	rbp, rax
	sub	r11, rax
	sub	r10, rax
	sub	r9, rax
	mov	rcx, rax
	xor	r13d, r13d
	npad	10
$LL72@solve_l1r_@2:
	mov	QWORD PTR [rcx+rbp], r13
; Line 1400
	mov	DWORD PTR [r12+rbx*4], esi
; Line 1401
	mov	QWORD PTR [rcx], r13
; Line 1402
	mov	QWORD PTR [r11+rcx], r13
; Line 1403
	mov	QWORD PTR [r9+rcx], r13
; Line 1404
	mov	QWORD PTR [r10+rcx], r13
; Line 1405
	mov	rax, QWORD PTR [r15+16]
	mov	r8, QWORD PTR [rax+rbx*8]
; Line 1406
	mov	eax, DWORD PTR [r8]
	cmp	eax, -1
	je	$LN71@solve_l1r_@2
	npad	5
$LL69@solve_l1r_@2:
; Line 1409
	movsdx	xmm1, QWORD PTR [r8+8]
	dec	eax
; Line 1410
	comisd	xmm1, xmm6
	ja	SHORT $LN83@solve_l1r_@2
	movapd	xmm6, xmm1
$LN83@solve_l1r_@2:
; Line 1411
	movsdx	xmm0, QWORD PTR [rcx]
	comisd	xmm0, xmm1
	ja	SHORT $LN87@solve_l1r_@2
	movapd	xmm0, xmm1
$LN87@solve_l1r_@2:
	movsdx	QWORD PTR [rcx], xmm0
; Line 1412
	movsxd	rdx, eax
	movsx	rax, BYTE PTR [rdx+r14]
	movsdx	xmm0, QWORD PTR C$[rsp+rax*8+8]
	addsd	xmm0, QWORD PTR [r11+rcx]
	movsdx	QWORD PTR [r11+rcx], xmm0
; Line 1413
	cmp	BYTE PTR [rdx+r14], -1
; Line 1414
	movsx	rax, BYTE PTR [rdx+r14]
	mulsd	xmm1, QWORD PTR C$[rsp+rax*8+8]
	jne	SHORT $LN67@solve_l1r_@2
	addsd	xmm1, QWORD PTR [r9+rcx]
	movsdx	QWORD PTR [r9+rcx], xmm1
; Line 1415
	jmp	SHORT $LN66@solve_l1r_@2
$LN67@solve_l1r_@2:
; Line 1416
	addsd	xmm1, QWORD PTR [r10+rcx]
	movsdx	QWORD PTR [r10+rcx], xmm1
$LN66@solve_l1r_@2:
	mov	eax, DWORD PTR [r8+16]
; Line 1417
	add	r8, 16
	cmp	eax, -1
	jne	SHORT $LL69@solve_l1r_@2
	movsdx	QWORD PTR x_min$1$[rsp], xmm6
$LN71@solve_l1r_@2:
; Line 1397
	inc	rbx
	inc	esi
	add	rcx, 8
	cmp	rbx, rdi
	jl	$LL72@solve_l1r_@2
	mov	rdi, QWORD PTR exp_wTx$1$[rsp]
	mov	r13, QWORD PTR $T10590[rsp]
	mov	r9, QWORD PTR $T10589[rsp]
$LN112@solve_l1r_@2:
	movsdx	xmm8, QWORD PTR __mask@@AbsDouble@
	movsdx	xmm10, QWORD PTR __mask@@NegDouble@
	movsdx	xmm7, QWORD PTR __real@3ff0000000000000
	mov	r12, r9
	mov	QWORD PTR $T10587[rsp], r9
	xor	esi, esi
	movsdx	xmm9, QWORD PTR __real@3fe0000000000000
	npad	9
$LL65@solve_l1r_@2:
; Line 1423
	movsdx	QWORD PTR Gmax_new$1$[rsp], xmm14
	movapd	xmm13, xmm14
; Line 1425
	mov	ebp, esi
	mov	rbx, rsi
	test	r12, r12
	jle	SHORT $LN61@solve_l1r_@2
	mov	esi, DWORD PTR active_size$1$[rsp]
	mov	r13, QWORD PTR index$1$[rsp]
	npad	1
$LL63@solve_l1r_@2:
; Line 1427
	call	QWORD PTR __imp_rand
	inc	rbx
	cdq
	idiv	esi
; Line 1428
	mov	eax, DWORD PTR [r13+rbx*4-4]
	dec	esi
	add	edx, ebp
	inc	ebp
	cmp	rbx, r12
	movsxd	r8, edx
	mov	ecx, DWORD PTR [r13+r8*4]
	mov	DWORD PTR [r13+r8*4], eax
	mov	DWORD PTR [r13+rbx*4-4], ecx
	jl	SHORT $LL63@solve_l1r_@2
	mov	r13, QWORD PTR $T10590[rsp]
	xor	esi, esi
$LN61@solve_l1r_@2:
; Line 1431
	mov	rbx, QWORD PTR $T10587[rsp]
	mov	rbp, rsi
	mov	QWORD PTR $T10588[rsp], rsi
	test	rbx, rbx
	jle	$LN58@solve_l1r_@2
	mov	r8, QWORD PTR index$1$[rsp]
	npad	13
$LL60@solve_l1r_@2:
; Line 1438
	mov	rax, QWORD PTR [r15+16]
	movsxd	r12, DWORD PTR [r8+rbp*4]
	movsdx	QWORD PTR sum1$1$[rsp], xmm14
	mov	rdx, QWORD PTR [rax+r12*8]
	movapd	xmm12, xmm14
	movapd	xmm15, xmm14
	movapd	xmm4, xmm14
; Line 1439
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	je	SHORT $LN56@solve_l1r_@2
	npad	7
$LL57@solve_l1r_@2:
; Line 1443
	movsdx	xmm3, QWORD PTR [rdx+8]
	dec	eax
; Line 1449
	add	rdx, 16
	movsxd	rcx, eax
	movsx	rax, BYTE PTR [rcx+r14]
	movsdx	xmm0, QWORD PTR [rdi+rcx*8]
	addsd	xmm0, xmm7
	divsd	xmm3, xmm0
	movapd	xmm0, xmm3
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mov	eax, DWORD PTR [rdx]
	movapd	xmm1, xmm0
	addsd	xmm15, xmm0
	mulsd	xmm1, QWORD PTR [rdi+rcx*8]
	addsd	xmm12, xmm1
	mulsd	xmm1, xmm3
	addsd	xmm4, xmm1
	cmp	eax, -1
	jne	SHORT $LL57@solve_l1r_@2
	movsdx	QWORD PTR sum1$1$[rsp], xmm12
$LN56@solve_l1r_@2:
; Line 1452
	mov	rax, QWORD PTR xjneg_sum$1$[rsp]
; Line 1456
	movapd	xmm1, xmm14
	movsdx	xmm6, QWORD PTR [rax+r12*8]
; Line 1457
	mov	rax, QWORD PTR w$[rsp]
	subsd	xmm6, xmm15
	movsdx	xmm5, QWORD PTR [rax+r12*8]
	movapd	xmm11, xmm6
	movapd	xmm2, xmm6
	ucomisd	xmm5, xmm14
	addsd	xmm11, xmm7
	subsd	xmm2, xmm7
	jp	SHORT $LN55@solve_l1r_@2
	jne	SHORT $LN55@solve_l1r_@2
; Line 1459
	comisd	xmm14, xmm11
	jbe	SHORT $LN54@solve_l1r_@2
; Line 1460
	movapd	xmm1, xmm11
	xorpd	xmm1, xmm10
	jmp	SHORT $LN47@solve_l1r_@2
$LN54@solve_l1r_@2:
; Line 1461
	comisd	xmm2, xmm14
	jbe	SHORT $LN52@solve_l1r_@2
; Line 1462
	movapd	xmm1, xmm2
	jmp	SHORT $LN47@solve_l1r_@2
$LN52@solve_l1r_@2:
; Line 1463
	movd	xmm0, DWORD PTR l$1$[rsp]
	movsdx	xmm3, QWORD PTR Gmax_old$1$[rsp]
	cvtdq2pd xmm0, xmm0
	divsd	xmm3, xmm0
	comisd	xmm11, xmm3
	jbe	SHORT $LN47@solve_l1r_@2
	xorpd	xmm3, xmm10
	comisd	xmm3, xmm2
	jbe	SHORT $LN47@solve_l1r_@2
; Line 1466
	mov	ecx, DWORD PTR [r8+rbp*4]
	mov	eax, DWORD PTR [r8+rbx*4-4]
	dec	DWORD PTR active_size$1$[rsp]
	dec	rbx
	mov	DWORD PTR [r8+rbp*4], eax
; Line 1467
	dec	rbp
	mov	DWORD PTR [r8+rbx*4], ecx
	mov	QWORD PTR $T10587[rsp], rbx
; Line 1468
	jmp	$LN59@solve_l1r_@2
$LN55@solve_l1r_@2:
; Line 1471
	comisd	xmm5, xmm14
	jbe	SHORT $LN48@solve_l1r_@2
; Line 1472
	movapd	xmm1, xmm11
; Line 1473
	jmp	SHORT $LN166@solve_l1r_@2
$LN48@solve_l1r_@2:
; Line 1474
	movapd	xmm1, xmm2
$LN166@solve_l1r_@2:
	andpd	xmm1, xmm8
$LN47@solve_l1r_@2:
; Line 1476
	comisd	xmm13, xmm1
	ja	SHORT $LN95@solve_l1r_@2
	movsdx	QWORD PTR Gmax_new$1$[rsp], xmm1
$LN95@solve_l1r_@2:
; Line 1479
	movapd	xmm0, xmm5
	mulsd	xmm0, xmm4
	comisd	xmm0, xmm11
	jb	SHORT $LN46@solve_l1r_@2
; Line 1480
	divsd	xmm11, xmm4
	jmp	SHORT $LN167@solve_l1r_@2
$LN46@solve_l1r_@2:
; Line 1481
	comisd	xmm2, xmm0
	jb	SHORT $LN44@solve_l1r_@2
; Line 1482
	movapd	xmm11, xmm2
	divsd	xmm11, xmm4
; Line 1483
	jmp	SHORT $LN167@solve_l1r_@2
$LN44@solve_l1r_@2:
; Line 1484
	movapd	xmm11, xmm5
$LN167@solve_l1r_@2:
; Line 1486
	movsdx	xmm1, QWORD PTR __real@3d719799812dea11
	xorpd	xmm11, xmm10
	movapd	xmm0, xmm11
	andpd	xmm0, xmm8
	comisd	xmm1, xmm0
	ja	$LN59@solve_l1r_@2
; Line 1489
	movsdx	xmm0, QWORD PTR __real@c024000000000000
	comisd	xmm11, xmm0
	jbe	SHORT $LN98@solve_l1r_@2
	movsdx	xmm0, QWORD PTR __real@4024000000000000
	comisd	xmm0, xmm11
	ja	SHORT $LN153@solve_l1r_@2
$LN98@solve_l1r_@2:
	movapd	xmm11, xmm0
$LN153@solve_l1r_@2:
; Line 1491
	movapd	xmm13, xmm5
	andpd	xmm5, xmm8
	movapd	xmm0, xmm11
	mulsd	xmm0, xmm6
; Line 1493
	mov	r13d, esi
	addsd	xmm13, xmm11
	andpd	xmm13, xmm8
	subsd	xmm13, xmm5
	addsd	xmm13, xmm0
	npad	12
$LL41@solve_l1r_@2:
; Line 1495
	movsdx	xmm0, QWORD PTR [rax+r12*8]
	movapd	xmm10, xmm0
	addsd	xmm10, xmm11
	andpd	xmm0, xmm8
	andpd	xmm10, xmm8
	subsd	xmm10, xmm0
	movapd	xmm0, xmm13
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	subsd	xmm10, xmm0
; Line 1497
	movsdx	xmm0, QWORD PTR x_min$1$[rsp]
	comisd	xmm0, xmm14
	jb	$LN165@solve_l1r_@2
; Line 1499
	mov	rax, QWORD PTR xj_max$1$[rsp]
	movsdx	xmm8, QWORD PTR [rax+r12*8]
	movapd	xmm0, xmm8
	mulsd	xmm0, xmm11
	call	exp
; Line 1500
	movsdx	xmm1, QWORD PTR __real@3ff0000000000000
	mov	rax, QWORD PTR C_sum$1$[rsp]
	movapd	xmm6, xmm0
	subsd	xmm0, xmm1
	movsdx	xmm9, QWORD PTR [rax+r12*8]
	mulsd	xmm0, xmm12
	divsd	xmm0, xmm8
	movapd	xmm7, xmm9
	divsd	xmm0, xmm9
	addsd	xmm0, xmm1
	call	log
	mov	rax, QWORD PTR xjpos_sum$1$[rsp]
	movapd	xmm1, xmm11
	movapd	xmm12, xmm0
	mulsd	xmm1, QWORD PTR [rax+r12*8]
	mulsd	xmm12, xmm7
	addsd	xmm12, xmm10
	subsd	xmm12, xmm1
; Line 1501
	movsdx	xmm1, QWORD PTR __real@3ff0000000000000
	movapd	xmm0, xmm1
	divsd	xmm0, xmm6
	subsd	xmm0, xmm1
	mulsd	xmm0, xmm15
	divsd	xmm0, xmm8
	divsd	xmm0, xmm7
	movapd	xmm7, xmm1
	addsd	xmm0, xmm1
	call	log
	mov	rax, QWORD PTR xjneg_sum$1$[rsp]
	movapd	xmm1, xmm11
	mulsd	xmm0, xmm9
	mulsd	xmm1, QWORD PTR [rax+r12*8]
	addsd	xmm0, xmm10
	addsd	xmm0, xmm1
; Line 1502
	comisd	xmm0, xmm12
	ja	SHORT $LN107@solve_l1r_@2
	movapd	xmm12, xmm0
$LN107@solve_l1r_@2:
	comisd	xmm14, xmm12
	jae	$LN126@solve_l1r_@2
	movsdx	xmm12, QWORD PTR sum1$1$[rsp]
	movsdx	xmm8, QWORD PTR __mask@@AbsDouble@
	movsdx	xmm9, QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN37@solve_l1r_@2
$LN165@solve_l1r_@2:
; Line 1452
	mov	rax, QWORD PTR xjneg_sum$1$[rsp]
$LN37@solve_l1r_@2:
; Line 1514
	movapd	xmm0, xmm11
	mulsd	xmm0, QWORD PTR [rax+r12*8]
; Line 1517
	mov	rax, QWORD PTR [r15+16]
	mov	rsi, QWORD PTR [rax+r12*8]
	addsd	xmm10, xmm0
; Line 1518
	mov	eax, DWORD PTR [rsi]
	cmp	eax, -1
	je	SHORT $LN33@solve_l1r_@2
; Line 1514
	mov	rbp, QWORD PTR exp_wTx_new$1$[rsp]
	npad	4
$LL34@solve_l1r_@2:
; Line 1521
	movapd	xmm0, xmm11
	lea	ebx, DWORD PTR [rax-1]
	mulsd	xmm0, QWORD PTR [rsi+8]
	call	exp
; Line 1522
	movsxd	rbx, ebx
	movapd	xmm1, xmm0
	movapd	xmm5, xmm0
	mulsd	xmm1, QWORD PTR [rdi+rbx*8]
; Line 1523
	movapd	xmm0, xmm1
	addsd	xmm5, xmm1
	movsdx	QWORD PTR [rbp], xmm1
	addsd	xmm0, xmm7
	divsd	xmm0, xmm5
	call	log
	movsx	rax, BYTE PTR [rbx+r14]
; Line 1524
	add	rsi, 16
	add	rbp, 8
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
	mov	eax, DWORD PTR [rsi]
	addsd	xmm10, xmm0
	cmp	eax, -1
	jne	SHORT $LL34@solve_l1r_@2
$LN33@solve_l1r_@2:
; Line 1527
	comisd	xmm14, xmm10
	jae	SHORT $LN127@solve_l1r_@2
	inc	r13d
; Line 1541
	mulsd	xmm11, xmm9
; Line 1542
	mulsd	xmm13, xmm9
	cmp	r13d, 20
	jge	$LN30@solve_l1r_@2
; Line 1493
	mov	rax, QWORD PTR w$[rsp]
	jmp	$LL41@solve_l1r_@2
$LN126@solve_l1r_@2:
; Line 1504
	mov	rax, QWORD PTR [r15+16]
	mov	rsi, QWORD PTR [rax+r12*8]
; Line 1505
	mov	eax, DWORD PTR [rsi]
	cmp	eax, -1
	je	SHORT $LN30@solve_l1r_@2
	npad	8
$LL36@solve_l1r_@2:
; Line 1507
	movapd	xmm0, xmm11
	movsxd	rbx, eax
	mulsd	xmm0, QWORD PTR [rsi+8]
	call	exp
; Line 1508
	add	rsi, 16
	mulsd	xmm0, QWORD PTR [rdi+rbx*8-8]
	movsdx	QWORD PTR [rdi+rbx*8-8], xmm0
	mov	eax, DWORD PTR [rsi]
	cmp	eax, -1
	jne	SHORT $LL36@solve_l1r_@2
; Line 1510
	jmp	SHORT $LN30@solve_l1r_@2
$LN127@solve_l1r_@2:
; Line 1530
	mov	rax, QWORD PTR [r15+16]
	mov	rdx, QWORD PTR [rax+r12*8]
; Line 1531
	mov	eax, DWORD PTR [rdx]
	cmp	eax, -1
	je	SHORT $LN30@solve_l1r_@2
; Line 1529
	mov	r8, QWORD PTR exp_wTx_new$1$[rsp]
	npad	14
$LL31@solve_l1r_@2:
; Line 1534
	movsxd	rcx, eax
	mov	rax, QWORD PTR [r8]
; Line 1535
	add	rdx, 16
	mov	QWORD PTR [rdi+rcx*8-8], rax
	mov	eax, DWORD PTR [rdx]
	add	r8, 8
	cmp	eax, -1
	jne	SHORT $LL31@solve_l1r_@2
$LN30@solve_l1r_@2:
; Line 1549
	cmp	r13d, 20
	mov	rbx, QWORD PTR w$[rsp]
	addsd	xmm11, QWORD PTR [rbx+r12*8]
	movsdx	QWORD PTR [rbx+r12*8], xmm11
	jl	$LN161@solve_l1r_@2
; Line 1551
	lea	rcx, OFFSET FLAT:??_C@_01IPJKGB@?$CD?$AA@
	call	?info@@YAXPEBDZZ			; info
; Line 1552
	mov	r13, QWORD PTR $T10590[rsp]
	test	r13, r13
	jle	SHORT $LN27@solve_l1r_@2
	mov	r8, r13
	xor	edx, edx
	mov	rcx, rdi
	shl	r8, 3
	call	memset
$LN27@solve_l1r_@2:
; Line 1555
	mov	r9, QWORD PTR $T10589[rsp]
	xor	esi, esi
	mov	r8, rsi
	test	r9, r9
	jle	SHORT $LN22@solve_l1r_@2
	mov	rdx, rbx
$LL24@solve_l1r_@2:
; Line 1557
	movsdx	xmm0, QWORD PTR [rdx]
	ucomisd	xmm0, xmm14
	jp	SHORT $LN159@solve_l1r_@2
	je	SHORT $LN23@solve_l1r_@2
$LN159@solve_l1r_@2:
; Line 1558
	mov	rax, QWORD PTR [r15+16]
	mov	rcx, QWORD PTR [rax+r8*8]
; Line 1559
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	je	SHORT $LN23@solve_l1r_@2
	npad	3
$LL20@solve_l1r_@2:
; Line 1561
	movsdx	xmm0, QWORD PTR [rcx+8]
	cdqe
; Line 1562
	add	rcx, 16
	mulsd	xmm0, QWORD PTR [rdx]
	addsd	xmm0, QWORD PTR [rdi+rax*8-8]
	movsdx	QWORD PTR [rdi+rax*8-8], xmm0
	mov	eax, DWORD PTR [rcx]
	cmp	eax, -1
	jne	SHORT $LL20@solve_l1r_@2
$LN23@solve_l1r_@2:
; Line 1555
	inc	r8
	add	rdx, 8
	cmp	r8, r9
	jl	SHORT $LL24@solve_l1r_@2
$LN22@solve_l1r_@2:
; Line 1566
	mov	rbx, rsi
	test	r13, r13
	jle	SHORT $LN162@solve_l1r_@2
$LL18@solve_l1r_@2:
; Line 1567
	movsdx	xmm0, QWORD PTR [rdi+rbx*8]
	call	exp
	inc	rbx
	cmp	rbx, r13
	movsdx	QWORD PTR [rdi+rbx*8-8], xmm0
	jl	SHORT $LL18@solve_l1r_@2
; Line 1364
	jmp	SHORT $LN162@solve_l1r_@2
$LN161@solve_l1r_@2:
	mov	r13, QWORD PTR $T10590[rsp]
	xor	esi, esi
$LN162@solve_l1r_@2:
	movsdx	xmm8, QWORD PTR __mask@@AbsDouble@
	movsdx	xmm9, QWORD PTR __real@3fe0000000000000
	movsdx	xmm10, QWORD PTR __mask@@NegDouble@
	mov	rbp, QWORD PTR $T10588[rsp]
	mov	rbx, QWORD PTR $T10587[rsp]
	mov	r8, QWORD PTR index$1$[rsp]
$LN59@solve_l1r_@2:
; Line 1431
	movsdx	xmm13, QWORD PTR Gmax_new$1$[rsp]
	inc	rbp
	cmp	rbp, rbx
	mov	QWORD PTR $T10588[rsp], rbp
	jl	$LL60@solve_l1r_@2
	movsdx	xmm11, QWORD PTR eps$[rsp]
$LN58@solve_l1r_@2:
; Line 1571
	mov	r8d, DWORD PTR iter$1$[rsp]
	test	r8d, r8d
	jne	SHORT $LN163@solve_l1r_@2
; Line 1572
	movapd	xmm6, xmm13
	movsdx	QWORD PTR Gmax_init$[rsp], xmm6
	jmp	SHORT $LN15@solve_l1r_@2
$LN163@solve_l1r_@2:
	movsdx	xmm6, QWORD PTR Gmax_init$[rsp]
$LN15@solve_l1r_@2:
; Line 1573
	inc	r8d
; Line 1574
	mov	eax, 1717986919				; 66666667H
	mov	DWORD PTR iter$1$[rsp], r8d
	imul	r8d
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	lea	ecx, DWORD PTR [rdx+rdx*4]
	add	ecx, ecx
	cmp	r8d, ecx
	jne	SHORT $LN14@solve_l1r_@2
; Line 1575
	lea	rcx, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
	call	?info@@YAXPEBDZZ			; info
	mov	r8d, DWORD PTR iter$1$[rsp]
$LN14@solve_l1r_@2:
; Line 1579
	mov	rbp, QWORD PTR $T10589[rsp]
	movapd	xmm0, xmm6
	mulsd	xmm0, xmm11
	comisd	xmm0, xmm13
	jb	SHORT $LN11@solve_l1r_@2
	cmp	rbx, rbp
	je	SHORT $LN128@solve_l1r_@2
; Line 1583
	mov	eax, ebp
; Line 1584
	lea	rcx, OFFSET FLAT:??_C@_01NBENCBCI@?$CK?$AA@
	mov	r12, rbp
	mov	DWORD PTR active_size$1$[rsp], eax
	mov	QWORD PTR $T10587[rsp], rbp
	call	?info@@YAXPEBDZZ			; info
; Line 1585
	mov	r11, QWORD PTR __imp__HUGE
; Line 1586
	mov	r8d, DWORD PTR iter$1$[rsp]
	movsdx	xmm11, QWORD PTR [r11]
	movsdx	QWORD PTR Gmax_old$1$[rsp], xmm11
	movsdx	xmm11, QWORD PTR eps$[rsp]
	jmp	SHORT $LN143@solve_l1r_@2
$LN11@solve_l1r_@2:
	mov	r12, QWORD PTR $T10587[rsp]
; Line 1590
	movsdx	QWORD PTR Gmax_old$1$[rsp], xmm13
$LN143@solve_l1r_@2:
; Line 1421
	cmp	r8d, 1000				; 000003e8H
	jl	$LL65@solve_l1r_@2
$LN128@solve_l1r_@2:
; Line 1593
	lea	rcx, OFFSET FLAT:??_C@_0CE@EGOGEIIO@?6optimization?5finished?0?5?$CDiter?5?$DN?5@
	mov	edx, r8d
	call	?info@@YAXPEBDZZ			; info
; Line 1594
	mov	eax, DWORD PTR iter$1$[rsp]
	cmp	eax, 1000				; 000003e8H
	jl	SHORT $LN10@solve_l1r_@2
; Line 1595
	lea	rcx, OFFSET FLAT:??_C@_0CN@INEBNJKC@?6WARNING?3?5reaching?5max?5number?5of@
	call	?info@@YAXPEBDZZ			; info
$LN10@solve_l1r_@2:
; Line 1601
	cmp	rbp, 4
	mov	r8, QWORD PTR w$[rsp]
	movapd	xmm6, xmm14
	mov	ebx, esi
	mov	rcx, rsi
	jl	$LC147@solve_l1r_@2
	lea	rdx, QWORD PTR [rbp-4]
	lea	rax, QWORD PTR [r8+16]
	shr	rdx, 2
	inc	rdx
; Line 1607
	lea	rcx, QWORD PTR [rdx*4]
$LL152@solve_l1r_@2:
	movsdx	xmm0, QWORD PTR [rax-16]
	ucomisd	xmm0, xmm14
	jp	SHORT $LN158@solve_l1r_@2
; Line 1602
	je	SHORT $LN148@solve_l1r_@2
$LN158@solve_l1r_@2:
; Line 1604
	andpd	xmm0, xmm8
; Line 1605
	inc	ebx
	addsd	xmm6, xmm0
$LN148@solve_l1r_@2:
	movsdx	xmm0, QWORD PTR [rax-8]
	ucomisd	xmm0, xmm14
	jp	SHORT $LN157@solve_l1r_@2
; Line 1602
	je	SHORT $LN149@solve_l1r_@2
$LN157@solve_l1r_@2:
; Line 1604
	andpd	xmm0, xmm8
; Line 1605
	inc	ebx
	addsd	xmm6, xmm0
$LN149@solve_l1r_@2:
	movsdx	xmm0, QWORD PTR [rax]
	ucomisd	xmm0, xmm14
	jp	SHORT $LN156@solve_l1r_@2
; Line 1602
	je	SHORT $LN150@solve_l1r_@2
$LN156@solve_l1r_@2:
; Line 1604
	andpd	xmm0, xmm8
; Line 1605
	inc	ebx
	addsd	xmm6, xmm0
$LN150@solve_l1r_@2:
	movsdx	xmm0, QWORD PTR [rax+8]
	ucomisd	xmm0, xmm14
	jp	SHORT $LN155@solve_l1r_@2
; Line 1602
	je	SHORT $LN151@solve_l1r_@2
$LN155@solve_l1r_@2:
; Line 1604
	andpd	xmm0, xmm8
; Line 1605
	inc	ebx
	addsd	xmm6, xmm0
$LN151@solve_l1r_@2:
	add	rax, 32					; 00000020H
; Line 1607
	sub	rdx, 1
	jne	SHORT $LL152@solve_l1r_@2
$LC147@solve_l1r_@2:
; Line 1601
	cmp	rcx, rbp
	jge	SHORT $LN146@solve_l1r_@2
$LC9@solve_l1r_@2:
; Line 1602
	movsdx	xmm0, QWORD PTR [r8+rcx*8]
	ucomisd	xmm0, xmm14
	jp	SHORT $LN154@solve_l1r_@2
	je	SHORT $LN8@solve_l1r_@2
$LN154@solve_l1r_@2:
; Line 1604
	andpd	xmm0, xmm8
; Line 1605
	inc	ebx
	addsd	xmm6, xmm0
$LN8@solve_l1r_@2:
; Line 1607
	inc	rcx
	cmp	rcx, rbp
	jl	SHORT $LC9@solve_l1r_@2
$LN146@solve_l1r_@2:
	test	r13, r13
	jle	SHORT $LN3@solve_l1r_@2
	movsdx	xmm8, QWORD PTR Cp$[rsp]
	npad	10
$LL5@solve_l1r_@2:
; Line 1608
	movzx	esi, BYTE PTR [rsi+r14]
	cmp	sil, 1
	jne	SHORT $LN2@solve_l1r_@2
; Line 1609
	mov	rsi, QWORD PTR $T10596[rsp]
	movapd	xmm0, xmm7
	divsd	xmm0, QWORD PTR [rdi+rsi*8]
	addsd	xmm0, xmm7
	call	log
	mulsd	xmm0, xmm8
; Line 1610
	jmp	SHORT $LN168@solve_l1r_@2
$LN2@solve_l1r_@2:
; Line 1611
	mov	rbp, QWORD PTR $T10596[rsp]
	movsdx	xmm0, QWORD PTR [rdi+rbp*8]
	addsd	xmm0, xmm7
	call	log
	movsx	rax, sil
	mov	rsi, rbp
	mulsd	xmm0, QWORD PTR C$[rsp+rax*8+8]
$LN168@solve_l1r_@2:
	inc	rsi
	addsd	xmm6, xmm0
	cmp	rsi, r13
	mov	QWORD PTR $T10596[rsp], rsi
	jl	SHORT $LL5@solve_l1r_@2
$LN3@solve_l1r_@2:
; Line 1613
	movapd	xmm1, xmm6
	lea	rcx, OFFSET FLAT:??_C@_0BH@BAFAONDB@Objective?5value?5?$DN?5?$CFlf?6?$AA@
	movd	rdx, xmm1
	call	?info@@YAXPEBDZZ			; info
; Line 1614
	mov	r8d, DWORD PTR w_size$1$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BN@PBJOFKCC@?$CDnonzeros?1?$CDfeatures?5?$DN?5?$CFd?1?$CFd?6?$AA@
	mov	edx, ebx
	call	?info@@YAXPEBDZZ			; info
; Line 1616
	mov	rcx, QWORD PTR index$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1617
	mov	rcx, r14
	call	??3@YAXPEAX@Z				; operator delete
; Line 1618
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
; Line 1619
	mov	rcx, QWORD PTR exp_wTx_new$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1620
	mov	rcx, QWORD PTR xj_max$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1621
	mov	rcx, QWORD PTR C_sum$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1622
	mov	rcx, QWORD PTR xjneg_sum$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1623
	mov	rcx, QWORD PTR xjpos_sum$1$[rsp]
; Line 1624
	lea	r11, QWORD PTR [rsp+376]
	movaps	xmm6, XMMWORD PTR [r11-24]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm9, XMMWORD PTR [r11-72]
	movaps	xmm10, XMMWORD PTR [r11-88]
	movaps	xmm11, XMMWORD PTR [r11-104]
	movaps	xmm12, XMMWORD PTR [r11-120]
	movaps	xmm13, XMMWORD PTR [r11-136]
	movaps	xmm14, XMMWORD PTR [r11-152]
	movaps	xmm15, XMMWORD PTR [r11-168]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	jmp	??3@YAXPEAX@Z				; operator delete
?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z ENDP		; solve_l1r_lr
_TEXT	ENDS
PUBLIC	??_C@_0BM@LOBICGJI@Error?3?5unknown?5solver_type?6?$AA@ ; `string'
EXTRN	??1TRON@@QEAA@XZ:PROC				; TRON::~TRON
EXTRN	?tron@TRON@@QEAAXPEAN@Z:PROC			; TRON::tron
EXTRN	?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z:PROC	; TRON::set_print_string
EXTRN	??0TRON@@QEAA@PEBVfunction@@NH@Z:PROC		; TRON::TRON
EXTRN	__ImageBase:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z DD imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+912
	DD	imagerel $unwind$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD imagerel ?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	imagerel ?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD imagerel ?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	imagerel ?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA+24
	DD	imagerel $unwind$?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD imagerel ?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	imagerel ?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA+27
	DD	imagerel $unwind$?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD imagerel ?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	imagerel ?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA+24
	DD	imagerel $unwind$?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z DD imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
	DD	0ffffffffH
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+119
	DD	00H
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+121
	DD	0ffffffffH
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+139
	DD	00H
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+171
	DD	0ffffffffH
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+220
	DD	01H
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+270
	DD	0ffffffffH
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+303
	DD	02H
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+335
	DD	0ffffffffH
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+384
	DD	03H
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+434
	DD	0ffffffffH
	DD	imagerel ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z+880
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z DD 0c2711H
	DD	067827H
	DD	076823H
	DD	016541fH
	DD	015341bH
	DD	0c007f20eH
	DD	060047005H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
	DD	00H
	DD	00H
	DD	0cH
	DD	imagerel $ip2state$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA
xdata	ENDS
;	COMDAT ??_C@_0BM@LOBICGJI@Error?3?5unknown?5solver_type?6?$AA@
CONST	SEGMENT
??_C@_0BM@LOBICGJI@Error?3?5unknown?5solver_type?6?$AA@ DB 'Error: unknow'
	DB	'n solver_type', 0aH, 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z
_TEXT	SEGMENT
$T10671 = 48
prob_col$7452 = 56
prob_col$7446 = 56
tron_obj$7440 = 56
tron_obj$7432 = 56
x_space$7453 = 160
x_space$7447 = 160
$T10619 = 160
$T10611 = 160
prob$ = 160
param$ = 168
w$ = 176
Cp$ = 184
Cn$ = 192
?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z PROC ; train_one, COMDAT
; Line 1742
	mov	rax, rsp
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 128				; 00000080H
	mov	QWORD PTR $T10671[rsp], -2
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rbp
	movaps	XMMWORD PTR [rax-40], xmm6
	movaps	XMMWORD PTR [rax-56], xmm7
	movapd	xmm6, xmm3
	mov	r12, r8
	mov	rsi, rcx
; Line 1743
	movsdx	xmm7, QWORD PTR [rdx+8]
; Line 1744
	xor	edi, edi
	mov	ebx, edi
; Line 1746
	mov	ebp, DWORD PTR [rcx]
	test	ebp, ebp
	jle	SHORT $LN12@train_one
; Line 1743
	mov	rax, QWORD PTR [rcx+8]
	mov	r9, rbp
$LL14@train_one:
; Line 1747
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN13@train_one
; Line 1748
	inc	ebx
$LN13@train_one:
; Line 1746
	add	rax, 4
	sub	r9, 1
	jne	SHORT $LL14@train_one
$LN12@train_one:
; Line 1749
	sub	ebp, ebx
; Line 1752
	movsxd	rax, DWORD PTR [rdx]
	cmp	eax, 7
	ja	$LN1@train_one
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN39@train_one[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN8@train_one:
; Line 1756
	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T10611[rsp], rax
	test	rax, rax
	je	SHORT $LN18@train_one
	movsdx	xmm3, QWORD PTR Cn$[rsp]
	movapd	xmm2, xmm6
	mov	rdx, rsi
	mov	rcx, rax
	call	??0l2r_lr_fun@@QEAA@PEBUproblem@@NN@Z	; l2r_lr_fun::l2r_lr_fun
	mov	rdi, rax
$LN18@train_one:
; Line 1757
	cmp	ebx, ebp
	cmovl	ebp, ebx
	movd	xmm2, ebp
	cvtdq2pd xmm2, xmm2
	mulsd	xmm2, xmm7
	movd	xmm0, DWORD PTR [rsi]
	cvtdq2pd xmm0, xmm0
	divsd	xmm2, xmm0
	mov	r9d, 1000				; 000003e8H
	mov	rdx, rdi
	lea	rcx, QWORD PTR tron_obj$7432[rsp]
	call	??0TRON@@QEAA@PEBVfunction@@NH@Z	; TRON::TRON
	npad	1
; Line 1758
	mov	rdx, QWORD PTR liblinear_print_string
	lea	rcx, QWORD PTR tron_obj$7432[rsp]
	call	?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z ; TRON::set_print_string
; Line 1759
	mov	rdx, r12
	lea	rcx, QWORD PTR tron_obj$7432[rsp]
	call	?tron@TRON@@QEAAXPEAN@Z			; TRON::tron
; Line 1760
	test	rdi, rdi
	je	SHORT $LN19@train_one
	mov	rax, QWORD PTR [rdi]
	mov	edx, 1
	mov	rcx, rdi
	call	QWORD PTR [rax+32]
	npad	1
$LN19@train_one:
; Line 1761
	lea	rcx, QWORD PTR tron_obj$7432[rsp]
	call	??1TRON@@QEAA@XZ			; TRON::~TRON
	jmp	$LN9@train_one
$LN7@train_one:
; Line 1765
	mov	ecx, 56					; 00000038H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T10619[rsp], rax
	test	rax, rax
	je	SHORT $LN22@train_one
	movsdx	xmm3, QWORD PTR Cn$[rsp]
	movapd	xmm2, xmm6
	mov	rdx, rsi
	mov	rcx, rax
	call	??0l2r_l2_svc_fun@@QEAA@PEBUproblem@@NN@Z ; l2r_l2_svc_fun::l2r_l2_svc_fun
	mov	rdi, rax
$LN22@train_one:
; Line 1766
	cmp	ebx, ebp
	cmovl	ebp, ebx
	movd	xmm2, ebp
	cvtdq2pd xmm2, xmm2
	mulsd	xmm2, xmm7
	movd	xmm0, DWORD PTR [rsi]
	cvtdq2pd xmm0, xmm0
	divsd	xmm2, xmm0
	mov	r9d, 1000				; 000003e8H
	mov	rdx, rdi
	lea	rcx, QWORD PTR tron_obj$7440[rsp]
	call	??0TRON@@QEAA@PEBVfunction@@NH@Z	; TRON::TRON
	npad	1
; Line 1767
	mov	rdx, QWORD PTR liblinear_print_string
	lea	rcx, QWORD PTR tron_obj$7440[rsp]
	call	?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z ; TRON::set_print_string
; Line 1768
	mov	rdx, r12
	lea	rcx, QWORD PTR tron_obj$7440[rsp]
	call	?tron@TRON@@QEAAXPEAN@Z			; TRON::tron
; Line 1769
	test	rdi, rdi
	je	SHORT $LN23@train_one
	mov	rax, QWORD PTR [rdi]
	mov	edx, 1
	mov	rcx, rdi
	call	QWORD PTR [rax+32]
	npad	1
$LN23@train_one:
; Line 1770
	lea	rcx, QWORD PTR tron_obj$7440[rsp]
	call	??1TRON@@QEAA@XZ			; TRON::~TRON
	jmp	$LN9@train_one
$LN6@train_one:
; Line 1773
	mov	DWORD PTR [rsp+40], 1
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movapd	xmm2, xmm7
	mov	rdx, r8
	mov	rcx, rsi
	call	?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z ; solve_l2r_l1l2_svc
; Line 1774
	jmp	$LN9@train_one
$LN5@train_one:
; Line 1776
	mov	DWORD PTR [rsp+40], 3
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movapd	xmm2, xmm7
	mov	rdx, r8
	mov	rcx, rsi
	call	?solve_l2r_l1l2_svc@@YAXPEBUproblem@@PEANNNNH@Z ; solve_l2r_l1l2_svc
; Line 1777
	jmp	$LN9@train_one
$LN4@train_one:
; Line 1781
	mov	QWORD PTR x_space$7447[rsp], rdi
; Line 1782
	lea	r8, QWORD PTR prob_col$7446[rsp]
	lea	rdx, QWORD PTR x_space$7447[rsp]
	mov	rcx, rsi
	call	?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z ; transpose
; Line 1783
	cmp	ebx, ebp
	cmovl	ebp, ebx
	movd	xmm2, ebp
	cvtdq2pd xmm2, xmm2
	mulsd	xmm2, xmm7
	movd	xmm0, DWORD PTR [rsi]
	cvtdq2pd xmm0, xmm0
	divsd	xmm2, xmm0
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movapd	xmm3, xmm6
	mov	rdx, r12
	lea	rcx, QWORD PTR prob_col$7446[rsp]
	call	?solve_l1r_l2_svc@@YAXPEAUproblem@@PEANNNN@Z ; solve_l1r_l2_svc
; Line 1784
	mov	rcx, QWORD PTR prob_col$7446[rsp+8]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1785
	mov	rcx, QWORD PTR prob_col$7446[rsp+16]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1786
	mov	rcx, QWORD PTR x_space$7447[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1787
	jmp	$LN9@train_one
$LN3@train_one:
; Line 1792
	mov	QWORD PTR x_space$7453[rsp], rdi
; Line 1793
	lea	r8, QWORD PTR prob_col$7452[rsp]
	lea	rdx, QWORD PTR x_space$7453[rsp]
	mov	rcx, rsi
	call	?transpose@@YAXPEBUproblem@@PEAPEAUfeature_node@@PEAU1@@Z ; transpose
; Line 1794
	cmp	ebx, ebp
	cmovl	ebp, ebx
	movd	xmm2, ebp
	cvtdq2pd xmm2, xmm2
	mulsd	xmm2, xmm7
	movd	xmm0, DWORD PTR [rsi]
	cvtdq2pd xmm0, xmm0
	divsd	xmm2, xmm0
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movapd	xmm3, xmm6
	mov	rdx, r12
	lea	rcx, QWORD PTR prob_col$7452[rsp]
	call	?solve_l1r_lr@@YAXPEBUproblem@@PEANNNN@Z ; solve_l1r_lr
; Line 1795
	mov	rcx, QWORD PTR prob_col$7452[rsp+8]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1796
	mov	rcx, QWORD PTR prob_col$7452[rsp+16]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1797
	mov	rcx, QWORD PTR x_space$7453[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 1798
	jmp	SHORT $LN9@train_one
$LN2@train_one:
; Line 1801
	movsdx	xmm0, QWORD PTR Cn$[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movapd	xmm2, xmm7
	mov	rdx, r8
	mov	rcx, rsi
	call	?solve_l2r_lr_dual@@YAXPEBUproblem@@PEANNNN@Z ; solve_l2r_lr_dual
; Line 1802
	jmp	SHORT $LN9@train_one
$LN1@train_one:
; Line 1804
	call	QWORD PTR __imp___iob_func
	lea	rdx, OFFSET FLAT:??_C@_0BM@LOBICGJI@Error?3?5unknown?5solver_type?6?$AA@
	lea	rcx, QWORD PTR [rax+96]
	call	QWORD PTR __imp_fprintf
$LN9@train_one:
; Line 1807
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	movaps	xmm6, XMMWORD PTR [rsp+112]
	movaps	xmm7, XMMWORD PTR [rsp+96]
	mov	rsp, r11
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
	npad	3
$LN39@train_one:
	DD	$LN8@train_one
	DD	$LN6@train_one
	DD	$LN7@train_one
	DD	$LN5@train_one
	DD	$LN1@train_one
	DD	$LN4@train_one
	DD	$LN3@train_one
	DD	$LN2@train_one
?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z ENDP ; train_one
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T10671 = 48
prob_col$7452 = 56
prob_col$7446 = 56
tron_obj$7440 = 56
tron_obj$7432 = 56
x_space$7453 = 160
x_space$7447 = 160
$T10619 = 160
$T10611 = 160
prob$ = 160
param$ = 168
w$ = 176
Cp$ = 184
Cn$ = 192
?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA PROC ; `train_one'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T10611[rbp]
	call	??3@YAXPEAX@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA ENDP ; `train_one'::`1'::dtor$0
; Function compile flags: /Ogtp
$T10671 = 48
prob_col$7452 = 56
prob_col$7446 = 56
tron_obj$7440 = 56
tron_obj$7432 = 56
x_space$7453 = 160
x_space$7447 = 160
$T10619 = 160
$T10611 = 160
prob$ = 160
param$ = 168
w$ = 176
Cp$ = 184
Cn$ = 192
?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA PROC ; `train_one'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR tron_obj$7432[rbp]
	call	??1TRON@@QEAA@XZ			; TRON::~TRON
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA ENDP ; `train_one'::`1'::dtor$1
; Function compile flags: /Ogtp
$T10671 = 48
prob_col$7452 = 56
prob_col$7446 = 56
tron_obj$7440 = 56
tron_obj$7432 = 56
x_space$7453 = 160
x_space$7447 = 160
$T10619 = 160
$T10611 = 160
prob$ = 160
param$ = 168
w$ = 176
Cp$ = 184
Cn$ = 192
?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA PROC ; `train_one'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T10619[rbp]
	call	??3@YAXPEAX@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA ENDP ; `train_one'::`1'::dtor$2
; Function compile flags: /Ogtp
$T10671 = 48
prob_col$7452 = 56
prob_col$7446 = 56
tron_obj$7440 = 56
tron_obj$7432 = 56
x_space$7453 = 160
x_space$7447 = 160
$T10619 = 160
$T10611 = 160
prob$ = 160
param$ = 168
w$ = 176
Cp$ = 184
Cn$ = 192
?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA PROC ; `train_one'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR tron_obj$7440[rbp]
	call	??1TRON@@QEAA@XZ			; TRON::~TRON
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z@4HA ENDP ; `train_one'::`1'::dtor$3
text$x	ENDS
PUBLIC	??_C@_0DK@GMBFOOBJ@WARNING?3?5class?5label?5?$CFd?5specifie@ ; `string'
PUBLIC	train
;	COMDAT pdata
pdata	SEGMENT
$pdata$train DD	imagerel $LN98
	DD	imagerel $LN98+1975
	DD	imagerel $unwind$train
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$train$dtor$0 DD imagerel train$dtor$0
	DD	imagerel train$dtor$0+27
	DD	imagerel $unwind$train$dtor$0
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$train DD imagerel train
	DD	0ffffffffH
	DD	imagerel train+1049
	DD	00H
	DD	imagerel train+1066
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$train$dtor$0 DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$train DD 0a2411H
	DD	01f0118H
	DD	0e00ff011H
	DD	0c00bd00dH
	DD	060087009H
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$train
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$train DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$train
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$train
	DD	0e0H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$train DD 0ffffffffH
	DD	imagerel train$dtor$0
xdata	ENDS
;	COMDAT ??_C@_0DK@GMBFOOBJ@WARNING?3?5class?5label?5?$CFd?5specifie@
CONST	SEGMENT
??_C@_0DK@GMBFOOBJ@WARNING?3?5class?5label?5?$CFd?5specifie@ DB 'WARNING:'
	DB	' class label %d specified in weight is not found', 0aH, 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT train
_TEXT	SEGMENT
sub_prob$ = 48
model_$1$ = 80
start$ = 88
label$ = 96
$T10796 = 104
x$1$ = 104
tv2132 = 112
tv2167 = 120
perm$1$ = 128
tv2134 = 136
tv2168 = 144
tv2174 = 152
tv2133 = 160
Solver$7526 = 168
$T10804 = 224
weighted_C$1$ = 320
nr_class$ = 320
prob$ = 320
param$ = 328
tv2135 = 336
count$ = 344
train	PROC						; COMDAT
; Line 1813
$LN98:
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 248				; 000000f8H
	mov	QWORD PTR $T10804[rsp], -2
	mov	rbx, rdx
	mov	r15, rcx
; Line 1815
	movsxd	r13, DWORD PTR [rcx]
; Line 1816
	movsxd	r14, DWORD PTR [rcx+4]
; Line 1818
	mov	ecx, 80					; 00000050H
	call	QWORD PTR __imp_malloc
	mov	r12, rax
	mov	QWORD PTR model_$1$[rsp], rax
; Line 1820
	movsdx	xmm0, QWORD PTR [r15+24]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jb	SHORT $LN54@train
; Line 1821
	lea	r8d, DWORD PTR [r14-1]
	mov	DWORD PTR [rax+52], r8d
; Line 1822
	jmp	SHORT $LN53@train
$LN54@train:
; Line 1823
	mov	DWORD PTR [rax+52], r14d
$LN53@train:
; Line 1824
	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR [r12], rax
	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR [r12+8], rax
	mov	rax, QWORD PTR [rbx+16]
	mov	QWORD PTR [r12+16], rax
	mov	rax, QWORD PTR [rbx+24]
	mov	QWORD PTR [r12+24], rax
	mov	rax, QWORD PTR [rbx+32]
	mov	QWORD PTR [r12+32], rax
	mov	rax, QWORD PTR [rbx+40]
	mov	QWORD PTR [r12+40], rax
; Line 1825
	movsdx	QWORD PTR [r12+72], xmm0
; Line 1828
	xor	edi, edi
	mov	QWORD PTR label$[rsp], rdi
; Line 1829
	mov	QWORD PTR start$[rsp], rdi
; Line 1830
	mov	QWORD PTR count$[rsp], rdi
; Line 1831
	mov	rbp, r13
	mov	QWORD PTR $T10796[rsp], r13
	lea	rcx, QWORD PTR [r13*4]
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR perm$1$[rsp], rax
; Line 1834
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR count$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR start$[rsp]
	lea	r8, QWORD PTR label$[rsp]
	lea	rdx, QWORD PTR nr_class$[rsp]
	mov	rcx, r15
	call	?group_classes@@YAXPEBUproblem@@PEAHPEAPEAH221@Z ; group_classes
; Line 1836
	mov	esi, DWORD PTR nr_class$[rsp]
	mov	DWORD PTR [r12+48], esi
; Line 1837
	movsxd	rax, esi
	mov	QWORD PTR tv2168[rsp], rax
	lea	rcx, QWORD PTR [rax*4]
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [r12+64], rax
; Line 1838
	test	esi, esi
	jle	SHORT $LN50@train
	mov	r8, QWORD PTR label$[rsp]
	sub	r8, rax
; Line 1824
	mov	rdx, rsi
	npad	12
$LL52@train:
; Line 1839
	mov	ecx, DWORD PTR [r8+rax]
	mov	DWORD PTR [rax], ecx
; Line 1838
	add	rax, 4
	sub	rdx, 1
	jne	SHORT $LL52@train
$LN50@train:
; Line 1842
	movsxd	rax, esi
	shl	rax, 3
	mov	QWORD PTR tv2167[rsp], rax
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	r9, rax
	mov	QWORD PTR weighted_C$1$[rsp], rax
; Line 1843
	test	esi, esi
	jle	SHORT $LN47@train
; Line 1842
	mov	rdx, rax
	mov	r8, rsi
	npad	6
$LL49@train:
; Line 1844
	mov	rcx, QWORD PTR [rbx+16]
	mov	QWORD PTR [rdx], rcx
; Line 1843
	add	rdx, 8
	sub	r8, 1
	jne	SHORT $LL49@train
$LN47@train:
; Line 1845
	mov	r12d, edi
	cmp	DWORD PTR [rbx+24], edi
	jle	$LN44@train
	mov	r13, rdi
	mov	rbp, rdi
$LL46@train:
; Line 1847
	mov	edx, edi
	mov	rcx, rdi
	test	esi, esi
	jle	SHORT $LN77@train
	mov	rax, QWORD PTR [rbx+32]
	mov	r8d, DWORD PTR [rax+rbp]
	mov	rax, QWORD PTR label$[rsp]
	npad	7
$LL43@train:
; Line 1848
	cmp	r8d, DWORD PTR [rax+rcx*4]
	je	SHORT $LN77@train
; Line 1847
	inc	edx
	inc	rcx
	cmp	edx, esi
	jl	SHORT $LL43@train
$LN77@train:
; Line 1850
	cmp	edx, esi
	jne	SHORT $LN39@train
; Line 1851
	mov	rbx, QWORD PTR [rbx+32]
	call	QWORD PTR __imp___iob_func
	mov	r8d, DWORD PTR [rbx+rbp]
	lea	rdx, OFFSET FLAT:??_C@_0DK@GMBFOOBJ@WARNING?3?5class?5label?5?$CFd?5specifie@
	lea	rcx, QWORD PTR [rax+96]
	call	QWORD PTR __imp_fprintf
; Line 1852
	mov	rbx, QWORD PTR param$[rsp]
	mov	r9, QWORD PTR weighted_C$1$[rsp]
	jmp	SHORT $LN45@train
$LN39@train:
; Line 1853
	mov	rax, QWORD PTR [rbx+40]
	movsdx	xmm0, QWORD PTR [rax+r13]
	mulsd	xmm0, QWORD PTR [r9+rcx*8]
	movsdx	QWORD PTR [r9+rcx*8], xmm0
$LN45@train:
; Line 1845
	inc	r12d
	add	rbp, 4
	add	r13, 8
	cmp	r12d, DWORD PTR [rbx+24]
	jl	$LL46@train
	mov	rbp, QWORD PTR $T10796[rsp]
	mov	r13d, ebp
$LN44@train:
; Line 1857
	lea	rbx, QWORD PTR [rbp*8]
	mov	rcx, rbx
	call	QWORD PTR __imp_malloc
	mov	r12, rax
	mov	QWORD PTR x$1$[rsp], rax
	mov	r9, rdi
; Line 1858
	test	rbp, rbp
	jle	SHORT $LN35@train
	mov	r10, QWORD PTR [r15+16]
	mov	rax, QWORD PTR perm$1$[rsp]
	npad	12
$LL37@train:
; Line 1859
	movsxd	rdx, DWORD PTR [rax+r9*4]
	mov	r8, QWORD PTR [r10+rdx*8]
	mov	QWORD PTR [r12+r9*8], r8
; Line 1858
	inc	r9
	cmp	r9, rbp
	jl	SHORT $LL37@train
$LN35@train:
; Line 1863
	mov	DWORD PTR sub_prob$[rsp], r13d
; Line 1864
	mov	DWORD PTR sub_prob$[rsp+4], r14d
; Line 1865
	mov	rcx, rbx
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR sub_prob$[rsp+16], rax
; Line 1866
	movsxd	rcx, DWORD PTR sub_prob$[rsp]
	shl	rcx, 2
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR sub_prob$[rsp+8], rax
; Line 1868
	mov	r8d, edi
	cmp	DWORD PTR sub_prob$[rsp], edi
	jle	SHORT $LN32@train
; Line 1863
	mov	rdx, rdi
	npad	4
$LL34@train:
; Line 1869
	mov	rcx, QWORD PTR [rdx+r12]
	mov	rax, QWORD PTR sub_prob$[rsp+16]
	mov	QWORD PTR [rdx+rax], rcx
; Line 1868
	inc	r8d
	add	rdx, 8
	cmp	r8d, DWORD PTR sub_prob$[rsp]
	jl	SHORT $LL34@train
$LN32@train:
; Line 1872
	mov	r15, QWORD PTR param$[rsp]
	cmp	DWORD PTR [r15], 4
	jne	$LN31@train
; Line 1874
	mov	eax, esi
	imul	eax, r14d
	movsxd	rcx, eax
	shl	rcx, 3
	call	QWORD PTR __imp_malloc
	mov	r12, rax
	mov	rcx, QWORD PTR model_$1$[rsp]
	mov	QWORD PTR [rcx+56], rax
; Line 1875
	test	esi, esi
	jle	SHORT $LN97@train
; Line 1874
	mov	rax, QWORD PTR start$[rsp]
	mov	r8, rax
; Line 1875
	mov	r13, QWORD PTR count$[rsp]
	mov	r9, r13
	sub	r9, rax
	npad	10
$LL30@train:
; Line 1876
	movsxd	rdx, DWORD PTR [r8]
	mov	eax, DWORD PTR [r9+r8]
	lea	ecx, DWORD PTR [rdx+rax]
	cmp	edx, ecx
	jge	SHORT $LN29@train
	lea	rcx, QWORD PTR [rdx*4]
	npad	10
$LL27@train:
; Line 1877
	mov	rax, QWORD PTR sub_prob$[rsp+8]
	mov	DWORD PTR [rcx+rax], edi
; Line 1876
	inc	edx
	add	rcx, 4
	mov	eax, DWORD PTR [r9+r8]
	add	eax, DWORD PTR [r8]
	cmp	edx, eax
	jl	SHORT $LL27@train
$LN29@train:
; Line 1875
	inc	edi
	add	r8, 4
	cmp	edi, esi
	jl	SHORT $LL30@train
; Line 1887
	jmp	SHORT $LN28@train
$LN97@train:
	mov	r13, QWORD PTR count$[rsp]
$LN28@train:
; Line 1878
	movsdx	xmm0, QWORD PTR [r15+8]
	mov	eax, DWORD PTR sub_prob$[rsp+4]
	mov	DWORD PTR Solver$7526[rsp+24], eax
	mov	eax, DWORD PTR sub_prob$[rsp]
	mov	DWORD PTR Solver$7526[rsp+28], eax
	mov	DWORD PTR Solver$7526[rsp+32], esi
	movsdx	QWORD PTR Solver$7526[rsp+40], xmm0
	mov	DWORD PTR Solver$7526[rsp+36], 100000	; 000186a0H
	lea	rax, QWORD PTR sub_prob$[rsp]
	mov	QWORD PTR Solver$7526[rsp+48], rax
	mov	eax, 8
	movsxd	rbx, esi
	mul	rbx
	mov	rbp, -1
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax
	mov	QWORD PTR Solver$7526[rsp], rax
	mov	eax, 8
	mul	rbx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR Solver$7526[rsp+16], rax
	mov	rax, QWORD PTR weighted_C$1$[rsp]
	mov	QWORD PTR Solver$7526[rsp+8], rax
; Line 1879
	mov	rdx, r12
	lea	rcx, QWORD PTR Solver$7526[rsp]
	call	?Solve@Solver_MCSVM_CS@@QEAAXPEAN@Z	; Solver_MCSVM_CS::Solve
	npad	1
; Line 1880
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
	mov	rcx, rbx
	call	??3@YAXPEAX@Z				; operator delete
; Line 1881
	mov	r12, QWORD PTR x$1$[rsp]
	jmp	$LN16@train
$LN31@train:
; Line 1883
	cmp	esi, 2
	jne	$LN23@train
; Line 1885
	mov	rcx, r14
	shl	rcx, 3
	call	QWORD PTR __imp_malloc
	mov	r11, rax
	mov	rcx, QWORD PTR model_$1$[rsp]
	mov	QWORD PTR [rcx+56], rax
; Line 1888
	mov	rdx, rdi
; Line 1887
	mov	r13, QWORD PTR count$[rsp]
	mov	ecx, DWORD PTR [r13]
	mov	rax, QWORD PTR start$[rsp]
	add	ecx, DWORD PTR [rax]
	movsxd	r8, ecx
; Line 1889
	test	ecx, ecx
	jle	SHORT $LN20@train
; Line 1885
	mov	edi, r8d
	npad	10
$LL22@train:
; Line 1890
	mov	rax, QWORD PTR sub_prob$[rsp+8]
	mov	DWORD PTR [rax+rdx*4], 1
; Line 1889
	inc	rdx
	cmp	rdx, r8
	jl	SHORT $LL22@train
$LN20@train:
	movsxd	rcx, edi
; Line 1891
	cmp	edi, DWORD PTR sub_prob$[rsp]
	jge	SHORT $LN17@train
; Line 1889
	shl	rcx, 2
	or	rbp, -1
	npad	11
$LL19@train:
; Line 1892
	mov	rax, QWORD PTR sub_prob$[rsp+8]
	mov	DWORD PTR [rcx+rax], ebp
; Line 1891
	inc	edi
	add	rcx, 4
	cmp	edi, DWORD PTR sub_prob$[rsp]
	jl	SHORT $LL19@train
$LN17@train:
; Line 1894
	mov	rax, QWORD PTR weighted_C$1$[rsp]
	movsdx	xmm0, QWORD PTR [rax+8]
	movsdx	QWORD PTR [rsp+32], xmm0
	movsdx	xmm3, QWORD PTR [rax]
	mov	r8, r11
	mov	rdx, r15
	lea	rcx, QWORD PTR sub_prob$[rsp]
	call	?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z ; train_one
; Line 1896
	jmp	$LN16@train
$LN23@train:
; Line 1898
	mov	eax, esi
	imul	eax, r14d
	movsxd	rcx, eax
	shl	rcx, 3
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR tv2174[rsp], rax
	mov	rcx, QWORD PTR model_$1$[rsp]
	mov	QWORD PTR [rcx+56], rax
; Line 1899
	mov	r12, r14
	lea	rcx, QWORD PTR [r14*8]
	call	QWORD PTR __imp_malloc
	mov	r13, rax
; Line 1900
	mov	r14, rdi
	test	esi, esi
	jle	$LN13@train
; Line 1898
	mov	rax, QWORD PTR tv2167[rsp]
	mov	QWORD PTR tv2135[rsp], rax
	mov	rcx, QWORD PTR count$[rsp]
	mov	rbx, rcx
	mov	QWORD PTR tv2134[rsp], rcx
; Line 1900
	mov	rax, QWORD PTR start$[rsp]
	sub	rax, rcx
	mov	QWORD PTR tv2133[rsp], rax
; Line 1898
	mov	QWORD PTR tv2132[rsp], rsi
	or	rbp, -1
	npad	4
$LL15@train:
; Line 1902
	movsxd	rcx, DWORD PTR [rax+rbx]
; Line 1903
	mov	eax, DWORD PTR [rbx]
	lea	r10d, DWORD PTR [rcx+rax]
; Line 1905
	mov	r8d, edi
	mov	rdx, rdi
; Line 1906
	test	ecx, ecx
	jle	SHORT $LN10@train
; Line 1902
	mov	r8d, ecx
	npad	9
$LL12@train:
; Line 1907
	mov	rax, QWORD PTR sub_prob$[rsp+8]
	mov	DWORD PTR [rax+rdx*4], ebp
; Line 1906
	inc	rdx
	cmp	rdx, rcx
	jl	SHORT $LL12@train
$LN10@train:
; Line 1908
	movsxd	rcx, r10d
	cmp	rdx, rcx
	jge	SHORT $LN7@train
	mov	eax, ecx
	sub	eax, edx
	add	r8d, eax
	npad	1
$LL9@train:
; Line 1909
	mov	rax, QWORD PTR sub_prob$[rsp+8]
	mov	DWORD PTR [rax+rdx*4], 1
; Line 1908
	inc	rdx
	cmp	rdx, rcx
	jl	SHORT $LL9@train
$LN7@train:
; Line 1910
	cmp	r8d, DWORD PTR sub_prob$[rsp]
	jge	SHORT $LN4@train
	shl	rdx, 2
	npad	1
$LL6@train:
; Line 1911
	mov	rax, QWORD PTR sub_prob$[rsp+8]
	mov	DWORD PTR [rdx+rax], ebp
; Line 1910
	inc	r8d
	add	rdx, 4
	cmp	r8d, DWORD PTR sub_prob$[rsp]
	jl	SHORT $LL6@train
$LN4@train:
; Line 1913
	movsdx	xmm0, QWORD PTR [r15+16]
	movsdx	QWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR weighted_C$1$[rsp]
	movsdx	xmm3, QWORD PTR [rax+r14*8]
	mov	r8, r13
	mov	rdx, r15
	lea	rcx, QWORD PTR sub_prob$[rsp]
	call	?train_one@@YAXPEBUproblem@@PEBUparameter@@PEANNN@Z ; train_one
; Line 1915
	mov	r11, rdi
	cmp	r12, 4
	jl	$LC94@train
; Line 1913
	mov	rbx, QWORD PTR tv2168[rsp]
	mov	r8, rbx
	shl	r8, 5
	lea	rdx, QWORD PTR [r13+16]
; Line 1900
	mov	r11, QWORD PTR tv2174[rsp]
	lea	r9, QWORD PTR [r11+r14*8]
; Line 1913
	lea	rax, QWORD PTR [r14+rbx*2]
	lea	rcx, QWORD PTR [rbx+rax]
	lea	r10, QWORD PTR [r11+rcx*8]
	lea	rax, QWORD PTR [r14+rbx*2]
	lea	rcx, QWORD PTR [r11+rax*8]
; Line 1900
	mov	rax, QWORD PTR tv2135[rsp]
	lea	rbx, QWORD PTR [r11+rax]
; Line 1913
	lea	rsi, QWORD PTR [r12-4]
	shr	rsi, 2
	inc	rsi
; Line 1908
	lea	r11, QWORD PTR [rsi*4]
; Line 1915
$LL95@train:
; Line 1916
	mov	rax, QWORD PTR [rdx-16]
	mov	QWORD PTR [r9], rax
	mov	rax, QWORD PTR [rdx-8]
	mov	QWORD PTR [rbx], rax
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r10], rax
	add	r9, r8
	add	rbx, r8
	add	rcx, r8
	add	r10, r8
	add	rdx, 32					; 00000020H
; Line 1908
	sub	rsi, 1
	jne	SHORT $LL95@train
	mov	rbx, QWORD PTR tv2134[rsp]
	mov	rsi, QWORD PTR tv2132[rsp]
$LC94@train:
; Line 1915
	cmp	r11, r12
	jge	SHORT $LN14@train
	mov	rcx, QWORD PTR tv2168[rsp]
	imul	rcx, r11
	add	rcx, r14
	mov	rax, QWORD PTR model_$1$[rsp]
	mov	rax, QWORD PTR [rax+56]
	lea	rdx, QWORD PTR [rax+rcx*8]
	mov	r15, QWORD PTR tv2167[rsp]
$LC3@train:
; Line 1916
	mov	rax, QWORD PTR [r13+r11*8]
	mov	QWORD PTR [rdx], rax
; Line 1908
	inc	r11
	add	rdx, r15
; Line 1915
	cmp	r11, r12
	jl	SHORT $LC3@train
	mov	r15, QWORD PTR param$[rsp]
$LN14@train:
; Line 1900
	inc	r14
	add	rbx, 4
	mov	QWORD PTR tv2134[rsp], rbx
	add	QWORD PTR tv2135[rsp], 8
	sub	rsi, 1
	mov	QWORD PTR tv2132[rsp], rsi
	mov	rax, QWORD PTR tv2133[rsp]
	jne	$LL15@train
$LN13@train:
; Line 1918
	mov	rcx, r13
	call	QWORD PTR __imp_free
	mov	r12, QWORD PTR x$1$[rsp]
	mov	r13, QWORD PTR count$[rsp]
$LN16@train:
; Line 1923
	mov	rcx, r12
	call	QWORD PTR __imp_free
; Line 1924
	mov	rcx, QWORD PTR label$[rsp]
	call	QWORD PTR __imp_free
; Line 1925
	mov	rcx, QWORD PTR start$[rsp]
	call	QWORD PTR __imp_free
; Line 1926
	mov	rcx, r13
	call	QWORD PTR __imp_free
; Line 1927
	mov	rcx, QWORD PTR perm$1$[rsp]
	call	QWORD PTR __imp_free
; Line 1928
	mov	rcx, QWORD PTR sub_prob$[rsp+16]
	call	QWORD PTR __imp_free
; Line 1929
	mov	rcx, QWORD PTR sub_prob$[rsp+8]
	call	QWORD PTR __imp_free
; Line 1930
	mov	rcx, QWORD PTR weighted_C$1$[rsp]
	call	QWORD PTR __imp_free
; Line 1931
	mov	rax, QWORD PTR model_$1$[rsp]
; Line 1932
	add	rsp, 248				; 000000f8H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
train	ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
sub_prob$ = 48
model_$1$ = 80
start$ = 88
label$ = 96
$T10796 = 104
x$1$ = 104
tv2132 = 112
tv2167 = 120
perm$1$ = 128
tv2134 = 136
tv2168 = 144
tv2174 = 152
tv2133 = 160
Solver$7526 = 168
$T10804 = 224
weighted_C$1$ = 320
nr_class$ = 320
prob$ = 320
param$ = 328
tv2135 = 336
count$ = 344
train$dtor$0 PROC
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Solver$7526[rbp]
	call	??1Solver_MCSVM_CS@@QEAA@XZ		; Solver_MCSVM_CS::~Solver_MCSVM_CS
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
train$dtor$0 ENDP
text$x	ENDS
PUBLIC	cross_validation
;	COMDAT pdata
pdata	SEGMENT
$pdata$cross_validation DD imagerel $LN50
	DD	imagerel $LN50+745
	DD	imagerel $unwind$cross_validation
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cross_validation DD 091a01H
	DD	0f016c21aH
	DD	0d012e014H
	DD	0700ec010H
	DD	0500c600dH
	DD	0300bH
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT cross_validation
_TEXT	SEGMENT
$T10896 = 32
$T10893 = 40
$T10898 = 48
subprob$7593 = 56
fold_start$1$ = 176
prob$ = 176
param$ = 184
l$1$ = 192
nr_fold$ = 192
target$ = 200
cross_validation PROC					; COMDAT
; Line 1935
$LN50:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 104				; 00000068H
	movsxd	r14, r8d
	mov	r12, rcx
; Line 1937
	lea	eax, DWORD PTR [r14+1]
	movsxd	r13, eax
	lea	rcx, QWORD PTR [r13*4]
	call	QWORD PTR __imp_malloc
; Line 1938
	movsxd	rdi, DWORD PTR [r12]
; Line 1939
	lea	rcx, QWORD PTR [rdi*4]
	mov	QWORD PTR fold_start$1$[rsp], rax
	mov	DWORD PTR l$1$[rsp], edi
	mov	r15, rdi
	mov	QWORD PTR $T10893[rsp], rdi
	call	QWORD PTR __imp_malloc
; Line 1941
	xor	ecx, ecx
	xor	edx, edx
	mov	rsi, rax
	test	edi, edi
	jle	SHORT $LN19@cross_vali
	npad	7
$LL21@cross_vali:
	mov	DWORD PTR [rax+rdx*4], ecx
	inc	rdx
	inc	ecx
	cmp	rdx, rdi
	jl	SHORT $LL21@cross_vali
$LN19@cross_vali:
; Line 1942
	xor	ebp, ebp
	xor	ebx, ebx
	test	edi, edi
	jle	SHORT $LN16@cross_vali
$LL18@cross_vali:
; Line 1944
	call	QWORD PTR __imp_rand
; Line 1945
	mov	ecx, DWORD PTR [rsi+rbx*4]
	inc	rbx
	cdq
	idiv	edi
	dec	edi
	add	edx, ebp
	inc	ebp
	cmp	rbx, r15
	movsxd	r8, edx
	mov	eax, DWORD PTR [rsi+r8*4]
	mov	DWORD PTR [rsi+rbx*4-4], eax
	mov	DWORD PTR [rsi+r8*4], ecx
	jl	SHORT $LL18@cross_vali
	mov	edi, r15d
$LN16@cross_vali:
; Line 1947
	mov	r9, QWORD PTR fold_start$1$[rsp]
	test	r14d, r14d
	js	SHORT $LN13@cross_vali
	xor	ecx, ecx
	mov	r8, r9
$LL15@cross_vali:
; Line 1948
	mov	eax, ecx
	add	r8, 4
	add	ecx, edi
	cdq
	idiv	r14d
	sub	r13, 1
	mov	DWORD PTR [r8-4], eax
	jne	SHORT $LL15@cross_vali
$LN13@cross_vali:
	xor	eax, eax
; Line 1950
	mov	QWORD PTR $T10898[rsp], r14
	mov	QWORD PTR $T10896[rsp], rax
	test	r14d, r14d
	jle	$LN10@cross_vali
	npad	2
$LL12@cross_vali:
; Line 1952
	movsxd	rdi, DWORD PTR [r9+rax*4]
; Line 1953
	movsxd	rbp, DWORD PTR [r9+rax*4+4]
; Line 1958
	mov	eax, DWORD PTR [r12+4]
	movsdx	xmm0, QWORD PTR [r12+24]
	movsdx	QWORD PTR subprob$7593[rsp+24], xmm0
	mov	DWORD PTR subprob$7593[rsp+4], eax
; Line 1959
	mov	eax, edi
	sub	eax, ebp
	add	eax, DWORD PTR l$1$[rsp]
; Line 1960
	movsxd	rbx, eax
	mov	DWORD PTR subprob$7593[rsp], eax
	lea	rcx, QWORD PTR [rbx*8]
	call	QWORD PTR __imp_malloc
; Line 1961
	lea	rcx, QWORD PTR [rbx*4]
	mov	r14, rax
	mov	QWORD PTR subprob$7593[rsp+16], rax
	call	QWORD PTR __imp_malloc
; Line 1963
	xor	r8d, r8d
; Line 1964
	mov	r13, rdi
	mov	rbx, rax
	mov	QWORD PTR subprob$7593[rsp+8], rax
	test	edi, edi
	jle	SHORT $LN7@cross_vali
	mov	r9, rax
	mov	rdx, rsi
	sub	r9, rsi
$LL9@cross_vali:
; Line 1966
	movsxd	rcx, DWORD PTR [rdx]
	mov	rax, QWORD PTR [r12+16]
; Line 1968
	inc	r8
	mov	rcx, QWORD PTR [rax+rcx*8]
	add	rdx, 4
	cmp	r8, rdi
	mov	QWORD PTR [r14+r8*8-8], rcx
	movsxd	rcx, DWORD PTR [rdx-4]
	mov	rax, QWORD PTR [r12+8]
	mov	ecx, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR [r9+rdx-4], ecx
	jl	SHORT $LL9@cross_vali
$LN7@cross_vali:
; Line 1970
	cmp	rbp, r15
	mov	r14, rbp
	mov	rdx, rbp
	jge	SHORT $LN4@cross_vali
	mov	rax, QWORD PTR subprob$7593[rsp+16]
; Line 1972
	lea	r9, QWORD PTR [rbx+r8*4]
	lea	r10, QWORD PTR [rax+r8*8]
	npad	10
$LL6@cross_vali:
	movsxd	rcx, DWORD PTR [rsi+rdx*4]
	mov	rax, QWORD PTR [r12+16]
	inc	rdx
	mov	rcx, QWORD PTR [rax+rcx*8]
; Line 1974
	add	r9, 4
	add	r10, 8
	cmp	rdx, r15
	mov	QWORD PTR [r10-8], rcx
	movsxd	rcx, DWORD PTR [rsi+rdx*4-4]
	mov	rax, QWORD PTR [r12+8]
	mov	ecx, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR [r9-4], ecx
	jl	SHORT $LL6@cross_vali
$LN4@cross_vali:
; Line 1976
	mov	rdx, QWORD PTR param$[rsp]
	lea	rcx, QWORD PTR subprob$7593[rsp]
	call	train
; Line 1977
	cmp	rdi, r14
	mov	rbp, rax
	jge	SHORT $LN1@cross_vali
	mov	r15, QWORD PTR target$[rsp]
	npad	12
$LL3@cross_vali:
; Line 1978
	mov	rcx, QWORD PTR [r12+16]
	movsxd	rdx, DWORD PTR [rsi+r13*4]
	mov	rbx, QWORD PTR [rcx+rdx*8]
	movsxd	rcx, DWORD PTR [rbp+48]
	shl	rcx, 3
	call	QWORD PTR __imp_malloc
	mov	rdx, rbx
	mov	rcx, rbp
	mov	r8, rax
	mov	rdi, rax
	call	predict_values
	mov	rcx, rdi
	mov	ebx, eax
	call	QWORD PTR __imp_free
	movsxd	r11, DWORD PTR [rsi+r13*4]
	inc	r13
	mov	DWORD PTR [r15+r11*4], ebx
	cmp	r13, r14
	jl	SHORT $LL3@cross_vali
	mov	r15, QWORD PTR $T10893[rsp]
	mov	rbx, QWORD PTR subprob$7593[rsp+8]
$LN1@cross_vali:
; Line 1979
	test	rbp, rbp
	je	SHORT $LN28@cross_vali
	mov	rcx, QWORD PTR [rbp+56]
	test	rcx, rcx
	je	SHORT $LN32@cross_vali
	call	QWORD PTR __imp_free
$LN32@cross_vali:
	mov	rcx, QWORD PTR [rbp+64]
	test	rcx, rcx
	je	SHORT $LN31@cross_vali
	call	QWORD PTR __imp_free
$LN31@cross_vali:
	mov	rcx, rbp
	call	QWORD PTR __imp_free
$LN28@cross_vali:
; Line 1980
	mov	rcx, QWORD PTR subprob$7593[rsp+16]
	call	QWORD PTR __imp_free
; Line 1981
	mov	rcx, rbx
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR $T10896[rsp]
	mov	r9, QWORD PTR fold_start$1$[rsp]
	inc	rax
	cmp	rax, QWORD PTR $T10898[rsp]
	mov	QWORD PTR $T10896[rsp], rax
	jl	$LL12@cross_vali
$LN10@cross_vali:
; Line 1983
	mov	rcx, QWORD PTR fold_start$1$[rsp]
	call	QWORD PTR __imp_free
; Line 1984
	mov	rcx, rsi
; Line 1985
	add	rsp, 104				; 00000068H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	rex_jmp	QWORD PTR __imp_free
cross_validation ENDP
_TEXT	ENDS
PUBLIC	predict_probability
;	COMDAT pdata
pdata	SEGMENT
$pdata$predict_probability DD imagerel $LN35
	DD	imagerel $LN35+33
	DD	imagerel $unwind$predict_probability
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$predict_probability DD imagerel $LN35+33
	DD	imagerel $LN35+111
	DD	imagerel $chain$5$predict_probability
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$predict_probability DD imagerel $LN35+111
	DD	imagerel $LN35+173
	DD	imagerel $chain$6$predict_probability
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$predict_probability DD imagerel $LN35+173
	DD	imagerel $LN35+189
	DD	imagerel $chain$7$predict_probability
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$predict_probability DD imagerel $LN35+189
	DD	imagerel $LN35+444
	DD	imagerel $chain$8$predict_probability
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$predict_probability DD 080021H
	DD	036800H
	DD	08d400H
	DD	09c400H
	DD	0e7400H
	DD	imagerel $LN35
	DD	imagerel $LN35+33
	DD	imagerel $unwind$predict_probability
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$predict_probability DD 021H
	DD	imagerel $LN35+33
	DD	imagerel $LN35+111
	DD	imagerel $chain$5$predict_probability
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$predict_probability DD 020521H
	DD	027805H
	DD	imagerel $LN35+33
	DD	imagerel $LN35+111
	DD	imagerel $chain$5$predict_probability
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$predict_probability DD 0c3121H
	DD	036831H
	DD	08d429H
	DD	09c414H
	DD	0e740fH
	DD	0d540aH
	DD	0c3405H
	DD	imagerel $LN35
	DD	imagerel $LN35+33
	DD	imagerel $unwind$predict_probability
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$predict_probability DD 020601H
	DD	060029206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT predict_probability
_TEXT	SEGMENT
model_$ = 96
x$ = 104
prob_estimates$ = 112
predict_probability PROC				; COMDAT
; Line 2038
$LN35:
	push	rsi
	sub	rsp, 80					; 00000050H
; Line 2039
	mov	eax, DWORD PTR [rcx]
	mov	rsi, r8
	test	eax, eax
	je	SHORT $LN20@predict_pr
	cmp	eax, 7
	je	SHORT $LN20@predict_pr
	cmp	eax, 6
	je	SHORT $LN20@predict_pr
; Line 2068
	xor	eax, eax
; Line 2069
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
; Line 2039
$LN20@predict_pr:
	mov	QWORD PTR [rsp+96], rbx
	mov	QWORD PTR [rsp+104], rbp
	mov	QWORD PTR [rsp+112], rdi
	mov	QWORD PTR [rsp+72], r12
; Line 2042
	movsxd	r12, DWORD PTR [rcx+48]
; Line 2044
	mov	eax, 1
	mov	ebx, r12d
	cmp	r12d, 2
	mov	QWORD PTR [rsp+64], r13
	cmove	ebx, eax
	movaps	XMMWORD PTR [rsp+48], xmm6
; Line 2049
	call	predict_values
	xor	edi, edi
; Line 2050
	movsxd	rbx, ebx
	movsdx	xmm6, QWORD PTR __real@3ff0000000000000
	mov	r13d, eax
	mov	rbp, rdi
	test	rbx, rbx
	jle	SHORT $LN10@predict_pr
	movaps	XMMWORD PTR [rsp+32], xmm7
	movsdx	xmm7, QWORD PTR __mask@@NegDouble@
	npad	4
$LL12@predict_pr:
; Line 2051
	movsdx	xmm0, QWORD PTR [rsi+rbp*8]
	xorpd	xmm0, xmm7
	call	exp
	movapd	xmm1, xmm6
	inc	rbp
	cmp	rbp, rbx
	addsd	xmm0, xmm6
	divsd	xmm1, xmm0
	movsdx	QWORD PTR [rsi+rbp*8-8], xmm1
	jl	SHORT $LL12@predict_pr
	movaps	xmm7, XMMWORD PTR [rsp+32]
$LN10@predict_pr:
	mov	rbp, QWORD PTR [rsp+104]
	mov	rbx, QWORD PTR [rsp+96]
; Line 2053
	cmp	r12d, 2
	jne	SHORT $LN9@predict_pr
; Line 2054
	subsd	xmm6, QWORD PTR [rsi]
	movsdx	QWORD PTR [rsi+8], xmm6
; Line 2055
	jmp	$LN31@predict_pr
$LN9@predict_pr:
; Line 2058
	cmp	r12, 4
	xorpd	xmm2, xmm2
	mov	rax, rdi
	mov	rcx, r12
	jl	SHORT $LC29@predict_pr
	lea	r8, QWORD PTR [r12-4]
	lea	rdx, QWORD PTR [rsi+16]
	shr	r8, 2
	inc	r8
; Line 2061
	lea	rax, QWORD PTR [r8*4]
$LL30@predict_pr:
	addsd	xmm2, QWORD PTR [rdx-16]
	add	rdx, 32					; 00000020H
	sub	r8, 1
	addsd	xmm2, QWORD PTR [rdx-40]
	addsd	xmm2, QWORD PTR [rdx-32]
	addsd	xmm2, QWORD PTR [rdx-24]
	jne	SHORT $LL30@predict_pr
$LC29@predict_pr:
; Line 2058
	cmp	rax, rcx
	jge	SHORT $LN28@predict_pr
$LC7@predict_pr:
; Line 2059
	addsd	xmm2, QWORD PTR [rsi+rax*8]
; Line 2061
	inc	rax
	cmp	rax, rcx
	jl	SHORT $LC7@predict_pr
$LN28@predict_pr:
	cmp	rcx, 4
	jl	SHORT $LC32@predict_pr
	lea	rdx, QWORD PTR [r12-4]
; Line 2062
	lea	rax, QWORD PTR [rsi+16]
	shr	rdx, 2
	inc	rdx
	lea	rdi, QWORD PTR [rdx*4]
$LL33@predict_pr:
	movsdx	xmm0, QWORD PTR [rax-16]
	movsdx	xmm1, QWORD PTR [rax-8]
	add	rax, 32					; 00000020H
	sub	rdx, 1
	divsd	xmm0, xmm2
	divsd	xmm1, xmm2
	movsdx	QWORD PTR [rax-48], xmm0
	movsdx	xmm0, QWORD PTR [rax-32]
	movsdx	QWORD PTR [rax-40], xmm1
	movsdx	xmm1, QWORD PTR [rax-24]
	divsd	xmm0, xmm2
	divsd	xmm1, xmm2
	movsdx	QWORD PTR [rax-32], xmm0
	movsdx	QWORD PTR [rax-24], xmm1
	jne	SHORT $LL33@predict_pr
$LC32@predict_pr:
; Line 2061
	cmp	rdi, rcx
	jge	SHORT $LN31@predict_pr
$LC4@predict_pr:
; Line 2062
	movsdx	xmm0, QWORD PTR [rsi+rdi*8]
	inc	rdi
	cmp	rdi, rcx
	divsd	xmm0, xmm2
	movsdx	QWORD PTR [rsi+rdi*8-8], xmm0
	jl	SHORT $LC4@predict_pr
$LN31@predict_pr:
	movaps	xmm6, XMMWORD PTR [rsp+48]
	mov	r12, QWORD PTR [rsp+72]
	mov	rdi, QWORD PTR [rsp+112]
; Line 2065
	mov	eax, r13d
	mov	r13, QWORD PTR [rsp+64]
; Line 2069
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
predict_probability ENDP
_TEXT	ENDS
END
