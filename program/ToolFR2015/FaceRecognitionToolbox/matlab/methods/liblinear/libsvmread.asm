; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0EC@FOAPJCNC@Usage?3?5?$FLlabel_vector?0?5instance_m@ ; `string'
PUBLIC	exit_with_help
EXTRN	mexPrintf:PROC
;	COMDAT ??_C@_0EC@FOAPJCNC@Usage?3?5?$FLlabel_vector?0?5instance_m@
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\matlab\libsvmread.c
CONST	SEGMENT
??_C@_0EC@FOAPJCNC@Usage?3?5?$FLlabel_vector?0?5instance_m@ DB 'Usage: [l'
	DB	'abel_vector, instance_matrix] = libsvmread(''filename'');', 0aH
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT exit_with_help
_TEXT	SEGMENT
exit_with_help PROC					; COMDAT
; Line 19
	lea	rcx, OFFSET FLAT:??_C@_0EC@FOAPJCNC@Usage?3?5?$FLlabel_vector?0?5instance_m@
; Line 20
	jmp	mexPrintf
exit_with_help ENDP
_TEXT	ENDS
EXTRN	mxCreateDoubleMatrix_730:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$fake_answer DD imagerel fake_answer
	DD	imagerel fake_answer+46
	DD	imagerel $unwind$fake_answer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fake_answer DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT fake_answer
_TEXT	SEGMENT
plhs$ = 48
fake_answer PROC					; COMDAT
; Line 23
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 24
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	mxCreateDoubleMatrix_730
; Line 25
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [rbx], rax
	call	mxCreateDoubleMatrix_730
	mov	QWORD PTR [rbx+8], rax
; Line 26
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
fake_answer ENDP
_TEXT	ENDS
EXTRN	__imp_realloc:PROC
EXTRN	__imp_strrchr:PROC
EXTRN	__imp_fgets:PROC
_BSS	SEGMENT
line	DQ	01H DUP (?)
max_line_len DD	01H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$readline DD imagerel readline
	DD	imagerel readline+69
	DD	imagerel $unwind$readline
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$readline DD imagerel readline+69
	DD	imagerel readline+195
	DD	imagerel $chain$1$readline
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$readline DD imagerel readline+195
	DD	imagerel readline+208
	DD	imagerel $chain$2$readline
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$readline DD 021H
	DD	imagerel readline
	DD	imagerel readline+69
	DD	imagerel $unwind$readline
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$readline DD 040a21H
	DD	07740aH
	DD	063405H
	DD	imagerel readline
	DD	imagerel readline+69
	DD	imagerel $unwind$readline
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$readline DD 020601H
	DD	060023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT readline
_TEXT	SEGMENT
input$ = 48
readline PROC						; COMDAT
; Line 32
	push	rsi
	sub	rsp, 32					; 00000020H
; Line 35
	mov	edx, DWORD PTR max_line_len
	mov	rsi, rcx
	mov	r8, rcx
	mov	rcx, QWORD PTR line
	call	QWORD PTR __imp_fgets
	test	rax, rax
	jne	SHORT $LN7@readline
; Line 47
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN7@readline:
; Line 38
	mov	rcx, QWORD PTR line
	mov	edx, 10
	call	QWORD PTR __imp_strrchr
	test	rax, rax
	jne	$LN9@readline
	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+56], rdi
	npad	1
$LL3@readline:
; Line 40
	mov	eax, DWORD PTR max_line_len
; Line 41
	mov	rcx, QWORD PTR line
	lea	ebx, DWORD PTR [rax+rax]
	movsxd	rdx, ebx
	mov	DWORD PTR max_line_len, ebx
	call	QWORD PTR __imp_realloc
; Line 42
	or	rcx, -1
; Line 43
	mov	r8, rsi
	mov	r11, rax
	mov	QWORD PTR line, rax
	xor	eax, eax
	mov	rdi, r11
	repne scasb
	not	rcx
	dec	rcx
	sub	ebx, ecx
	movsxd	rcx, ecx
	add	rcx, r11
	mov	edx, ebx
	call	QWORD PTR __imp_fgets
	test	rax, rax
	je	SHORT $LN11@readline
	mov	rcx, QWORD PTR line
	mov	edx, 10
	call	QWORD PTR __imp_strrchr
	test	rax, rax
	je	SHORT $LL3@readline
$LN11@readline:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+56]
$LN9@readline:
; Line 46
	mov	rax, QWORD PTR line
; Line 47
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
readline ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@EPKLPFFO@Error?3?5cannot?5transpose?5problem?6@ ; `string'
PUBLIC	??_C@_09KDFGPPLL@transpose?$AA@			; `string'
PUBLIC	??_C@_0BP@IHPDPOAF@Wrong?5input?5format?5at?5line?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	??_C@_02OJDBNLEE@?5?7?$AA@			; `string'
PUBLIC	??_C@_0BK@NOEGEEPH@can?8t?5open?5input?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	read_problem
EXTRN	mexCallMATLAB:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_isspace:PROC
EXTRN	__imp_strtod:PROC
EXTRN	mxGetJc_730:PROC
EXTRN	mxGetIr_730:PROC
EXTRN	mxGetPr:PROC
EXTRN	mxCreateSparse_730:PROC
EXTRN	__imp_rewind:PROC
EXTRN	__imp_strtol:PROC
EXTRN	__imp__errno:PROC
EXTRN	__imp_strtok:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp_fopen:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$read_problem DD imagerel $LN56
	DD	imagerel $LN56+1304
	DD	imagerel $unwind$read_problem
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$read_problem DD 0e9a01H
	DD	0ed49aH
	DD	0fc48bH
	DD	0106481H
	DD	0165479H
	DD	0110112H
	DD	0e009f00bH
	DD	030067007H
xdata	ENDS
;	COMDAT ??_C@_0CB@EPKLPFFO@Error?3?5cannot?5transpose?5problem?6@
CONST	SEGMENT
??_C@_0CB@EPKLPFFO@Error?3?5cannot?5transpose?5problem?6@ DB 'Error: cann'
	DB	'ot transpose problem', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KDFGPPLL@transpose?$AA@
CONST	SEGMENT
??_C@_09KDFGPPLL@transpose?$AA@ DB 'transpose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IHPDPOAF@Wrong?5input?5format?5at?5line?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BP@IHPDPOAF@Wrong?5input?5format?5at?5line?5?$CFd?6?$AA@ DB 'Wrong'
	DB	' input format at line %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OJDBNLEE@?5?7?$AA@
CONST	SEGMENT
??_C@_02OJDBNLEE@?5?7?$AA@ DB ' ', 09H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NOEGEEPH@can?8t?5open?5input?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BK@NOEGEEPH@can?8t?5open?5input?5file?5?$CFs?6?$AA@ DB 'can''t ope'
	DB	'n input file %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT read_problem
_TEXT	SEGMENT
fp$1$ = 48
$T5774 = 56
samples$1$ = 64
ir$1$ = 72
$T5773 = 80
tv456 = 88
jc$1$ = 96
lhs$5617 = 96
filename$ = 176
plhs$ = 184
i$1$ = 192
rhs$5616 = 192
endptr$ = 200
read_problem PROC					; COMDAT
; Line 51
$LN56:
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rdi
	push	r14
	push	r15
	sub	rsp, 136				; 00000088H
	mov	r15, rdx
; Line 54
	lea	rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
	mov	rbx, rcx
	call	QWORD PTR __imp_fopen
; Line 55
	xor	r14d, r14d
	mov	rdi, rax
	mov	QWORD PTR fp$1$[rsp], rax
; Line 60
	test	rax, rax
	jne	SHORT $LN21@read_probl
; Line 62
	lea	rcx, OFFSET FLAT:??_C@_0BK@NOEGEEPH@can?8t?5open?5input?5file?5?$CFs?6?$AA@
	mov	rdx, rbx
	call	mexPrintf
; Line 63
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	mxCreateDoubleMatrix_730
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [r15], rax
	call	mxCreateDoubleMatrix_730
	mov	QWORD PTR [r15+8], rax
; Line 174
	add	rsp, 136				; 00000088H
	pop	r15
	pop	r14
	pop	rdi
	pop	rbx
	ret	0
$LN21@read_probl:
	mov	QWORD PTR [rsp+176], rbp
	mov	QWORD PTR [rsp+128], rsi
; Line 68
	mov	ecx, 1024				; 00000400H
	mov	QWORD PTR [rsp+120], r12
	mov	DWORD PTR max_line_len, 1024		; 00000400H
	mov	QWORD PTR [rsp+112], r13
	call	QWORD PTR __imp_malloc
; Line 70
	xor	r13d, r13d
; Line 73
	mov	rcx, rdi
	mov	QWORD PTR line, rax
	xor	ebp, ebp
	lea	r12d, QWORD PTR [r13+1]
	call	readline
	test	rax, rax
	je	$LN47@read_probl
$LL20@read_probl:
; Line 80
	mov	rcx, QWORD PTR line
	lea	rdx, OFFSET FLAT:??_C@_02OJDBNLEE@?5?7?$AA@
	or	edi, -1
	call	QWORD PTR __imp_strtok
; Line 83
	lea	rdx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3?$AA@
	xor	ecx, ecx
	call	QWORD PTR __imp_strtok
; Line 84
	lea	rdx, OFFSET FLAT:??_C@_02OJDBNLEE@?5?7?$AA@
	xor	ecx, ecx
	mov	rsi, rax
	call	QWORD PTR __imp_strtok
; Line 85
	test	rax, rax
	je	$LN40@read_probl
$LL18@read_probl:
; Line 88
	call	QWORD PTR __imp__errno
; Line 89
	lea	rdx, QWORD PTR endptr$[rsp]
	mov	r8d, 10
	mov	rcx, rsi
	mov	DWORD PTR [rax], 0
	call	QWORD PTR __imp_strtol
	mov	ebx, eax
; Line 90
	cmp	QWORD PTR endptr$[rsp], rsi
	je	$LN41@read_probl
	call	QWORD PTR __imp__errno
	cmp	DWORD PTR [rax], 0
	jne	$LN41@read_probl
	mov	rcx, QWORD PTR endptr$[rsp]
	cmp	BYTE PTR [rcx], 0
	jne	$LN41@read_probl
	cmp	ebx, edi
	jle	$LN41@read_probl
; Line 99
	cmp	r12d, ebx
	mov	edi, ebx
	lea	rdx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3?$AA@
	cmovl	ebx, r12d
	xor	ecx, ecx
; Line 100
	inc	ebp
	mov	r12d, ebx
	call	QWORD PTR __imp_strtok
	lea	rdx, OFFSET FLAT:??_C@_02OJDBNLEE@?5?7?$AA@
	xor	ecx, ecx
	mov	rsi, rax
	call	QWORD PTR __imp_strtok
	test	rax, rax
	jne	$LL18@read_probl
$LN40@read_probl:
; Line 102
	cmp	r13d, edi
	cmovg	edi, r13d
; Line 103
	inc	r14d
	mov	r13d, edi
	mov	rdi, QWORD PTR fp$1$[rsp]
	mov	rcx, rdi
	call	readline
	test	rax, rax
	jne	$LL20@read_probl
$LN47@read_probl:
; Line 105
	mov	rcx, rdi
	call	QWORD PTR __imp_rewind
; Line 108
	xor	r8d, r8d
	movsxd	r14, r14d
	lea	edx, QWORD PTR [r8+1]
	mov	rcx, r14
	mov	QWORD PTR $T5773[rsp], r14
	call	mxCreateDoubleMatrix_730
	mov	rbx, QWORD PTR plhs$[rsp]
	mov	QWORD PTR [rbx], rax
; Line 110
	test	r12d, r12d
	jg	SHORT $LN12@read_probl
; Line 111
	sub	r13d, r12d
	movsxd	r8, ebp
	xor	r9d, r9d
	inc	r13d
	mov	rdx, r14
	movsxd	rcx, r13d
	call	mxCreateSparse_730
	mov	QWORD PTR [rbx+8], rax
; Line 112
	jmp	SHORT $LN11@read_probl
$LN41@read_probl:
; Line 92
	lea	edx, DWORD PTR [r14+1]
	lea	rcx, OFFSET FLAT:??_C@_0BP@IHPDPOAF@Wrong?5input?5format?5at?5line?5?$CFd?6?$AA@
	call	mexPrintf
; Line 93
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	mxCreateDoubleMatrix_730
; Line 94
	jmp	$LN54@read_probl
$LN12@read_probl:
; Line 113
	movsxd	r8, ebp
	movsxd	rcx, r13d
	xor	r9d, r9d
	mov	rdx, r14
	call	mxCreateSparse_730
	mov	QWORD PTR [rbx+8], rax
$LN11@read_probl:
; Line 115
	mov	rcx, QWORD PTR [rbx]
	call	mxGetPr
; Line 116
	mov	rcx, QWORD PTR [rbx+8]
	mov	r15, rax
	call	mxGetPr
; Line 117
	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR samples$1$[rsp], rax
	call	mxGetIr_730
; Line 118
	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR ir$1$[rsp], rax
	call	mxGetJc_730
; Line 121
	xor	esi, esi
	xor	edi, edi
	xor	ebp, ebp
	xor	r13d, r13d
	mov	QWORD PTR jc$1$[rsp], rax
	mov	DWORD PTR i$1$[rsp], esi
	mov	QWORD PTR $T5774[rsp], rdi
	test	r14, r14
	jle	$LN8@read_probl
	mov	rcx, rax
	sub	rcx, r15
	mov	QWORD PTR tv456[rsp], rcx
	npad	7
$LL10@read_probl:
; Line 124
	movsxd	rax, ebp
	mov	QWORD PTR [rcx+r15], rax
; Line 126
	mov	rcx, QWORD PTR fp$1$[rsp]
	call	readline
; Line 128
	mov	rcx, QWORD PTR line
	lea	rdx, OFFSET FLAT:??_C@_02OJDBNLEE@?5?7?$AA@
	call	QWORD PTR __imp_strtok
; Line 129
	lea	rdx, QWORD PTR endptr$[rsp]
	mov	rcx, rax
	mov	rbx, rax
	call	QWORD PTR __imp_strtod
	movsdx	QWORD PTR [r15], xmm0
; Line 130
	cmp	QWORD PTR endptr$[rsp], rbx
	je	$LN44@read_probl
; Line 140
	lea	rdx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3?$AA@
	xor	ecx, ecx
	call	QWORD PTR __imp_strtok
; Line 141
	lea	rdx, OFFSET FLAT:??_C@_02OJDBNLEE@?5?7?$AA@
	xor	ecx, ecx
	mov	rsi, rax
	call	QWORD PTR __imp_strtok
	mov	rbx, rax
; Line 142
	test	rax, rax
	je	$LN9@read_probl
	mov	rax, QWORD PTR samples$1$[rsp]
	mov	r14, QWORD PTR ir$1$[rsp]
	lea	rdi, QWORD PTR [rax+r13*8]
	sub	r14, rax
	npad	6
$LL6@read_probl:
; Line 145
	lea	rdx, QWORD PTR endptr$[rsp]
	mov	r8d, 10
	mov	rcx, rsi
	call	QWORD PTR __imp_strtol
	sub	eax, r12d
	cdqe
	mov	QWORD PTR [r14+rdi], rax
; Line 147
	call	QWORD PTR __imp__errno
; Line 148
	lea	rdx, QWORD PTR endptr$[rsp]
	mov	rcx, rbx
	mov	DWORD PTR [rax], 0
	call	QWORD PTR __imp_strtod
	movsdx	QWORD PTR [rdi], xmm0
; Line 149
	cmp	QWORD PTR endptr$[rsp], rbx
	je	$LN43@read_probl
	call	QWORD PTR __imp__errno
	cmp	DWORD PTR [rax], 0
	jne	$LN43@read_probl
	mov	rax, QWORD PTR endptr$[rsp]
	movzx	ecx, BYTE PTR [rax]
	test	cl, cl
	je	SHORT $LN3@read_probl
	movsx	ecx, cl
	call	QWORD PTR __imp_isspace
	test	eax, eax
	je	SHORT $LN43@read_probl
$LN3@read_probl:
; Line 140
	lea	rdx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3?$AA@
	xor	ecx, ecx
; Line 155
	inc	ebp
	inc	r13
	add	rdi, 8
	call	QWORD PTR __imp_strtok
	lea	rdx, OFFSET FLAT:??_C@_02OJDBNLEE@?5?7?$AA@
	xor	ecx, ecx
	mov	rsi, rax
	call	QWORD PTR __imp_strtok
	mov	rbx, rax
	test	rax, rax
	jne	$LL6@read_probl
	mov	rdi, QWORD PTR $T5774[rsp]
	mov	r14, QWORD PTR $T5773[rsp]
$LN9@read_probl:
	mov	esi, DWORD PTR i$1$[rsp]
	inc	rdi
	add	r15, 8
	inc	esi
	cmp	rdi, r14
	mov	QWORD PTR $T5774[rsp], rdi
	mov	DWORD PTR i$1$[rsp], esi
	jge	SHORT $LN48@read_probl
; Line 121
	mov	rcx, QWORD PTR tv456[rsp]
	jmp	$LL10@read_probl
$LN43@read_probl:
; Line 151
	mov	edx, DWORD PTR i$1$[rsp]
	inc	edx
; Line 153
	jmp	$LN53@read_probl
$LN48@read_probl:
; Line 130
	mov	rbx, QWORD PTR plhs$[rsp]
$LN8@read_probl:
; Line 158
	mov	rdx, QWORD PTR jc$1$[rsp]
; Line 160
	mov	rcx, QWORD PTR fp$1$[rsp]
	movsxd	rax, ebp
	mov	QWORD PTR [rdx+r14*8], rax
	call	QWORD PTR __imp_fclose
; Line 161
	mov	rcx, QWORD PTR line
	call	QWORD PTR __imp_free
; Line 165
	mov	r11, QWORD PTR [rbx+8]
; Line 166
	lea	rax, OFFSET FLAT:??_C@_09KDFGPPLL@transpose?$AA@
	mov	r8d, 1
	lea	r9, QWORD PTR rhs$5616[rsp]
	lea	rdx, QWORD PTR lhs$5617[rsp]
	mov	ecx, r8d
	mov	QWORD PTR rhs$5616[rsp], r11
	mov	QWORD PTR [rsp+32], rax
	call	mexCallMATLAB
	test	eax, eax
	je	SHORT $LN1@read_probl
; Line 168
	lea	rcx, OFFSET FLAT:??_C@_0CB@EPKLPFFO@Error?3?5cannot?5transpose?5problem?6@
	call	mexPrintf
; Line 169
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	mxCreateDoubleMatrix_730
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [rbx], rax
	call	mxCreateDoubleMatrix_730
; Line 170
	jmp	SHORT $LN55@read_probl
$LN44@read_probl:
; Line 132
	lea	edx, DWORD PTR [rsi+1]
$LN53@read_probl:
	lea	rcx, OFFSET FLAT:??_C@_0BP@IHPDPOAF@Wrong?5input?5format?5at?5line?5?$CFd?6?$AA@
	call	mexPrintf
; Line 133
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	mxCreateDoubleMatrix_730
	mov	r15, QWORD PTR plhs$[rsp]
$LN54@read_probl:
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [r15], rax
	call	mxCreateDoubleMatrix_730
	mov	QWORD PTR [r15+8], rax
; Line 134
	jmp	SHORT $LN52@read_probl
$LN1@read_probl:
; Line 172
	mov	rax, QWORD PTR lhs$5617[rsp]
$LN55@read_probl:
	mov	QWORD PTR [rbx+8], rax
$LN52@read_probl:
	mov	r12, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	mov	rbp, QWORD PTR [rsp+176]
	mov	r13, QWORD PTR [rsp+112]
; Line 174
	add	rsp, 136				; 00000088H
	pop	r15
	pop	r14
	pop	rdi
	pop	rbx
	ret	0
read_problem ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	mexFunction
EXTRN	__GSHandlerCheck:PROC
EXTRN	mxGetString_730:PROC
EXTRN	mxGetN:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$mexFunction DD imagerel $LN10
	DD	imagerel $LN10+159
	DD	imagerel $unwind$mexFunction
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$mexFunction DD 051f19H
	DD	028340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0120H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT mexFunction
_TEXT	SEGMENT
filename$5631 = 32
__$ArrayPad$ = 288
nlhs$ = 320
plhs$ = 328
nrhs$ = 336
prhs$ = 344
mexFunction PROC					; COMDAT
; Line 178
$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r9
	mov	rdi, rdx
; Line 179
	cmp	r8d, 1
	jne	SHORT $LN3@mexFunctio
; Line 183
	mov	rcx, QWORD PTR [r9]
	call	mxGetN
	mov	rcx, QWORD PTR [rbx]
	lea	rdx, QWORD PTR filename$5631[rsp]
	lea	r8, QWORD PTR [rax+1]
	call	mxGetString_730
; Line 191
	lea	rcx, QWORD PTR filename$5631[rsp]
	mov	rdx, rdi
	call	read_problem
; Line 193
	jmp	SHORT $LN1@mexFunctio
$LN3@mexFunctio:
; Line 195
	lea	rcx, OFFSET FLAT:??_C@_0EC@FOAPJCNC@Usage?3?5?$FLlabel_vector?0?5instance_m@
	call	mexPrintf
; Line 196
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	mxCreateDoubleMatrix_730
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [rdi], rax
	call	mxCreateDoubleMatrix_730
	mov	QWORD PTR [rdi+8], rax
$LN1@mexFunctio:
; Line 199
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+320]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
mexFunction ENDP
_TEXT	ENDS
END
