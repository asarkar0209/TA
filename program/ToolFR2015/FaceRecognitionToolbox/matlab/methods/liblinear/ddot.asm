; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	ddot_
EXTRN	_fltused:DWORD
;	COMDAT pdata
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\blas\ddot.c
pdata	SEGMENT
$pdata$ddot_ DD	imagerel $LN34
	DD	imagerel $LN34+35
	DD	imagerel $unwind$ddot_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$ddot_ DD imagerel $LN34+35
	DD	imagerel $LN34+430
	DD	imagerel $chain$0$ddot_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$ddot_ DD imagerel $LN34+430
	DD	imagerel $LN34+670
	DD	imagerel $chain$2$ddot_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$ddot_ DD imagerel $LN34+670
	DD	imagerel $LN34+681
	DD	imagerel $chain$3$ddot_
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$ddot_ DD 021H
	DD	imagerel $LN34
	DD	imagerel $LN34+35
	DD	imagerel $unwind$ddot_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$ddot_ DD 020021H
	DD	027400H
	DD	imagerel $LN34
	DD	imagerel $LN34+35
	DD	imagerel $unwind$ddot_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$ddot_ DD 020521H
	DD	027405H
	DD	imagerel $LN34
	DD	imagerel $LN34+35
	DD	imagerel $unwind$ddot_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ddot_ DD 030601H
	DD	033406H
	DD	06006H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ddot_
_TEXT	SEGMENT
n$ = 16
sx$ = 24
incx$ = 32
sy$ = 40
incy$ = 48
ddot_	PROC						; COMDAT
; Line 4
$LN34:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
; Line 15
	movsxd	rbx, DWORD PTR [rcx]
; Line 17
	mov	rax, QWORD PTR incy$[rsp]
	movsxd	r11, DWORD PTR [r8]
; Line 19
	xorpd	xmm3, xmm3
	movsxd	rsi, DWORD PTR [rax]
	mov	r10, rdx
; Line 20
	test	ebx, ebx
	jle	$LN29@ddot_
	mov	QWORD PTR [rsp+16], rdi
; Line 22
	cmp	r11d, 1
	jne	$LN13@ddot_
	cmp	esi, r11d
	jne	$LN13@ddot_
; Line 24
	lea	eax, DWORD PTR [rbx-4]
; Line 25
	xor	edi, edi
	movsxd	rcx, eax
	test	eax, eax
	jle	$LN10@ddot_
	mov	rsi, rdx
	lea	r11, QWORD PTR [rdx+24]
	mov	rax, -3689348814741910323		; cccccccccccccccdH
	sub	rsi, r9
	dec	rcx
	lea	r8, QWORD PTR [r9+8]
	mul	rcx
	shr	rdx, 2
	inc	rdx
	lea	edi, DWORD PTR [rdx+rdx*4]
$LL12@ddot_:
; Line 27
	movsdx	xmm2, QWORD PTR [r8-8]
	movsdx	xmm0, QWORD PTR [rsi+r8]
	movsdx	xmm1, QWORD PTR [r8+8]
	add	r8, 40					; 00000028H
	add	r11, 40					; 00000028H
	sub	rdx, 1
	mulsd	xmm2, QWORD PTR [r11-64]
	mulsd	xmm0, QWORD PTR [r8-40]
	mulsd	xmm1, QWORD PTR [r11-48]
	addsd	xmm2, xmm0
	movsdx	xmm0, QWORD PTR [r8-24]
	addsd	xmm2, xmm1
	movsdx	xmm1, QWORD PTR [r8-16]
	mulsd	xmm0, QWORD PTR [r11-40]
	mulsd	xmm1, QWORD PTR [r11-32]
	addsd	xmm2, xmm0
	addsd	xmm2, xmm1
	addsd	xmm3, xmm2
	jne	SHORT $LL12@ddot_
$LN10@ddot_:
; Line 25
	movsxd	rdx, edi
; Line 29
	mov	rcx, rbx
	cmp	rdx, rbx
	jge	$LN30@ddot_
	mov	rax, rbx
	sub	rax, rdx
	cmp	rax, 4
	jl	$LC24@ddot_
	mov	rax, rcx
	mov	rbx, r10
	lea	r11, QWORD PTR [r10+rdx*8+24]
	sub	rax, rdx
	sub	rbx, r9
	lea	r8, QWORD PTR [r9+rdx*8+8]
	sub	rax, 4
	shr	rax, 2
	inc	rax
	lea	rdx, QWORD PTR [rdx+rax*4]
	npad	11
$LL25@ddot_:
; Line 30
	movsdx	xmm1, QWORD PTR [r8-8]
	movsdx	xmm0, QWORD PTR [rbx+r8]
	add	r8, 32					; 00000020H
	add	r11, 32					; 00000020H
	sub	rax, 1
	mulsd	xmm1, QWORD PTR [r11-56]
	mulsd	xmm0, QWORD PTR [r8-32]
	addsd	xmm1, xmm3
	movapd	xmm3, xmm1
	movsdx	xmm1, QWORD PTR [r8-24]
	addsd	xmm3, xmm0
	movsdx	xmm0, QWORD PTR [r8-16]
	mulsd	xmm1, QWORD PTR [r11-40]
	mulsd	xmm0, QWORD PTR [r11-32]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm0
	jne	SHORT $LL25@ddot_
$LC24@ddot_:
; Line 29
	cmp	rdx, rcx
	jge	$LN30@ddot_
	sub	r10, r9
	lea	rax, QWORD PTR [r9+rdx*8]
	sub	rcx, rdx
$LC9@ddot_:
; Line 30
	movsdx	xmm1, QWORD PTR [r10+rax]
	add	rax, 8
	sub	rcx, 1
	mulsd	xmm1, QWORD PTR [rax-8]
	addsd	xmm3, xmm1
	jne	SHORT $LC9@ddot_
; Line 49
	movapd	xmm0, xmm3
	mov	rdi, QWORD PTR [rsp+16]
; Line 50
	mov	rbx, QWORD PTR [rsp+24]
	pop	rsi
	ret	0
$LN13@ddot_:
; Line 34
	xor	edi, edi
	mov	eax, edi
; Line 35
	mov	edx, edi
; Line 36
	test	r11d, r11d
	jns	SHORT $LN5@ddot_
; Line 37
	mov	eax, 1
	sub	eax, ebx
	imul	eax, r11d
$LN5@ddot_:
; Line 38
	test	esi, esi
	jns	SHORT $LN4@ddot_
; Line 39
	mov	edx, 1
	sub	edx, ebx
	imul	edx, esi
$LN4@ddot_:
; Line 40
	cmp	ebx, 4
	mov	r8, r11
	movsxd	rcx, eax
	mov	r11, rsi
	movsxd	rdx, edx
	jl	SHORT $LC27@ddot_
	lea	eax, DWORD PTR [rbx-4]
	shr	eax, 2
	inc	eax
	lea	edi, DWORD PTR [rax*4]
	npad	14
$LL28@ddot_:
; Line 42
	movsdx	xmm0, QWORD PTR [r10+rcx*8]
; Line 43
	add	rcx, r8
	mulsd	xmm0, QWORD PTR [r9+rdx*8]
; Line 44
	add	rdx, rsi
	addsd	xmm3, xmm0
	movsdx	xmm0, QWORD PTR [r10+rcx*8]
	add	rcx, r8
	mulsd	xmm0, QWORD PTR [r9+rdx*8]
	add	rdx, rsi
	addsd	xmm3, xmm0
	movsdx	xmm0, QWORD PTR [r10+rcx*8]
	add	rcx, r8
	mulsd	xmm0, QWORD PTR [r9+rdx*8]
	add	rdx, rsi
	addsd	xmm3, xmm0
	movsdx	xmm0, QWORD PTR [r10+rcx*8]
	add	rcx, r8
	mulsd	xmm0, QWORD PTR [r9+rdx*8]
	add	rdx, rsi
	sub	rax, 1
	addsd	xmm3, xmm0
	jne	SHORT $LL28@ddot_
$LC27@ddot_:
; Line 40
	cmp	edi, ebx
	jge	SHORT $LN30@ddot_
	shl	r11, 3
	shl	r8, 3
	sub	ebx, edi
	lea	rax, QWORD PTR [r9+rdx*8]
	lea	rdx, QWORD PTR [r10+rcx*8]
	mov	ecx, ebx
$LC3@ddot_:
; Line 42
	movsdx	xmm0, QWORD PTR [rax]
; Line 44
	add	rax, r11
	mulsd	xmm0, QWORD PTR [rdx]
	add	rdx, r8
	sub	rcx, 1
	addsd	xmm3, xmm0
	jne	SHORT $LC3@ddot_
$LN30@ddot_:
; Line 49
	movapd	xmm0, xmm3
	mov	rdi, QWORD PTR [rsp+16]
; Line 50
	mov	rbx, QWORD PTR [rsp+24]
	pop	rsi
	ret	0
$LN29@ddot_:
; Line 49
	movapd	xmm0, xmm3
; Line 50
	mov	rbx, QWORD PTR [rsp+24]
	pop	rsi
	ret	0
ddot_	ENDP
_TEXT	ENDS
END
