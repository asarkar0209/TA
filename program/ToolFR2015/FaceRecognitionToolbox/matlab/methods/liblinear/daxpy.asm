; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__real@0000000000000000
PUBLIC	daxpy_
EXTRN	_fltused:DWORD
;	COMDAT pdata
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\blas\daxpy.c
pdata	SEGMENT
$pdata$daxpy_ DD imagerel $LN40
	DD	imagerel $LN40+54
	DD	imagerel $unwind$daxpy_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$daxpy_ DD imagerel $LN40+54
	DD	imagerel $LN40+460
	DD	imagerel $chain$0$daxpy_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$daxpy_ DD imagerel $LN40+460
	DD	imagerel $LN40+478
	DD	imagerel $chain$2$daxpy_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$daxpy_ DD imagerel $LN40+478
	DD	imagerel $LN40+700
	DD	imagerel $chain$3$daxpy_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$daxpy_ DD imagerel $LN40+700
	DD	imagerel $LN40+705
	DD	imagerel $chain$4$daxpy_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$daxpy_ DD imagerel $LN40+705
	DD	imagerel $LN40+712
	DD	imagerel $chain$5$daxpy_
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$daxpy_ DD 021H
	DD	imagerel $LN40
	DD	imagerel $LN40+54
	DD	imagerel $unwind$daxpy_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$daxpy_ DD 021H
	DD	imagerel $LN40+460
	DD	imagerel $LN40+478
	DD	imagerel $chain$2$daxpy_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$daxpy_ DD 020421H
	DD	07404H
	DD	imagerel $LN40+460
	DD	imagerel $LN40+478
	DD	imagerel $chain$2$daxpy_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$daxpy_ DD 020021H
	DD	023400H
	DD	imagerel $LN40
	DD	imagerel $LN40+54
	DD	imagerel $unwind$daxpy_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$daxpy_ DD 020521H
	DD	023405H
	DD	imagerel $LN40
	DD	imagerel $LN40+54
	DD	imagerel $unwind$daxpy_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$daxpy_ DD 010401H
	DD	0204H
xdata	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT daxpy_
_TEXT	SEGMENT
n$ = 16
sa$ = 24
sx$ = 32
incx$ = 40
sy$ = 48
incy$ = 56
daxpy_	PROC						; COMDAT
; Line 5
$LN40:
	sub	rsp, 8
; Line 15
	movsxd	r10, DWORD PTR [rcx]
; Line 18
	mov	rax, QWORD PTR incy$[rsp]
	movsxd	r11, DWORD PTR [r9]
	movsdx	xmm2, QWORD PTR [rdx]
	movsxd	r9, DWORD PTR [rax]
; Line 20
	test	r10d, r10d
	jle	$LN33@daxpy_
	ucomisd	xmm2, QWORD PTR __real@0000000000000000
	jp	SHORT $LN32@daxpy_
; Line 48
	je	$LN33@daxpy_
$LN32@daxpy_:
; Line 22
	mov	eax, 1
	xor	edx, edx
	mov	QWORD PTR [rsp+16], rbx
	cmp	r11d, eax
	jne	$LN11@daxpy_
	cmp	r9d, eax
	jne	$LN31@daxpy_
; Line 25
	mov	r11, QWORD PTR sy$[rsp]
	lea	eax, DWORD PTR [r10-3]
	cdqe
	test	rax, rax
	jle	$LN8@daxpy_
	mov	rbx, r8
	lea	r9, QWORD PTR [r8+24]
	lea	rcx, QWORD PTR [r11+8]
	sub	rbx, r11
	dec	rax
	shr	rax, 2
	inc	rax
	lea	edx, DWORD PTR [rax*4]
$LL10@daxpy_:
; Line 27
	movapd	xmm0, xmm2
; Line 28
	movapd	xmm1, xmm2
	add	rcx, 32					; 00000020H
	add	r9, 32					; 00000020H
	sub	rax, 1
	mulsd	xmm0, QWORD PTR [r9-56]
	addsd	xmm0, QWORD PTR [rcx-40]
	movsdx	QWORD PTR [rcx-40], xmm0
; Line 29
	movapd	xmm0, xmm2
	mulsd	xmm1, QWORD PTR [rbx+rcx-32]
	addsd	xmm1, QWORD PTR [rcx-32]
	movsdx	QWORD PTR [rcx-32], xmm1
; Line 30
	movapd	xmm1, xmm2
	mulsd	xmm0, QWORD PTR [r9-40]
	addsd	xmm0, QWORD PTR [rcx-24]
	movsdx	QWORD PTR [rcx-24], xmm0
	mulsd	xmm1, QWORD PTR [r9-32]
	addsd	xmm1, QWORD PTR [rcx-16]
	movsdx	QWORD PTR [rcx-16], xmm1
	jne	SHORT $LL10@daxpy_
$LN8@daxpy_:
; Line 25
	movsxd	rdx, edx
; Line 32
	mov	rcx, r10
	cmp	rdx, r10
	jge	$LN36@daxpy_
	mov	rax, rcx
	sub	rax, rdx
	cmp	rax, 4
	jl	$LC26@daxpy_
	mov	r9, rcx
	mov	rbx, r8
	lea	r10, QWORD PTR [r8+rdx*8+24]
	sub	r9, rdx
	sub	rbx, r11
	lea	rax, QWORD PTR [r11+rdx*8+8]
	sub	r9, 4
	shr	r9, 2
	inc	r9
	lea	rdx, QWORD PTR [rdx+r9*4]
	npad	14
$LL27@daxpy_:
; Line 33
	movapd	xmm0, xmm2
	movapd	xmm1, xmm2
	add	rax, 32					; 00000020H
	add	r10, 32					; 00000020H
	sub	r9, 1
	mulsd	xmm0, QWORD PTR [r10-56]
	addsd	xmm0, QWORD PTR [rax-40]
	movsdx	QWORD PTR [rax-40], xmm0
	movapd	xmm0, xmm2
	mulsd	xmm1, QWORD PTR [rbx+rax-32]
	addsd	xmm1, QWORD PTR [rax-32]
	movsdx	QWORD PTR [rax-32], xmm1
	movapd	xmm1, xmm2
	mulsd	xmm0, QWORD PTR [r10-40]
	addsd	xmm0, QWORD PTR [rax-24]
	movsdx	QWORD PTR [rax-24], xmm0
	mulsd	xmm1, QWORD PTR [r10-32]
	addsd	xmm1, QWORD PTR [rax-16]
	movsdx	QWORD PTR [rax-16], xmm1
	jne	SHORT $LL27@daxpy_
$LC26@daxpy_:
; Line 32
	cmp	rdx, rcx
	jge	$LN36@daxpy_
	sub	r8, r11
	lea	rax, QWORD PTR [r11+rdx*8]
	sub	rcx, rdx
$LC7@daxpy_:
; Line 33
	movapd	xmm0, xmm2
	add	rax, 8
	sub	rcx, 1
	mulsd	xmm0, QWORD PTR [r8+rax-8]
	addsd	xmm0, QWORD PTR [rax-8]
	movsdx	QWORD PTR [rax-8], xmm0
	jne	SHORT $LC7@daxpy_
	mov	rbx, QWORD PTR [rsp+16]
; Line 48
	xor	eax, eax
; Line 49
	add	rsp, 8
	ret	0
$LN11@daxpy_:
; Line 37
	test	r11d, r11d
	js	SHORT $LN15@daxpy_
$LN31@daxpy_:
	mov	ecx, edx
	jmp	SHORT $LN16@daxpy_
$LN15@daxpy_:
	mov	ecx, eax
	sub	ecx, r10d
	imul	ecx, r11d
$LN16@daxpy_:
	mov	QWORD PTR [rsp], rdi
; Line 38
	test	r9d, r9d
	js	SHORT $LN17@daxpy_
	mov	eax, edx
	jmp	SHORT $LN18@daxpy_
$LN17@daxpy_:
	sub	eax, r10d
	imul	eax, r9d
$LN18@daxpy_:
; Line 39
	cmp	r10d, 4
	mov	rdi, QWORD PTR sy$[rsp]
	movsxd	rbx, ecx
	movsxd	rcx, eax
	jl	SHORT $LC29@daxpy_
	lea	eax, DWORD PTR [r10-4]
	shr	eax, 2
	inc	eax
	lea	edx, DWORD PTR [rax*4]
$LL30@daxpy_:
; Line 41
	movapd	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [r8+rbx*8]
; Line 42
	add	rbx, r11
	addsd	xmm0, QWORD PTR [rdi+rcx*8]
	movsdx	QWORD PTR [rdi+rcx*8], xmm0
	movapd	xmm0, xmm2
; Line 43
	add	rcx, r9
	mulsd	xmm0, QWORD PTR [r8+rbx*8]
	add	rbx, r11
	addsd	xmm0, QWORD PTR [rdi+rcx*8]
	movsdx	QWORD PTR [rdi+rcx*8], xmm0
	movapd	xmm0, xmm2
	add	rcx, r9
	mulsd	xmm0, QWORD PTR [r8+rbx*8]
	add	rbx, r11
	addsd	xmm0, QWORD PTR [rdi+rcx*8]
	movsdx	QWORD PTR [rdi+rcx*8], xmm0
	movapd	xmm0, xmm2
	add	rcx, r9
	mulsd	xmm0, QWORD PTR [r8+rbx*8]
	add	rbx, r11
	addsd	xmm0, QWORD PTR [rdi+rcx*8]
	movsdx	QWORD PTR [rdi+rcx*8], xmm0
	add	rcx, r9
	sub	rax, 1
	jne	SHORT $LL30@daxpy_
$LC29@daxpy_:
; Line 39
	cmp	edx, r10d
	jge	SHORT $LN35@daxpy_
	shl	r9, 3
	shl	r11, 3
	sub	r10d, edx
	lea	rax, QWORD PTR [rdi+rcx*8]
	lea	rcx, QWORD PTR [r8+rbx*8]
	mov	edx, r10d
$LC3@daxpy_:
; Line 41
	movapd	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [rcx]
; Line 42
	add	rcx, r11
	addsd	xmm0, QWORD PTR [rax]
	movsdx	QWORD PTR [rax], xmm0
; Line 43
	add	rax, r9
	sub	rdx, 1
	jne	SHORT $LC3@daxpy_
$LN35@daxpy_:
	mov	rdi, QWORD PTR [rsp]
$LN36@daxpy_:
	mov	rbx, QWORD PTR [rsp+16]
$LN33@daxpy_:
; Line 48
	xor	eax, eax
; Line 49
	add	rsp, 8
	ret	0
daxpy_	ENDP
_TEXT	ENDS
END
