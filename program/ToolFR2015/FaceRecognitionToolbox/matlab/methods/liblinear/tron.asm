; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

EXTRN	__imp_fflush:PROC
EXTRN	__imp_fputs:PROC
EXTRN	__imp___iob_func:PROC
;	COMDAT pdata
; File c:\users\brian c. becker\downloads\liblinear-1.7\liblinear-1.7\tron.cpp
pdata	SEGMENT
$pdata$?default_print@@YAXPEBD@Z DD imagerel ?default_print@@YAXPEBD@Z
	DD	imagerel ?default_print@@YAXPEBD@Z+50
	DD	imagerel $unwind$?default_print@@YAXPEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?default_print@@YAXPEBD@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?default_print@@YAXPEBD@Z
_TEXT	SEGMENT
buf$ = 48
?default_print@@YAXPEBD@Z PROC				; default_print, COMDAT
; Line 29
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 30
	call	QWORD PTR __imp___iob_func
	mov	rcx, rbx
	lea	rdx, QWORD PTR [rax+48]
	call	QWORD PTR __imp_fputs
; Line 31
	call	QWORD PTR __imp___iob_func
	lea	rcx, QWORD PTR [rax+48]
; Line 32
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_fflush
?default_print@@YAXPEBD@Z ENDP				; default_print
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?info@TRON@@AEAAXPEBDZZ				; TRON::info
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_vsprintf:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?info@TRON@@AEAAXPEBDZZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?info@TRON@@AEAAXPEBDZZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?info@TRON@@AEAAXPEBDZZ DD 032919H
	DD	0460117H
	DD	03010H
	DD	imagerel __GSHandlerCheck
	DD	0220H
; Function compile flags: /Ogtp
xdata	ENDS
;	COMDAT ?info@TRON@@AEAAXPEBDZZ
_TEXT	SEGMENT
buf$ = 32
__$ArrayPad$ = 544
this$ = 576
fmt$ = 584
?info@TRON@@AEAAXPEBDZZ PROC				; TRON::info, COMDAT
; Line 35
$LN3:
	mov	r11, rsp
	mov	QWORD PTR [r11+16], rdx
	mov	QWORD PTR [r11+24], r8
	mov	QWORD PTR [r11+32], r9
	push	rbx
	sub	rsp, 560				; 00000230H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
; Line 38
	lea	r8, QWORD PTR [r11+24]
; Line 39
	lea	rcx, QWORD PTR buf$[rsp]
	call	QWORD PTR __imp_vsprintf
; Line 41
	lea	rcx, QWORD PTR buf$[rsp]
	call	QWORD PTR [rbx+24]
; Line 42
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 560				; 00000230H
	pop	rbx
	ret	0
?info@TRON@@AEAAXPEBDZZ ENDP				; TRON::info
_TEXT	ENDS
PUBLIC	??0TRON@@QEAA@PEBVfunction@@NH@Z		; TRON::TRON
EXTRN	_fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ??0TRON@@QEAA@PEBVfunction@@NH@Z
_TEXT	SEGMENT
this$ = 8
fun_obj$ = 16
eps$ = 24
max_iter$ = 32
??0TRON@@QEAA@PEBVfunction@@NH@Z PROC			; TRON::TRON, COMDAT
; Line 49
	lea	rax, OFFSET FLAT:?default_print@@YAXPEBD@Z ; default_print
	movsdx	QWORD PTR [rcx], xmm2
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [rcx+24], rax
; Line 50
	mov	rax, rcx
	mov	DWORD PTR [rcx+8], r9d
	ret	0
??0TRON@@QEAA@PEBVfunction@@NH@Z ENDP			; TRON::TRON
_TEXT	ENDS
PUBLIC	??1TRON@@QEAA@XZ				; TRON::~TRON
; Function compile flags: /Ogtp
;	COMDAT ??1TRON@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1TRON@@QEAA@XZ PROC					; TRON::~TRON, COMDAT
; Line 54
	ret	0
??1TRON@@QEAA@XZ ENDP					; TRON::~TRON
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	??_C@_0CC@IHJOIHK@cg?5reaches?5trust?5region?5boundary@ ; `string'
PUBLIC	__real@3fb999999999999a
PUBLIC	__mask@@NegDouble@
PUBLIC	__real@3ff0000000000000
PUBLIC	?trcg@TRON@@AEAAHNPEAN00@Z			; TRON::trcg
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	dscal_:PROC
EXTRN	daxpy_:PROC
EXTRN	ddot_:PROC
EXTRN	dnrm2_:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	sqrt:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?trcg@TRON@@AEAAHNPEAN00@Z DD imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?trcg@TRON@@AEAAHNPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?trcg@TRON@@AEAAHNPEAN00@Z DD imagerel $LN20+62
	DD	imagerel $LN20+362
	DD	imagerel $chain$0$?trcg@TRON@@AEAAHNPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?trcg@TRON@@AEAAHNPEAN00@Z DD imagerel $LN20+362
	DD	imagerel $LN20+1155
	DD	imagerel $chain$2$?trcg@TRON@@AEAAHNPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?trcg@TRON@@AEAAHNPEAN00@Z DD imagerel $LN20+1155
	DD	imagerel $LN20+1216
	DD	imagerel $chain$1$?trcg@TRON@@AEAAHNPEAN00@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?trcg@TRON@@AEAAHNPEAN00@Z DD 021H
	DD	imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?trcg@TRON@@AEAAHNPEAN00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?trcg@TRON@@AEAAHNPEAN00@Z DD 020821H
	DD	096808H
	DD	imagerel $LN20+1155
	DD	imagerel $LN20+1216
	DD	imagerel $chain$1$?trcg@TRON@@AEAAHNPEAN00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?trcg@TRON@@AEAAHNPEAN00@Z DD 020421H
	DD	01bd404H
	DD	imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?trcg@TRON@@AEAAHNPEAN00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?trcg@TRON@@AEAAHNPEAN00@Z DD 0113e01H
	DD	05a83eH
	DD	069823H
	DD	07881eH
	DD	087819H
	DD	01c3415H
	DD	0140115H
	DD	0c00ce00eH
	DD	06009700aH
	DD	05008H
xdata	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0CC@IHJOIHK@cg?5reaches?5trust?5region?5boundary@
CONST	SEGMENT
??_C@_0CC@IHJOIHK@cg?5reaches?5trust?5region?5boundary@ DB 'cg reaches tr'
	DB	'ust region boundary', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __mask@@NegDouble@
CONST	SEGMENT
__mask@@NegDouble@ DB 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?trcg@TRON@@AEAAHNPEAN00@Z
_TEXT	SEGMENT
n$ = 48
alpha$ = 56
beta$ = 64
one$ = 72
inc$ = 208
this$ = 208
delta$ = 216
g$ = 224
s$ = 232
r$ = 240
?trcg@TRON@@AEAAHNPEAN00@Z PROC				; TRON::trcg, COMDAT
; Line 161
$LN20:
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	sub	rsp, 160				; 000000a0H
	movaps	XMMWORD PTR [rax-72], xmm7
	movaps	XMMWORD PTR [rax-88], xmm8
	movaps	XMMWORD PTR [rax-104], xmm9
	mov	r14, rcx
; Line 163
	mov	rcx, QWORD PTR [rcx+16]
	mov	DWORD PTR [rax+8], 1
	movapd	xmm8, xmm1
	mov	r12, r9
	movaps	XMMWORD PTR [rax-120], xmm10
	mov	QWORD PTR [rax+16], r13
	mov	rax, QWORD PTR [rcx]
	mov	r13, r8
	call	QWORD PTR [rax+24]
; Line 165
	mov	rdi, -1
	movsdx	xmm0, QWORD PTR __real@3ff0000000000000
	mov	DWORD PTR n$[rsp], eax
	movsxd	rdx, eax
	movsdx	QWORD PTR one$[rsp], xmm0
	mov	eax, 8
	mul	rdx
	cmovo	rax, rdi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 166
	movsxd	rcx, DWORD PTR n$[rsp]
	mov	rbx, rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rdi
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 169
	mov	rsi, QWORD PTR r$[rsp]
	xor	edi, edi
	movsdx	xmm7, QWORD PTR __mask@@NegDouble@
	mov	edx, edi
	mov	rbp, rax
	cmp	DWORD PTR n$[rsp], edx
	jle	SHORT $LN7@trcg
	mov	r8, r12
	mov	r9, rsi
	mov	rax, rbx
	sub	r8, r13
	sub	r9, r13
	sub	rax, r13
	mov	rcx, r13
	npad	7
$LL9@trcg:
; Line 171
	mov	QWORD PTR [r8+rcx], rdi
; Line 172
	movsdx	xmm0, QWORD PTR [rcx]
	inc	edx
	add	rcx, 8
	xorpd	xmm0, xmm7
	movsdx	QWORD PTR [r9+rcx-8], xmm0
; Line 173
	movsdx	QWORD PTR [rax+rcx-8], xmm0
	cmp	edx, DWORD PTR n$[rsp]
	jl	SHORT $LL9@trcg
$LN7@trcg:
; Line 175
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	rdx, r13
	call	dnrm2_
; Line 178
	lea	rax, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, rsi
	mov	rdx, rsi
	movapd	xmm10, xmm0
	mulsd	xmm10, QWORD PTR __real@3fb999999999999a
	mov	QWORD PTR [rsp+32], rax
	call	ddot_
; Line 181
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	rdx, rsi
	movapd	xmm9, xmm0
	call	dnrm2_
	mov	r13, QWORD PTR [rsp+216]
	comisd	xmm10, xmm0
	jae	$LN5@trcg
	movaps	XMMWORD PTR [rsp+144], xmm6
	npad	14
$LL6@trcg:
; Line 184
	mov	rcx, QWORD PTR [r14+16]
	mov	r8, rbp
	mov	rdx, rbx
	mov	rax, QWORD PTR [rcx]
	inc	edi
	call	QWORD PTR [rax+16]
; Line 186
	lea	r11, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, rbp
	mov	rdx, rbx
	mov	QWORD PTR [rsp+32], r11
	call	ddot_
; Line 187
	lea	rax, QWORD PTR inc$[rsp]
	movapd	xmm1, xmm9
	mov	QWORD PTR [rsp+40], rax
	lea	r9, QWORD PTR inc$[rsp]
	lea	rdx, QWORD PTR alpha$[rsp]
	divsd	xmm1, xmm0
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, rbx
	mov	QWORD PTR [rsp+32], r12
	movsdx	QWORD PTR alpha$[rsp], xmm1
	call	daxpy_
; Line 188
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	rdx, r12
	call	dnrm2_
	comisd	xmm0, xmm8
	ja	$LN16@trcg
; Line 208
	movsdx	xmm0, QWORD PTR alpha$[rsp]
; Line 209
	lea	rax, QWORD PTR inc$[rsp]
	lea	r9, QWORD PTR inc$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, QWORD PTR alpha$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	xorpd	xmm0, xmm7
	movsdx	QWORD PTR alpha$[rsp], xmm0
	mov	r8, rbp
	mov	QWORD PTR [rsp+32], rsi
	call	daxpy_
; Line 210
	lea	r11, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, rsi
	mov	rdx, rsi
	mov	QWORD PTR [rsp+32], r11
	call	ddot_
; Line 212
	lea	r9, QWORD PTR inc$[rsp]
	lea	rdx, QWORD PTR beta$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, rbx
	movapd	xmm1, xmm0
	movapd	xmm6, xmm0
	divsd	xmm1, xmm9
	movsdx	QWORD PTR beta$[rsp], xmm1
	call	dscal_
; Line 213
	lea	r11, QWORD PTR inc$[rsp]
	mov	QWORD PTR [rsp+40], r11
	lea	r9, QWORD PTR inc$[rsp]
	lea	rdx, QWORD PTR one$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, rsi
	mov	QWORD PTR [rsp+32], rbx
	call	daxpy_
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
; Line 214
	movapd	xmm9, xmm6
	mov	rdx, rsi
	call	dnrm2_
	comisd	xmm10, xmm0
	jb	$LL6@trcg
; Line 182
	jmp	$LN19@trcg
$LN16@trcg:
; Line 190
	lea	rdx, OFFSET FLAT:??_C@_0CC@IHJOIHK@cg?5reaches?5trust?5region?5boundary@
	mov	rcx, r14
	call	?info@TRON@@AEAAXPEBDZZ			; TRON::info
; Line 192
	lea	rax, QWORD PTR inc$[rsp]
	lea	r9, QWORD PTR inc$[rsp]
	movsdx	xmm5, QWORD PTR alpha$[rsp]
	xorpd	xmm5, xmm7
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, QWORD PTR alpha$[rsp]
	movsdx	QWORD PTR alpha$[rsp], xmm5
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, rbx
	mov	QWORD PTR [rsp+32], r12
	call	daxpy_
; Line 194
	lea	r11, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, rbx
	mov	rdx, r12
	mov	QWORD PTR [rsp+32], r11
	call	ddot_
; Line 195
	lea	rax, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, r12
	movapd	xmm9, xmm0
	mov	rdx, r12
	mov	QWORD PTR [rsp+32], rax
	call	ddot_
; Line 196
	lea	rax, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, rbx
	mov	rdx, rbx
	movapd	xmm6, xmm0
	mov	QWORD PTR [rsp+32], rax
	call	ddot_
; Line 198
	movapd	xmm1, xmm9
	mulsd	xmm8, xmm8
	mulsd	xmm1, xmm9
	movapd	xmm10, xmm0
	subsd	xmm8, xmm6
	movapd	xmm0, xmm8
	mulsd	xmm0, xmm10
	addsd	xmm0, xmm1
	call	sqrt
; Line 199
	comisd	xmm9, QWORD PTR __real@0000000000000000
	jb	SHORT $LN2@trcg
; Line 200
	addsd	xmm0, xmm9
	divsd	xmm8, xmm0
	movsdx	QWORD PTR alpha$[rsp], xmm8
; Line 201
	jmp	SHORT $LN1@trcg
$LN2@trcg:
; Line 202
	subsd	xmm0, xmm9
	divsd	xmm0, xmm10
	movsdx	QWORD PTR alpha$[rsp], xmm0
$LN1@trcg:
; Line 203
	lea	rax, QWORD PTR inc$[rsp]
	lea	r9, QWORD PTR inc$[rsp]
	lea	rdx, QWORD PTR alpha$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, rbx
	mov	QWORD PTR [rsp+32], r12
	call	daxpy_
; Line 205
	lea	rax, QWORD PTR inc$[rsp]
	movsdx	xmm5, QWORD PTR alpha$[rsp]
	xorpd	xmm5, xmm7
	mov	QWORD PTR [rsp+40], rax
	lea	r9, QWORD PTR inc$[rsp]
	movsdx	QWORD PTR alpha$[rsp], xmm5
	lea	rdx, QWORD PTR alpha$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, rbp
	mov	QWORD PTR [rsp+32], rsi
	call	daxpy_
$LN19@trcg:
	movaps	xmm6, XMMWORD PTR [rsp+144]
$LN5@trcg:
; Line 217
	mov	rcx, rbx
	call	??3@YAXPEAX@Z				; operator delete
; Line 218
	mov	rcx, rbp
	call	??3@YAXPEAX@Z				; operator delete
; Line 221
	lea	r11, QWORD PTR [rsp+160]
	mov	eax, edi
	mov	rbx, QWORD PTR [r11+64]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	mov	rsp, r11
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?trcg@TRON@@AEAAHNPEAN00@Z ENDP				; TRON::trcg
_TEXT	ENDS
PUBLIC	__mask@@AbsDouble@
PUBLIC	?norm_inf@TRON@@AEAANHPEAN@Z			; TRON::norm_inf
;	COMDAT __mask@@AbsDouble@
CONST	SEGMENT
__mask@@AbsDouble@ DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?norm_inf@TRON@@AEAANHPEAN@Z
_TEXT	SEGMENT
this$ = 8
n$ = 16
x$ = 24
?norm_inf@TRON@@AEAANHPEAN@Z PROC			; TRON::norm_inf, COMDAT
; Line 225
	movsdx	xmm0, QWORD PTR [r8]
	movsdx	xmm2, QWORD PTR __mask@@AbsDouble@
	mov	ecx, 1
; Line 226
	movsxd	r9, edx
	cmp	r9, rcx
	andpd	xmm0, xmm2
	jle	$LN16@norm_inf
	lea	rax, QWORD PTR [r9-1]
	cmp	rax, 4
	jl	SHORT $LC10@norm_inf
	lea	rdx, QWORD PTR [r9-5]
	lea	rax, QWORD PTR [r8+24]
	shr	rdx, 2
	inc	rdx
	lea	rcx, QWORD PTR [rdx*4+1]
	npad	13
$LL15@norm_inf:
; Line 227
	movsdx	xmm1, QWORD PTR [rax-16]
	andpd	xmm1, xmm2
	comisd	xmm1, xmm0
	jb	SHORT $LN11@norm_inf
; Line 228
	movapd	xmm0, xmm1
$LN11@norm_inf:
; Line 227
	movsdx	xmm1, QWORD PTR [rax-8]
	andpd	xmm1, xmm2
	comisd	xmm1, xmm0
	jb	SHORT $LN12@norm_inf
; Line 228
	movapd	xmm0, xmm1
$LN12@norm_inf:
; Line 227
	movsdx	xmm1, QWORD PTR [rax]
	andpd	xmm1, xmm2
	comisd	xmm1, xmm0
	jb	SHORT $LN13@norm_inf
; Line 228
	movapd	xmm0, xmm1
$LN13@norm_inf:
; Line 227
	movsdx	xmm1, QWORD PTR [rax+8]
	andpd	xmm1, xmm2
	comisd	xmm1, xmm0
	jb	SHORT $LN14@norm_inf
; Line 228
	movapd	xmm0, xmm1
$LN14@norm_inf:
; Line 226
	add	rax, 32					; 00000020H
	sub	rdx, 1
	jne	SHORT $LL15@norm_inf
$LC10@norm_inf:
	cmp	rcx, r9
	jge	SHORT $LN16@norm_inf
$LC4@norm_inf:
; Line 227
	movsdx	xmm1, QWORD PTR [r8+rcx*8]
	andpd	xmm1, xmm2
	comisd	xmm1, xmm0
	jb	SHORT $LN3@norm_inf
; Line 228
	movapd	xmm0, xmm1
$LN3@norm_inf:
; Line 226
	inc	rcx
	cmp	rcx, r9
	jl	SHORT $LC4@norm_inf
$LN16@norm_inf:
; Line 230
	fatret	0
?norm_inf@TRON@@AEAANHPEAN@Z ENDP			; TRON::norm_inf
_TEXT	ENDS
PUBLIC	?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z	; TRON::set_print_string
; Function compile flags: /Ogtp
;	COMDAT ?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z
_TEXT	SEGMENT
this$ = 8
print_string$ = 16
?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z PROC		; TRON::set_print_string, COMDAT
; Line 234
	mov	QWORD PTR [rcx+24], rdx
; Line 235
	ret	0
?set_print_string@TRON@@QEAAXP6AXPEBD@Z@Z ENDP		; TRON::set_print_string
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$min@N@@YANNN@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$min@N@@YANNN@Z PROC					; min<double>, COMDAT
; Line 8
	comisd	xmm1, xmm0
	ja	SHORT $LN4@min
	movapd	xmm0, xmm1
$LN4@min:
	fatret	0
??$min@N@@YANNN@Z ENDP					; min<double>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$max@N@@YANNN@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
??$max@N@@YANNN@Z PROC					; max<double>, COMDAT
; Line 12
	comisd	xmm0, xmm1
	ja	SHORT $LN4@max
	movapd	xmm0, xmm1
$LN4@max:
	fatret	0
??$max@N@@YANNN@Z ENDP					; max<double>
_TEXT	ENDS
PUBLIC	??_C@_0BH@IBJJAOOD@warning?3?5f?5?$DM?5?91?40e?$CL32?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@DNMFKMBM@warning?3?5actred?5and?5prered?5too?5s@ ; `string'
PUBLIC	??_C@_0CB@FHLJBKPC@warning?3?5actred?5and?5prered?5?$DM?$DN?50?6@ ; `string'
PUBLIC	__real@3d719799812dea11
PUBLIC	__real@c693b8b5b5056e17
PUBLIC	??_C@_0ED@CACPCMJI@iter?5?$CF2d?5act?5?$CF5?43e?5pre?5?$CF5?43e?5del@ ; `string'
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3f1a36e2eb1c432d
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@3fd0000000000000
PUBLIC	?tron@TRON@@QEAAXPEAN@Z				; TRON::tron
EXTRN	memset:PROC
EXTRN	memcpy:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?tron@TRON@@QEAAXPEAN@Z DD imagerel $LN80
	DD	imagerel $LN80+352
	DD	imagerel $unwind$?tron@TRON@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?tron@TRON@@QEAAXPEAN@Z DD imagerel $LN80+352
	DD	imagerel $LN80+1373
	DD	imagerel $chain$7$?tron@TRON@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?tron@TRON@@QEAAXPEAN@Z DD imagerel $LN80+1373
	DD	imagerel $LN80+1447
	DD	imagerel $chain$8$?tron@TRON@@QEAAXPEAN@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?tron@TRON@@QEAAXPEAN@Z DD 021H
	DD	imagerel $LN80
	DD	imagerel $LN80+352
	DD	imagerel $unwind$?tron@TRON@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?tron@TRON@@QEAAXPEAN@Z DD 0106421H
	DD	0bb864H
	DD	0d985bH
	DD	0e8852H
	DD	0106849H
	DD	07f838H
	DD	08e82dH
	DD	09d81bH
	DD	0ca809H
	DD	imagerel $LN80
	DD	imagerel $LN80+352
	DD	imagerel $unwind$?tron@TRON@@QEAAXPEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?tron@TRON@@QEAAXPEAN@Z DD 0f3201H
	DD	0ac832H
	DD	0f7826H
	DD	02b3417H
	DD	0220117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
xdata	ENDS
;	COMDAT ??_C@_0BH@IBJJAOOD@warning?3?5f?5?$DM?5?91?40e?$CL32?6?$AA@
CONST	SEGMENT
??_C@_0BH@IBJJAOOD@warning?3?5f?5?$DM?5?91?40e?$CL32?6?$AA@ DB 'warning: '
	DB	'f < -1.0e+32', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DNMFKMBM@warning?3?5actred?5and?5prered?5too?5s@
CONST	SEGMENT
??_C@_0CG@DNMFKMBM@warning?3?5actred?5and?5prered?5too?5s@ DB 'warning: a'
	DB	'ctred and prered too small', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FHLJBKPC@warning?3?5actred?5and?5prered?5?$DM?$DN?50?6@
CONST	SEGMENT
??_C@_0CB@FHLJBKPC@warning?3?5actred?5and?5prered?5?$DM?$DN?50?6@ DB 'war'
	DB	'ning: actred and prered <= 0', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT __real@3d719799812dea11
CONST	SEGMENT
__real@3d719799812dea11 DQ 03d719799812dea11r	; 1e-012
CONST	ENDS
;	COMDAT __real@c693b8b5b5056e17
CONST	SEGMENT
__real@c693b8b5b5056e17 DQ 0c693b8b5b5056e17r	; -1e+032
CONST	ENDS
;	COMDAT ??_C@_0ED@CACPCMJI@iter?5?$CF2d?5act?5?$CF5?43e?5pre?5?$CF5?43e?5del@
CONST	SEGMENT
??_C@_0ED@CACPCMJI@iter?5?$CF2d?5act?5?$CF5?43e?5pre?5?$CF5?43e?5del@ DB 'i'
	DB	'ter %2d act %5.3e pre %5.3e delta %5.3e f %5.3e |g| %5.3e CG '
	DB	'%3d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f1a36e2eb1c432d
CONST	SEGMENT
__real@3f1a36e2eb1c432d DQ 03f1a36e2eb1c432dr	; 0.0001
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?tron@TRON@@QEAAXPEAN@Z
_TEXT	SEGMENT
gnorm$1$ = 80
one$ = 88
fnew$1$ = 96
gnorm1$1$ = 104
n$ = 336
this$ = 336
w$ = 344
inc$ = 352
r$1$ = 360
?tron@TRON@@QEAAXPEAN@Z PROC				; TRON::tron, COMDAT
; Line 57
$LN80:
	mov	QWORD PTR [rsp+16], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 272				; 00000110H
	mov	rbx, rcx
; Line 64
	mov	rcx, QWORD PTR [rcx+16]
	movaps	XMMWORD PTR [rsp+240], xmm7
	mov	rax, QWORD PTR [rcx]
	movaps	XMMWORD PTR [rsp+160], xmm12
	mov	r12, rdx
	call	QWORD PTR [rax+24]
; Line 68
	mov	esi, 1
; Line 69
	mov	rbp, -1
	movsdx	xmm0, QWORD PTR __real@3ff0000000000000
	mov	DWORD PTR n$[rsp], eax
	movsxd	rdx, eax
	movsdx	QWORD PTR one$[rsp], xmm0
	mov	eax, 8
	mov	edi, esi
	mov	DWORD PTR inc$[rsp], esi
	mul	rdx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 70
	movsxd	rcx, DWORD PTR n$[rsp]
	mov	r15, rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 71
	movsxd	rcx, DWORD PTR n$[rsp]
	mov	QWORD PTR r$1$[rsp], rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 72
	movsxd	rcx, DWORD PTR n$[rsp]
	mov	r13, rax
	mov	eax, 8
	mul	rcx
	cmovo	rax, rbp
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
; Line 74
	mov	ecx, DWORD PTR n$[rsp]
	mov	rbp, rax
	test	ecx, ecx
	jle	SHORT $LN20@tron
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, r12
	shl	r8, 3
	call	memset
$LN20@tron:
; Line 77
	mov	rcx, QWORD PTR [rbx+16]
	mov	rdx, r12
	mov	r8, QWORD PTR [rcx]
	call	QWORD PTR [r8]
; Line 78
	mov	rcx, QWORD PTR [rbx+16]
	mov	r8, rbp
	mov	rax, QWORD PTR [rcx]
	mov	rdx, r12
	movapd	xmm12, xmm0
	call	QWORD PTR [rax+8]
; Line 79
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	rdx, rbp
	call	dnrm2_
; Line 83
	movapd	xmm1, xmm0
	movsdx	QWORD PTR gnorm1$1$[rsp], xmm0
	movsdx	QWORD PTR gnorm$1$[rsp], xmm0
	mulsd	xmm1, QWORD PTR [rbx]
	movapd	xmm7, xmm0
	comisd	xmm1, xmm0
	jb	SHORT $LN17@tron
; Line 84
	xor	edi, edi
$LN17@tron:
; Line 88
	cmp	DWORD PTR [rbx+8], esi
	movsxd	r14, edi
	jl	$LN15@tron
	movaps	XMMWORD PTR [rsp+192], xmm10
	movsdx	xmm10, QWORD PTR __real@3fd0000000000000
	movaps	XMMWORD PTR [rsp+144], xmm13
	movsdx	xmm13, QWORD PTR __mask@@AbsDouble@
	movaps	XMMWORD PTR [rsp+128], xmm14
	xorpd	xmm14, xmm14
	movaps	XMMWORD PTR [rsp+112], xmm15
	movsdx	xmm15, QWORD PTR __real@4010000000000000
	movaps	XMMWORD PTR [rsp+256], xmm6
	movaps	XMMWORD PTR [rsp+224], xmm8
	movaps	XMMWORD PTR [rsp+208], xmm9
	movaps	XMMWORD PTR [rsp+176], xmm11
$LL16@tron:
	test	r14, r14
	je	$LN78@tron
; Line 90
	mov	rax, QWORD PTR r$1$[rsp]
	movapd	xmm1, xmm7
	mov	r9, r15
	mov	r8, rbp
	mov	rcx, rbx
	mov	QWORD PTR [rsp+32], rax
	call	?trcg@TRON@@AEAAHNPEAN00@Z		; TRON::trcg
; Line 92
	movsxd	r8, DWORD PTR n$[rsp]
	mov	rdx, r12
	shl	r8, 3
	mov	rcx, r13
	mov	edi, eax
	call	memcpy
; Line 93
	lea	r11, QWORD PTR inc$[rsp]
	lea	r9, QWORD PTR inc$[rsp]
	mov	QWORD PTR [rsp+40], r11
	lea	rdx, QWORD PTR one$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r8, r15
	mov	QWORD PTR [rsp+32], r13
	call	daxpy_
; Line 95
	lea	r11, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	r9, r15
	mov	rdx, rbp
	mov	QWORD PTR [rsp+32], r11
	call	ddot_
; Line 96
	mov	r9, QWORD PTR r$1$[rsp]
	lea	rax, QWORD PTR inc$[rsp]
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	movapd	xmm6, xmm0
	mov	rdx, r15
	mov	QWORD PTR [rsp+32], rax
	call	ddot_
; Line 97
	mov	rcx, QWORD PTR [rbx+16]
	mov	rdx, r13
	movapd	xmm9, xmm6
	mov	rax, QWORD PTR [rcx]
	subsd	xmm9, xmm0
	mulsd	xmm9, QWORD PTR __real@bfe0000000000000
	call	QWORD PTR [rax]
; Line 100
	movapd	xmm8, xmm12
; Line 103
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	rdx, r15
	movsdx	QWORD PTR fnew$1$[rsp], xmm0
	movapd	xmm11, xmm0
	subsd	xmm8, xmm0
	call	dnrm2_
	movapd	xmm5, xmm0
; Line 104
	cmp	esi, 1
	jne	SHORT $LN26@tron
; Line 105
	comisd	xmm0, xmm7
	ja	SHORT $LN26@tron
	movapd	xmm7, xmm0
$LN26@tron:
; Line 108
	movapd	xmm1, xmm11
	subsd	xmm1, xmm12
	subsd	xmm1, xmm6
	comisd	xmm14, xmm1
	jb	SHORT $LN13@tron
; Line 109
	movapd	xmm6, xmm15
; Line 110
	jmp	SHORT $LN29@tron
$LN13@tron:
; Line 111
	divsd	xmm6, xmm1
	mulsd	xmm6, QWORD PTR __real@bfe0000000000000
	comisd	xmm10, xmm6
	jbe	SHORT $LN29@tron
	movapd	xmm6, xmm10
$LN29@tron:
; Line 114
	movapd	xmm11, xmm9
	mulsd	xmm11, QWORD PTR __real@3f1a36e2eb1c432d
	comisd	xmm11, xmm8
	jbe	SHORT $LN11@tron
; Line 115
	comisd	xmm6, xmm10
	ja	SHORT $LN34@tron
	movapd	xmm6, xmm10
$LN34@tron:
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	movapd	xmm0, xmm7
	movapd	xmm7, xmm6
	mulsd	xmm7, xmm5
	comisd	xmm0, xmm7
	ja	$LN62@tron
	movapd	xmm7, xmm0
	jmp	$LN62@tron
$LN11@tron:
; Line 116
	movapd	xmm0, xmm9
	mulsd	xmm0, xmm10
	comisd	xmm0, xmm8
	jbe	SHORT $LN9@tron
; Line 117
	movapd	xmm0, xmm7
	mulsd	xmm6, xmm5
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	comisd	xmm0, xmm6
	ja	SHORT $LN42@tron
	movapd	xmm6, xmm0
$LN42@tron:
	mulsd	xmm7, xmm10
	comisd	xmm7, xmm6
	ja	SHORT $LN62@tron
	movapd	xmm7, xmm6
	jmp	SHORT $LN62@tron
$LN9@tron:
; Line 118
	movapd	xmm0, xmm9
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	comisd	xmm0, xmm8
	jbe	SHORT $LN7@tron
; Line 119
	movapd	xmm0, xmm7
	mulsd	xmm6, xmm5
	mulsd	xmm0, xmm15
	comisd	xmm0, xmm6
	ja	SHORT $LN50@tron
	movapd	xmm6, xmm0
$LN50@tron:
	mulsd	xmm7, xmm10
	comisd	xmm7, xmm6
	ja	SHORT $LN62@tron
	movapd	xmm7, xmm6
; Line 120
	jmp	SHORT $LN62@tron
$LN7@tron:
; Line 121
	movapd	xmm0, xmm7
	mulsd	xmm6, xmm5
	mulsd	xmm0, xmm15
	comisd	xmm0, xmm6
	ja	SHORT $LN58@tron
	movapd	xmm6, xmm0
$LN58@tron:
	comisd	xmm7, xmm6
	ja	SHORT $LN62@tron
	movapd	xmm7, xmm6
$LN62@tron:
; Line 123
	movsdx	xmm0, QWORD PTR gnorm$1$[rsp]
	mov	DWORD PTR [rsp+64], edi
	movapd	xmm3, xmm8
	lea	rdx, OFFSET FLAT:??_C@_0ED@CACPCMJI@iter?5?$CF2d?5act?5?$CF5?43e?5pre?5?$CF5?43e?5del@
	mov	r8d, esi
	mov	rcx, rbx
	movsdx	QWORD PTR [rsp+56], xmm0
	movsdx	QWORD PTR [rsp+48], xmm12
	movd	r9, xmm3
	movsdx	QWORD PTR [rsp+40], xmm7
	movsdx	QWORD PTR [rsp+32], xmm9
	call	?info@TRON@@AEAAXPEBDZZ			; TRON::info
; Line 125
	comisd	xmm8, xmm11
	jbe	SHORT $LN4@tron
; Line 128
	movsxd	r8, DWORD PTR n$[rsp]
	mov	rdx, r13
	mov	rcx, r12
	shl	r8, 3
	inc	esi
	call	memcpy
; Line 130
	mov	rcx, QWORD PTR [rbx+16]
	mov	r8, rbp
	movsdx	xmm12, QWORD PTR fnew$1$[rsp]
	mov	rax, QWORD PTR [rcx]
	mov	rdx, r12
	call	QWORD PTR [rax+8]
; Line 132
	lea	r8, QWORD PTR inc$[rsp]
	lea	rcx, QWORD PTR n$[rsp]
	mov	rdx, rbp
	call	dnrm2_
; Line 133
	movsdx	xmm1, QWORD PTR gnorm1$1$[rsp]
	mulsd	xmm1, QWORD PTR [rbx]
	movsdx	QWORD PTR gnorm$1$[rsp], xmm0
	comisd	xmm1, xmm0
	jae	SHORT $LN78@tron
$LN4@tron:
; Line 136
	movsdx	xmm0, QWORD PTR __real@c693b8b5b5056e17
	comisd	xmm0, xmm12
	ja	SHORT $LN66@tron
; Line 141
	andpd	xmm8, xmm13
	comisd	xmm14, xmm8
	jb	SHORT $LN2@tron
	comisd	xmm14, xmm9
	jae	SHORT $LN67@tron
$LN2@tron:
; Line 147
	movapd	xmm0, xmm12
	andpd	xmm0, xmm13
	mulsd	xmm0, QWORD PTR __real@3d719799812dea11
	comisd	xmm0, xmm8
	jb	SHORT $LN1@tron
	andpd	xmm9, xmm13
	comisd	xmm0, xmm9
	jae	SHORT $LN68@tron
$LN1@tron:
; Line 88
	cmp	esi, DWORD PTR [rbx+8]
	jle	$LL16@tron
	jmp	SHORT $LN78@tron
$LN67@tron:
; Line 143
	lea	rdx, OFFSET FLAT:??_C@_0CB@FHLJBKPC@warning?3?5actred?5and?5prered?5?$DM?$DN?50?6@
; Line 144
	jmp	SHORT $LN79@tron
$LN68@tron:
; Line 149
	lea	rdx, OFFSET FLAT:??_C@_0CG@DNMFKMBM@warning?3?5actred?5and?5prered?5too?5s@
	jmp	SHORT $LN79@tron
$LN66@tron:
; Line 138
	lea	rdx, OFFSET FLAT:??_C@_0BH@IBJJAOOD@warning?3?5f?5?$DM?5?91?40e?$CL32?6?$AA@
$LN79@tron:
	mov	rcx, rbx
	call	?info@TRON@@AEAAXPEBDZZ			; TRON::info
$LN78@tron:
	movaps	xmm8, XMMWORD PTR [rsp+224]
	movaps	xmm9, XMMWORD PTR [rsp+208]
	movaps	xmm11, XMMWORD PTR [rsp+176]
	movaps	xmm6, XMMWORD PTR [rsp+256]
	movaps	xmm10, XMMWORD PTR [rsp+192]
	movaps	xmm13, XMMWORD PTR [rsp+144]
	movaps	xmm14, XMMWORD PTR [rsp+128]
	movaps	xmm15, XMMWORD PTR [rsp+112]
$LN15@tron:
; Line 154
	mov	rcx, rbp
	call	??3@YAXPEAX@Z				; operator delete
; Line 155
	mov	rcx, QWORD PTR r$1$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 156
	mov	rcx, r13
	call	??3@YAXPEAX@Z				; operator delete
; Line 157
	mov	rcx, r15
	call	??3@YAXPEAX@Z				; operator delete
; Line 158
	lea	r11, QWORD PTR [rsp+272]
	mov	rbx, QWORD PTR [r11+72]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm12, XMMWORD PTR [r11-112]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?tron@TRON@@QEAAXPEAN@Z ENDP				; TRON::tron
_TEXT	ENDS
END
